{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22","program":"/Users/elton/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libc\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"mio-uds\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"rt-util\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"slab\"","--cfg","feature=\"stream\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","--cfg","feature=\"winapi\"","-C","metadata=03413798d160148f","-C","extra-filename=-03413798d160148f","--out-dir","/Volumes/data/study/rust/actix3-study/hello/target/rls/debug/deps","-L","dependency=/Volumes/data/study/rust/actix3-study/hello/target/rls/debug/deps","--extern","bytes=/Volumes/data/study/rust/actix3-study/hello/target/rls/debug/deps/libbytes-53f0a59b17d296b7.rmeta","--extern","futures_core=/Volumes/data/study/rust/actix3-study/hello/target/rls/debug/deps/libfutures_core-16d5bab9731d1177.rmeta","--extern","iovec=/Volumes/data/study/rust/actix3-study/hello/target/rls/debug/deps/libiovec-a2da3de3f20cc9d3.rmeta","--extern","lazy_static=/Volumes/data/study/rust/actix3-study/hello/target/rls/debug/deps/liblazy_static-0a76da841b4d8a97.rmeta","--extern","libc=/Volumes/data/study/rust/actix3-study/hello/target/rls/debug/deps/liblibc-088a7c27a69d3e61.rmeta","--extern","memchr=/Volumes/data/study/rust/actix3-study/hello/target/rls/debug/deps/libmemchr-534f34ee3fa4433b.rmeta","--extern","mio=/Volumes/data/study/rust/actix3-study/hello/target/rls/debug/deps/libmio-f6421e7d077af26a.rmeta","--extern","mio_uds=/Volumes/data/study/rust/actix3-study/hello/target/rls/debug/deps/libmio_uds-e961e0aad2c936f3.rmeta","--extern","pin_project_lite=/Volumes/data/study/rust/actix3-study/hello/target/rls/debug/deps/libpin_project_lite-920fd103012f96d7.rmeta","--extern","signal_hook_registry=/Volumes/data/study/rust/actix3-study/hello/target/rls/debug/deps/libsignal_hook_registry-960537155b513b41.rmeta","--extern","slab=/Volumes/data/study/rust/actix3-study/hello/target/rls/debug/deps/libslab-d56251c8c81f2347.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/elton/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Volumes/data/study/rust/actix3-study/hello/target/rls/debug/deps/libtokio-03413798d160148f.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[5895825235224374884,16159492256801080564]},"crate_root":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src","external_crates":[{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14920118443260649468,6799873627142870961]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[1844954537018218648,16570159001010767920]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16437105423049283034,13312228696766436902]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13569262031960136914,926278369663005569]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9065077540001280346,5972367981040449865]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7013975980446320719,4024400865057542973]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17617311883804814182,13753176117248034829]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10627003420787933698,8372112224406474813]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17821317327494065584,13808099233817094080]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[15423047965231407403,416074916754657818]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[13820017895795527141,8230108407990713412]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1402496660407379612,10608574961827181449]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17535701131653633025,17299066394660958529]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[4797083768912782472,17265154906292509739]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/try_join.rs","num":15,"id":{"name":"pin_project_lite","disambiguator":[13176939254456016097,11499618062034899473]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","num":16,"id":{"name":"bytes","disambiguator":[10857486754465809394,2433770276971163535]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","num":17,"id":{"name":"futures_core","disambiguator":[5302043164941903801,13561415477671954157]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":18,"id":{"name":"mio","disambiguator":[72227356245223529,5107389993324937765]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":19,"id":{"name":"net2","disambiguator":[17827041454443753877,1991220346079697041]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","num":20,"id":{"name":"libc","disambiguator":[2106072727114840833,17336729488627243165]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":21,"id":{"name":"cfg_if","disambiguator":[17559781862561062301,5532089208612334984]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","num":22,"id":{"name":"iovec","disambiguator":[13734841925567962986,18254909768561204474]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","num":23,"id":{"name":"slab","disambiguator":[8448618339644090097,4647731729882876830]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":24,"id":{"name":"log","disambiguator":[15831985723634696542,14165902014935613976]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","num":25,"id":{"name":"lazy_static","disambiguator":[14839071252340993957,4173087639422160489]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","num":26,"id":{"name":"mio_uds","disambiguator":[17510465622054726757,9870874331978359532]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","num":27,"id":{"name":"memchr","disambiguator":[13441648339959567409,13136444195947382762]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","num":28,"id":{"name":"signal_hook_registry","disambiguator":[9322584015677656356,1299352647417726002]}},{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","num":29,"id":{"name":"arc_swap","disambiguator":[2042550651081528561,13786377003224899017]}}],"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":0,"byte_end":15827,"line_start":1,"line_end":436,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":8329},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30953,"byte_end":30959,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":30110},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30979,"byte_end":30982,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":32605},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":31003,"byte_end":31007,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31111,"byte_end":31121,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":874},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31123,"byte_end":31132,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31166,"byte_end":31173,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45085,"byte_end":45097,"line_start":187,"line_end":187,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45143,"byte_end":45152,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45197,"byte_end":45206,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45253,"byte_end":45263,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1179},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45359,"byte_end":45370,"line_start":203,"line_end":203,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1183},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45421,"byte_end":45433,"line_start":206,"line_end":206,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1308},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45665,"byte_end":45670,"line_start":222,"line_end":222,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1302},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45672,"byte_end":45680,"line_start":222,"line_end":222,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1305},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45682,"byte_end":45691,"line_start":222,"line_end":222,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1310},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45744,"byte_end":45748,"line_start":225,"line_end":225,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2106},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45804,"byte_end":45808,"line_start":229,"line_end":229,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2128},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45810,"byte_end":45815,"line_start":229,"line_end":229,"column_start":15,"column_end":20},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2354},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45817,"byte_end":45823,"line_start":229,"line_end":229,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2369},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45825,"byte_end":45829,"line_start":229,"line_end":229,"column_start":30,"column_end":34},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2000},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45831,"byte_end":45846,"line_start":229,"line_end":229,"column_start":36,"column_end":51},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2008},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45848,"byte_end":45860,"line_start":229,"line_end":229,"column_start":53,"column_end":65},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1389},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45862,"byte_end":45874,"line_start":229,"line_end":229,"column_start":67,"column_end":79},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2060},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45876,"byte_end":45889,"line_start":229,"line_end":229,"column_start":81,"column_end":94},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9726},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45899,"byte_end":45908,"line_start":230,"line_end":230,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9712},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45910,"byte_end":45919,"line_start":230,"line_end":230,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9649},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45921,"byte_end":45930,"line_start":230,"line_end":230,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2110},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45932,"byte_end":45936,"line_start":230,"line_end":230,"column_start":42,"column_end":46},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2126},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45938,"byte_end":45943,"line_start":230,"line_end":230,"column_start":48,"column_end":53},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9577},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45945,"byte_end":45950,"line_start":230,"line_end":230,"column_start":55,"column_end":60},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2355},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45952,"byte_end":45958,"line_start":230,"line_end":230,"column_start":62,"column_end":68},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2367},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45960,"byte_end":45964,"line_start":230,"line_end":230,"column_start":70,"column_end":74},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":8743},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45966,"byte_end":45971,"line_start":230,"line_end":230,"column_start":76,"column_end":81},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":8652},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45973,"byte_end":45977,"line_start":230,"line_end":230,"column_start":83,"column_end":87},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2385},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46028,"byte_end":46041,"line_start":234,"line_end":234,"column_start":24,"column_end":37},"alias_span":null,"name":"stream_reader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":8697},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46043,"byte_end":46055,"line_start":234,"line_end":234,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2541},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46210,"byte_end":46215,"line_start":239,"line_end":239,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":6725},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46217,"byte_end":46226,"line_start":239,"line_end":239,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2539},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46228,"byte_end":46234,"line_start":239,"line_end":239,"column_start":41,"column_end":47},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":319},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72675,"byte_end":72688,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":2848},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8050395,"byte_end":8050403,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":2582}},{"kind":"Use","ref_id":{"krate":0,"index":2854},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8050433,"byte_end":8050441,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2582}},{"kind":"Use","ref_id":{"krate":0,"index":2861},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8050443,"byte_end":8050452,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2582}},{"kind":"Use","ref_id":{"krate":0,"index":2868},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8050495,"byte_end":8050508,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":2582}},{"kind":"Use","ref_id":{"krate":0,"index":2872},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8050510,"byte_end":8050524,"line_start":13,"line_end":13,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":2582}},{"kind":"Use","ref_id":{"krate":0,"index":2877},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8050526,"byte_end":8050538,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2582}},{"kind":"Use","ref_id":{"krate":0,"index":2878},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8050526,"byte_end":8050538,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2739}},{"kind":"Use","ref_id":{"krate":0,"index":2846},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72819,"byte_end":72830,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":2883},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72857,"byte_end":72866,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3019},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8110193,"byte_end":8110201,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":2885}},{"kind":"Use","ref_id":{"krate":0,"index":3024},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8110203,"byte_end":8110215,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2885}},{"kind":"Use","ref_id":{"krate":0,"index":3025},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8110203,"byte_end":8110215,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3009}},{"kind":"Use","ref_id":{"krate":0,"index":3014},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8110217,"byte_end":8110225,"line_start":7,"line_end":7,"column_start":41,"column_end":49},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":2885}},{"kind":"Use","ref_id":{"krate":0,"index":3012},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72924,"byte_end":72933,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3268},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8131281,"byte_end":8131289,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3030}},{"kind":"Use","ref_id":{"krate":0,"index":3276},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8131384,"byte_end":8131392,"line_start":12,"line_end":12,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3030}},{"kind":"Use","ref_id":{"krate":0,"index":3283},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8131394,"byte_end":8131403,"line_start":12,"line_end":12,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3030}},{"kind":"Use","ref_id":{"krate":0,"index":3292},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8131492,"byte_end":8131497,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":3030}},{"kind":"Use","ref_id":{"krate":0,"index":3266},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72995,"byte_end":73007,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3274},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":73037,"byte_end":73049,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3290},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":73077,"byte_end":73087,"line_start":48,"line_end":48,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105483,"byte_end":105485,"line_start":16,"line_end":16,"column_start":16,"column_end":18},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105494,"byte_end":105506,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105508,"byte_end":105517,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105519,"byte_end":105529,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2000},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105594,"byte_end":105609,"line_start":20,"line_end":20,"column_start":25,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2008},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105616,"byte_end":105628,"line_start":20,"line_end":20,"column_start":47,"column_end":59},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":1389},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105635,"byte_end":105647,"line_start":20,"line_end":20,"column_start":66,"column_end":78},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2060},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105654,"byte_end":105667,"line_start":20,"line_end":20,"column_start":85,"column_end":98},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":592},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113198,"byte_end":113205,"line_start":209,"line_end":209,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":4043},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113290,"byte_end":113296,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":660},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113298,"byte_end":113313,"line_start":215,"line_end":215,"column_start":32,"column_end":47},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":4134},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229862,"byte_end":8229868,"line_start":47,"line_end":47,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":4129}},{"kind":"Use","ref_id":{"krate":0,"index":4389},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8266772,"byte_end":8266782,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4481},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8266812,"byte_end":8266817,"line_start":21,"line_end":21,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4921},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8266819,"byte_end":8266824,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4582},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8266990,"byte_end":8266994,"line_start":36,"line_end":36,"column_start":16,"column_end":20},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4928},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8266996,"byte_end":8267000,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4672},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267110,"byte_end":8267114,"line_start":48,"line_end":48,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4942},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267116,"byte_end":8267120,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4695},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267155,"byte_end":8267162,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4948},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267164,"byte_end":8267171,"line_start":51,"line_end":51,"column_start":28,"column_end":35},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":4955},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267211,"byte_end":8267220,"line_start":54,"line_end":54,"column_start":21,"column_end":30},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":17,"index":68},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267512,"byte_end":8267518,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":4311}},{"kind":"Use","ref_id":{"krate":0,"index":3963},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8537192,"byte_end":8537201,"line_start":227,"line_end":227,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":3965},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8537203,"byte_end":8537213,"line_start":227,"line_end":227,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":5915},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8537251,"byte_end":8537256,"line_start":230,"line_end":230,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":5917},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8537301,"byte_end":8537310,"line_start":233,"line_end":233,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6077},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8537365,"byte_end":8537376,"line_start":238,"line_end":238,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6068},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8537378,"byte_end":8537386,"line_start":238,"line_end":238,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6020},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8537434,"byte_end":8537442,"line_start":241,"line_end":241,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":5915},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14562,"byte_end":14567,"line_start":389,"line_end":389,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6577},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570945,"byte_end":8570955,"line_start":101,"line_end":101,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6183},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570985,"byte_end":8570994,"line_start":104,"line_end":104,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6182},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570996,"byte_end":8571007,"line_start":104,"line_end":104,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6619},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8571009,"byte_end":8571014,"line_start":104,"line_end":104,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6676},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8571068,"byte_end":8571073,"line_start":109,"line_end":109,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6688},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8571112,"byte_end":8571119,"line_start":112,"line_end":112,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6436},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8571155,"byte_end":8571163,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6437},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8571165,"byte_end":8571176,"line_start":115,"line_end":115,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6711},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8571178,"byte_end":8571186,"line_start":115,"line_end":115,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6464},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8571236,"byte_end":8571243,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6466},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8571245,"byte_end":8571255,"line_start":119,"line_end":119,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6716},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8571257,"byte_end":8571264,"line_start":119,"line_end":119,"column_start":40,"column_end":47},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":7117},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8571266,"byte_end":8571273,"line_start":119,"line_end":119,"column_start":49,"column_end":56},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":6738},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8571332,"byte_end":8571340,"line_start":123,"line_end":123,"column_start":24,"column_end":32},"alias_span":null,"name":"throttle","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":0,"index":7071},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8571342,"byte_end":8571350,"line_start":123,"line_end":123,"column_start":34,"column_end":42},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":6092}},{"kind":"Use","ref_id":{"krate":2,"index":32469},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8571459,"byte_end":8571467,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":6092}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":0,"byte_end":15827,"line_start":1,"line_end":436,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":83},{"krate":0,"index":177},{"krate":0,"index":308},{"krate":0,"index":373},{"krate":0,"index":509},{"krate":0,"index":556},{"krate":0,"index":562},{"krate":0,"index":736},{"krate":0,"index":4129},{"krate":0,"index":4311},{"krate":0,"index":5000},{"krate":0,"index":5898},{"krate":0,"index":5899},{"krate":0,"index":6092},{"krate":0,"index":755}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":56,"byte_end":168,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":169,"byte_end":275,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":276,"byte_end":319,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"! A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":518,"byte_end":590,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":591,"byte_end":594,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":595,"byte_end":675,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"! applications with the Rust programming language. At a high level, it","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":676,"byte_end":748,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"! provides a few major components:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":749,"byte_end":785,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":786,"byte_end":789,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":790,"byte_end":857,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"!   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":858,"byte_end":938,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"!   intervals][time].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":939,"byte_end":962,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"! * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":963,"byte_end":1050,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"!   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1051,"byte_end":1124,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"! * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1125,"byte_end":1203,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"!   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1204,"byte_end":1284,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"!   IOCP, etc...), and a high performance timer.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1285,"byte_end":1335,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1336,"byte_end":1339,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! Guide level documentation is found on the [website].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1340,"byte_end":1396,"line_start":36,"line_end":36,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1397,"byte_end":1400,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! [tasks]: #working-with-tasks","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1401,"byte_end":1433,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"! [sync]: crate::sync","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1434,"byte_end":1457,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"! [time]: crate::time","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1458,"byte_end":1481,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"! [io]: #asynchronous-io","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1482,"byte_end":1508,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"! [net]: crate::net","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1509,"byte_end":1530,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"! [fs]: crate::fs","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1531,"byte_end":1550,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"! [process]: crate::process","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1551,"byte_end":1580,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"! [signal]: crate::signal","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1581,"byte_end":1608,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"! [fs]: crate::fs","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1609,"byte_end":1628,"line_start":46,"line_end":46,"column_start":1,"column_end":20}},{"value":"! [runtime]: crate::runtime","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1629,"byte_end":1658,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"! [website]: https://tokio.rs/docs/overview/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1659,"byte_end":1705,"line_start":48,"line_end":48,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1706,"byte_end":1709,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! # A Tour of Tokio","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1710,"byte_end":1731,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1732,"byte_end":1735,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1736,"byte_end":1815,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"! essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1816,"byte_end":1889,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"! section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1890,"byte_end":1969,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"! their uses.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1970,"byte_end":1985,"line_start":55,"line_end":55,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1986,"byte_end":1989,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1990,"byte_end":2062,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"! enabling the `full` feature flag:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2063,"byte_end":2100,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2101,"byte_end":2104,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2105,"byte_end":2116,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2117,"byte_end":2169,"line_start":61,"line_end":61,"column_start":1,"column_end":53}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2170,"byte_end":2177,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2178,"byte_end":2181,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! ## Feature flags","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2182,"byte_end":2202,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2203,"byte_end":2206,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2207,"byte_end":2288,"line_start":66,"line_end":66,"column_start":1,"column_end":82}},{"value":"! is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2289,"byte_end":2367,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"! does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2368,"byte_end":2448,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"! case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2449,"byte_end":2526,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"! above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2527,"byte_end":2610,"line_start":70,"line_end":70,"column_start":1,"column_end":84}},{"value":"! that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2611,"byte_end":2688,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"! recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2689,"byte_end":2776,"line_start":72,"line_end":72,"column_start":1,"column_end":88}},{"value":"! Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2777,"byte_end":2858,"line_start":73,"line_end":73,"column_start":1,"column_end":82}},{"value":"! need.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2859,"byte_end":2868,"line_start":74,"line_end":74,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2869,"byte_end":2872,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2873,"byte_end":2938,"line_start":76,"line_end":76,"column_start":1,"column_end":66}},{"value":"! - `rt-core`: Enables `tokio::spawn` and the basic (single-threaded) scheduler.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2939,"byte_end":3021,"line_start":77,"line_end":77,"column_start":1,"column_end":83}},{"value":"! - `rt-threaded`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3022,"byte_end":3104,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"! - `rt-util`: Enables non-scheduler utilities.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3105,"byte_end":3154,"line_start":79,"line_end":79,"column_start":1,"column_end":50}},{"value":"! - `io-driver`: Enables the `mio` based IO driver.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3155,"byte_end":3208,"line_start":80,"line_end":80,"column_start":1,"column_end":54}},{"value":"! - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3209,"byte_end":3260,"line_start":81,"line_end":81,"column_start":1,"column_end":52}},{"value":"! - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3261,"byte_end":3321,"line_start":82,"line_end":82,"column_start":1,"column_end":61}},{"value":"! - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3322,"byte_end":3412,"line_start":83,"line_end":83,"column_start":1,"column_end":91}},{"value":"! - `tcp`: Enables all `tokio::net::tcp` types.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3413,"byte_end":3462,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"! - `udp`: Enables all `tokio::net::udp` types.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3463,"byte_end":3512,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"! - `uds`: Enables all `tokio::net::unix` types.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3513,"byte_end":3563,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"! - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3564,"byte_end":3641,"line_start":87,"line_end":87,"column_start":1,"column_end":78}},{"value":"! the built in timer.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3642,"byte_end":3665,"line_start":88,"line_end":88,"column_start":1,"column_end":24}},{"value":"! - `process`: Enables `tokio::process` types.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3666,"byte_end":3714,"line_start":89,"line_end":89,"column_start":1,"column_end":49}},{"value":"! - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3715,"byte_end":3784,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"! - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3785,"byte_end":3831,"line_start":91,"line_end":91,"column_start":1,"column_end":47}},{"value":"! - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3832,"byte_end":3913,"line_start":92,"line_end":92,"column_start":1,"column_end":82}},{"value":"! - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3914,"byte_end":3964,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"! - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3965,"byte_end":4003,"line_start":94,"line_end":94,"column_start":1,"column_end":39}},{"value":"! - `dns`: Enables async `tokio::net::ToSocketAddrs`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4004,"byte_end":4059,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"! - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4060,"byte_end":4138,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"! - `blocking`: Enables `block_in_place` and `spawn_blocking`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4139,"byte_end":4203,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4204,"byte_end":4207,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4208,"byte_end":4290,"line_start":99,"line_end":99,"column_start":1,"column_end":83}},{"value":"! always available._","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4291,"byte_end":4313,"line_start":100,"line_end":100,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4314,"byte_end":4317,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! ### Internal features","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4318,"byte_end":4343,"line_start":102,"line_end":102,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4344,"byte_end":4347,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"! These features do not expose any new API, but influence internal","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4348,"byte_end":4416,"line_start":104,"line_end":104,"column_start":1,"column_end":69}},{"value":"! implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4417,"byte_end":4480,"line_start":105,"line_end":105,"column_start":1,"column_end":64}},{"value":"! dependencies. They are not included in `full`:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4481,"byte_end":4531,"line_start":106,"line_end":106,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4532,"byte_end":4535,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4536,"byte_end":4615,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"! synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4616,"byte_end":4693,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"! _parking_lot_ release in use.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4694,"byte_end":4727,"line_start":110,"line_end":110,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4728,"byte_end":4731,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4732,"byte_end":4829,"line_start":112,"line_end":112,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4830,"byte_end":4833,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! ### Authoring applications","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4834,"byte_end":4864,"line_start":114,"line_end":114,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4865,"byte_end":4868,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4869,"byte_end":4950,"line_start":116,"line_end":116,"column_start":1,"column_end":82}},{"value":"! worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4951,"byte_end":5036,"line_start":117,"line_end":117,"column_start":1,"column_end":86}},{"value":"! going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5037,"byte_end":5121,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"! building your application.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5122,"byte_end":5152,"line_start":119,"line_end":119,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5153,"byte_end":5156,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! #### Example","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5157,"byte_end":5173,"line_start":121,"line_end":121,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5174,"byte_end":5177,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! This example shows the quickest way to get started with Tokio.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5178,"byte_end":5244,"line_start":123,"line_end":123,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5245,"byte_end":5248,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5249,"byte_end":5260,"line_start":125,"line_end":125,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5261,"byte_end":5313,"line_start":126,"line_end":126,"column_start":1,"column_end":53}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5314,"byte_end":5321,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5322,"byte_end":5325,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! ### Authoring libraries","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5326,"byte_end":5353,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5354,"byte_end":5357,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5358,"byte_end":5437,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"! that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5438,"byte_end":5520,"line_start":132,"line_end":132,"column_start":1,"column_end":83}},{"value":"! the features you need. This allows users to pick up your crate without having","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5521,"byte_end":5602,"line_start":133,"line_end":133,"column_start":1,"column_end":82}},{"value":"! to enable unnecessary features.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5603,"byte_end":5638,"line_start":134,"line_end":134,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5639,"byte_end":5642,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! #### Example","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5643,"byte_end":5659,"line_start":136,"line_end":136,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5660,"byte_end":5663,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! This example shows how you may want to import features for a library that just","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5664,"byte_end":5746,"line_start":138,"line_end":138,"column_start":1,"column_end":83}},{"value":"! needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5747,"byte_end":5797,"line_start":139,"line_end":139,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5798,"byte_end":5801,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5802,"byte_end":5813,"line_start":141,"line_end":141,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"rt-core\", \"tcp\"] }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5814,"byte_end":5876,"line_start":142,"line_end":142,"column_start":1,"column_end":63}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5877,"byte_end":5884,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5885,"byte_end":5888,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! ## Working With Tasks","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5889,"byte_end":5914,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5915,"byte_end":5918,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5919,"byte_end":5995,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"! units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5996,"byte_end":6079,"line_start":148,"line_end":148,"column_start":1,"column_end":84}},{"value":"! important tools for working with tasks:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6080,"byte_end":6123,"line_start":149,"line_end":149,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6124,"byte_end":6127,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6128,"byte_end":6207,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"!   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6208,"byte_end":6291,"line_start":152,"line_end":152,"column_start":1,"column_end":84}},{"value":"! * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6292,"byte_end":6370,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"!   task context.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6371,"byte_end":6390,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6391,"byte_end":6394,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"! The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6395,"byte_end":6473,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"! is enabled.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6474,"byte_end":6489,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6490,"byte_end":6493,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6494,"byte_end":6537,"line_start":159,"line_end":159,"column_start":1,"column_end":44}},{"value":"! [`tokio::task`]: crate::task","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6538,"byte_end":6570,"line_start":160,"line_end":160,"column_start":1,"column_end":33}},{"value":"! [`spawn`]: crate::task::spawn()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6571,"byte_end":6606,"line_start":161,"line_end":161,"column_start":1,"column_end":36}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6607,"byte_end":6650,"line_start":162,"line_end":162,"column_start":1,"column_end":44}},{"value":"! [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6651,"byte_end":6704,"line_start":163,"line_end":163,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6705,"byte_end":6708,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6709,"byte_end":6787,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"! needing to communicate or share data. These include:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6788,"byte_end":6844,"line_start":166,"line_end":166,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6845,"byte_end":6848,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"! * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6849,"byte_end":6922,"line_start":168,"line_end":168,"column_start":1,"column_end":74}},{"value":"!   between tasks,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6923,"byte_end":6943,"line_start":169,"line_end":169,"column_start":1,"column_end":21}},{"value":"! * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6944,"byte_end":7019,"line_start":170,"line_end":170,"column_start":1,"column_end":76}},{"value":"!   value,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7020,"byte_end":7032,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"! * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7033,"byte_end":7113,"line_start":172,"line_end":172,"column_start":1,"column_end":81}},{"value":"!   beginning a computation.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7114,"byte_end":7144,"line_start":173,"line_end":173,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7145,"byte_end":7148,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7149,"byte_end":7225,"line_start":175,"line_end":175,"column_start":1,"column_end":77}},{"value":"! enabled.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7226,"byte_end":7238,"line_start":176,"line_end":176,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7239,"byte_end":7242,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"! [`tokio::sync`]: crate::sync","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7243,"byte_end":7275,"line_start":178,"line_end":178,"column_start":1,"column_end":33}},{"value":"! [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7276,"byte_end":7309,"line_start":179,"line_end":179,"column_start":1,"column_end":34}},{"value":"! [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7310,"byte_end":7347,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"! [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7348,"byte_end":7385,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"! [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7386,"byte_end":7417,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"! [`watch`]: crate::sync::watch","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7418,"byte_end":7451,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7452,"byte_end":7455,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"! The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7456,"byte_end":7527,"line_start":185,"line_end":185,"column_start":1,"column_end":72}},{"value":"! scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7528,"byte_end":7608,"line_start":186,"line_end":186,"column_start":1,"column_end":81}},{"value":"! tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7609,"byte_end":7697,"line_start":187,"line_end":187,"column_start":1,"column_end":89}},{"value":"! interval][interval].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7698,"byte_end":7722,"line_start":188,"line_end":188,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7723,"byte_end":7726,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"! In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7727,"byte_end":7802,"line_start":190,"line_end":190,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7803,"byte_end":7806,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"! [`tokio::time`]: crate::time","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7807,"byte_end":7839,"line_start":192,"line_end":192,"column_start":1,"column_end":33}},{"value":"! [delay]: crate::time::delay_for()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7840,"byte_end":7877,"line_start":193,"line_end":193,"column_start":1,"column_end":38}},{"value":"! [interval]: crate::time::interval()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7878,"byte_end":7917,"line_start":194,"line_end":194,"column_start":1,"column_end":40}},{"value":"! [timeout]: crate::time::timeout()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7918,"byte_end":7955,"line_start":195,"line_end":195,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7956,"byte_end":7959,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7960,"byte_end":8038,"line_start":197,"line_end":197,"column_start":1,"column_end":79}},{"value":"! applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8039,"byte_end":8123,"line_start":198,"line_end":198,"column_start":1,"column_end":85}},{"value":"! Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8124,"byte_end":8196,"line_start":199,"line_end":199,"column_start":1,"column_end":73}},{"value":"! required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8197,"byte_end":8274,"line_start":200,"line_end":200,"column_start":1,"column_end":78}},{"value":"! managing runtimes.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8275,"byte_end":8297,"line_start":201,"line_end":201,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8298,"byte_end":8301,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"! Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8302,"byte_end":8381,"line_start":203,"line_end":203,"column_start":1,"column_end":80}},{"value":"! enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8382,"byte_end":8460,"line_start":204,"line_end":204,"column_start":1,"column_end":79}},{"value":"! scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8461,"byte_end":8529,"line_start":205,"line_end":205,"column_start":1,"column_end":69}},{"value":"! documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8530,"byte_end":8608,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"! flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8609,"byte_end":8679,"line_start":207,"line_end":207,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8680,"byte_end":8683,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"! [main]: attr.main.html","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8684,"byte_end":8710,"line_start":209,"line_end":209,"column_start":1,"column_end":27}},{"value":"! [`tokio::runtime`]: crate::runtime","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8711,"byte_end":8749,"line_start":210,"line_end":210,"column_start":1,"column_end":39}},{"value":"! [`Builder`]: crate::runtime::Builder","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8750,"byte_end":8790,"line_start":211,"line_end":211,"column_start":1,"column_end":41}},{"value":"! [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8791,"byte_end":8831,"line_start":212,"line_end":212,"column_start":1,"column_end":41}},{"value":"! [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8832,"byte_end":8881,"line_start":213,"line_end":213,"column_start":1,"column_end":50}},{"value":"! [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8882,"byte_end":8938,"line_start":214,"line_end":214,"column_start":1,"column_end":57}},{"value":"! [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8939,"byte_end":8994,"line_start":215,"line_end":215,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8995,"byte_end":8998,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"! ## CPU-bound tasks and blocking code","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8999,"byte_end":9039,"line_start":217,"line_end":217,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9040,"byte_end":9043,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"! Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9044,"byte_end":9123,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"! swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9124,"byte_end":9201,"line_start":220,"line_end":220,"column_start":1,"column_end":78}},{"value":"! swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9202,"byte_end":9282,"line_start":221,"line_end":221,"column_start":1,"column_end":81}},{"value":"! without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9283,"byte_end":9357,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"! combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9358,"byte_end":9437,"line_start":223,"line_end":223,"column_start":1,"column_end":80}},{"value":"! threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9438,"byte_end":9515,"line_start":224,"line_end":224,"column_start":1,"column_end":78}},{"value":"! will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9516,"byte_end":9589,"line_start":225,"line_end":225,"column_start":1,"column_end":74}},{"value":"! spawned on demand, and can be used to run blocking code that would otherwise","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9590,"byte_end":9670,"line_start":226,"line_end":226,"column_start":1,"column_end":81}},{"value":"! block other tasks from running. Since it is not possible for Tokio to swap","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9671,"byte_end":9749,"line_start":227,"line_end":227,"column_start":1,"column_end":79}},{"value":"! out blocking tasks, like it can do with asynchronous code, the upper limit","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9750,"byte_end":9828,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"! on the number of blocking threads is very large. These limits can be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9829,"byte_end":9901,"line_start":229,"line_end":229,"column_start":1,"column_end":73}},{"value":"! configured on the [`Builder`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9902,"byte_end":9936,"line_start":230,"line_end":230,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9937,"byte_end":9940,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"! To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9941,"byte_end":10018,"line_start":232,"line_end":232,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10019,"byte_end":10022,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"! [`Builder`]: crate::runtime::Builder","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10023,"byte_end":10063,"line_start":234,"line_end":234,"column_start":1,"column_end":41}},{"value":"! [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10064,"byte_end":10117,"line_start":235,"line_end":235,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10118,"byte_end":10121,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10122,"byte_end":10129,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10130,"byte_end":10148,"line_start":238,"line_end":238,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10149,"byte_end":10170,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"!     // This is running on a core thread.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10171,"byte_end":10215,"line_start":240,"line_end":240,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10216,"byte_end":10219,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"!     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10220,"byte_end":10280,"line_start":242,"line_end":242,"column_start":1,"column_end":61}},{"value":"!         // This is running on a blocking thread.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10281,"byte_end":10333,"line_start":243,"line_end":243,"column_start":1,"column_end":53}},{"value":"!         // Blocking here is ok.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10334,"byte_end":10369,"line_start":244,"line_end":244,"column_start":1,"column_end":36}},{"value":"!     });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10370,"byte_end":10381,"line_start":245,"line_end":245,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10382,"byte_end":10385,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"!     // We can wait for the blocking task like this:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10386,"byte_end":10441,"line_start":247,"line_end":247,"column_start":1,"column_end":56}},{"value":"!     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10442,"byte_end":10517,"line_start":248,"line_end":248,"column_start":1,"column_end":76}},{"value":"!     // panic.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10518,"byte_end":10535,"line_start":249,"line_end":249,"column_start":1,"column_end":18}},{"value":"!     blocking_task.await.unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10536,"byte_end":10573,"line_start":250,"line_end":250,"column_start":1,"column_end":38}},{"value":"! }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10574,"byte_end":10579,"line_start":251,"line_end":251,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10580,"byte_end":10587,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10588,"byte_end":10591,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"! If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10592,"byte_end":10670,"line_start":254,"line_end":254,"column_start":1,"column_end":79}},{"value":"! to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10671,"byte_end":10747,"line_start":255,"line_end":255,"column_start":1,"column_end":77}},{"value":"! can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10748,"byte_end":10824,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"! rayon task finishes.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10825,"byte_end":10849,"line_start":257,"line_end":257,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10850,"byte_end":10853,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"! [rayon]: https://docs.rs/rayon","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10854,"byte_end":10888,"line_start":259,"line_end":259,"column_start":1,"column_end":35}},{"value":"! [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10889,"byte_end":10926,"line_start":260,"line_end":260,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10927,"byte_end":10930,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"! ## Asynchronous IO","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10931,"byte_end":10953,"line_start":262,"line_end":262,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10954,"byte_end":10957,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"! As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10958,"byte_end":11037,"line_start":264,"line_end":264,"column_start":1,"column_end":80}},{"value":"! to perform input and output asynchronously.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11038,"byte_end":11085,"line_start":265,"line_end":265,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11086,"byte_end":11089,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"! The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11090,"byte_end":11169,"line_start":267,"line_end":267,"column_start":1,"column_end":80}},{"value":"! the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11170,"byte_end":11250,"line_start":268,"line_end":268,"column_start":1,"column_end":81}},{"value":"! when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11251,"byte_end":11331,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"! functions for working with these traits, forming as an asynchronous","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11332,"byte_end":11403,"line_start":270,"line_end":270,"column_start":1,"column_end":72}},{"value":"! counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11404,"byte_end":11484,"line_start":271,"line_end":271,"column_start":1,"column_end":81}},{"value":"! also provides utilities for library authors implementing I/O resources.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11485,"byte_end":11560,"line_start":272,"line_end":272,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11561,"byte_end":11564,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"! Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11565,"byte_end":11645,"line_start":274,"line_end":274,"column_start":1,"column_end":81}},{"value":"! with the operating system asynchronously. These include:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11646,"byte_end":11706,"line_start":275,"line_end":275,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11707,"byte_end":11710,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"! * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11711,"byte_end":11790,"line_start":277,"line_end":277,"column_start":1,"column_end":80}},{"value":"!   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11791,"byte_end":11860,"line_start":278,"line_end":278,"column_start":1,"column_end":70}},{"value":"! * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11861,"byte_end":11938,"line_start":279,"line_end":279,"column_start":1,"column_end":78}},{"value":"!   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11939,"byte_end":11995,"line_start":280,"line_end":280,"column_start":1,"column_end":57}},{"value":"! * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11996,"byte_end":12076,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"!   (enabled by the \"signal\" feature flag),","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12077,"byte_end":12122,"line_start":282,"line_end":282,"column_start":1,"column_end":46}},{"value":"! * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12123,"byte_end":12202,"line_start":283,"line_end":283,"column_start":1,"column_end":80}},{"value":"!   the \"process\" feature flag).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12203,"byte_end":12237,"line_start":284,"line_end":284,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12238,"byte_end":12241,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"! [`tokio::io`]: crate::io","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12242,"byte_end":12270,"line_start":286,"line_end":286,"column_start":1,"column_end":29}},{"value":"! [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12271,"byte_end":12310,"line_start":287,"line_end":287,"column_start":1,"column_end":40}},{"value":"! [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12311,"byte_end":12352,"line_start":288,"line_end":288,"column_start":1,"column_end":42}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12353,"byte_end":12398,"line_start":289,"line_end":289,"column_start":1,"column_end":46}},{"value":"! [`std::io`]: std::io","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12399,"byte_end":12423,"line_start":290,"line_end":290,"column_start":1,"column_end":25}},{"value":"! [`tokio::net`]: crate::net","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12424,"byte_end":12454,"line_start":291,"line_end":291,"column_start":1,"column_end":31}},{"value":"! [TCP]: crate::net::tcp","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12455,"byte_end":12481,"line_start":292,"line_end":292,"column_start":1,"column_end":27}},{"value":"! [UDP]: crate::net::udp","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12482,"byte_end":12508,"line_start":293,"line_end":293,"column_start":1,"column_end":27}},{"value":"! [UDS]: crate::net::unix","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12509,"byte_end":12536,"line_start":294,"line_end":294,"column_start":1,"column_end":28}},{"value":"! [`tokio::fs`]: crate::fs","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12537,"byte_end":12565,"line_start":295,"line_end":295,"column_start":1,"column_end":29}},{"value":"! [`std::fs`]: std::fs","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12566,"byte_end":12590,"line_start":296,"line_end":296,"column_start":1,"column_end":25}},{"value":"! [`tokio::signal`]: crate::signal","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12591,"byte_end":12627,"line_start":297,"line_end":297,"column_start":1,"column_end":37}},{"value":"! [`tokio::process`]: crate::process","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12628,"byte_end":12666,"line_start":298,"line_end":298,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12667,"byte_end":12670,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12671,"byte_end":12685,"line_start":300,"line_end":300,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12686,"byte_end":12689,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"! A simple TCP echo server:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12690,"byte_end":12719,"line_start":302,"line_end":302,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12720,"byte_end":12723,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12724,"byte_end":12737,"line_start":304,"line_end":304,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12738,"byte_end":12770,"line_start":305,"line_end":305,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12771,"byte_end":12797,"line_start":306,"line_end":306,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12798,"byte_end":12801,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12802,"byte_end":12820,"line_start":308,"line_end":308,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12821,"byte_end":12884,"line_start":309,"line_end":309,"column_start":1,"column_end":64}},{"value":"!     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12885,"byte_end":12955,"line_start":310,"line_end":310,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12956,"byte_end":12959,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12960,"byte_end":12974,"line_start":312,"line_end":312,"column_start":1,"column_end":15}},{"value":"!         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12975,"byte_end":13034,"line_start":313,"line_end":313,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13035,"byte_end":13038,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13039,"byte_end":13076,"line_start":315,"line_end":315,"column_start":1,"column_end":38}},{"value":"!             let mut buf = [0; 1024];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13077,"byte_end":13117,"line_start":316,"line_end":316,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13118,"byte_end":13121,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"!             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13122,"byte_end":13202,"line_start":318,"line_end":318,"column_start":1,"column_end":81}},{"value":"!             loop {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13203,"byte_end":13225,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"!                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13226,"byte_end":13289,"line_start":320,"line_end":320,"column_start":1,"column_end":64}},{"value":"!                     // socket closed","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13290,"byte_end":13330,"line_start":321,"line_end":321,"column_start":1,"column_end":41}},{"value":"!                     Ok(n) if n == 0 => return,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13331,"byte_end":13381,"line_start":322,"line_end":322,"column_start":1,"column_end":51}},{"value":"!                     Ok(n) => n,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13382,"byte_end":13417,"line_start":323,"line_end":323,"column_start":1,"column_end":36}},{"value":"!                     Err(e) => {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13418,"byte_end":13453,"line_start":324,"line_end":324,"column_start":1,"column_end":36}},{"value":"!                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13454,"byte_end":13537,"line_start":325,"line_end":325,"column_start":1,"column_end":84}},{"value":"!                         return;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13538,"byte_end":13573,"line_start":326,"line_end":326,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13574,"byte_end":13599,"line_start":327,"line_end":327,"column_start":1,"column_end":26}},{"value":"!                 };","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13600,"byte_end":13622,"line_start":328,"line_end":328,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13623,"byte_end":13626,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"!                 // Write the data back","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13627,"byte_end":13669,"line_start":330,"line_end":330,"column_start":1,"column_end":43}},{"value":"!                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13670,"byte_end":13742,"line_start":331,"line_end":331,"column_start":1,"column_end":73}},{"value":"!                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13743,"byte_end":13821,"line_start":332,"line_end":332,"column_start":1,"column_end":79}},{"value":"!                     return;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13822,"byte_end":13853,"line_start":333,"line_end":333,"column_start":1,"column_end":32}},{"value":"!                 }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13854,"byte_end":13875,"line_start":334,"line_end":334,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13876,"byte_end":13893,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13894,"byte_end":13909,"line_start":336,"line_end":336,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13910,"byte_end":13919,"line_start":337,"line_end":337,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13920,"byte_end":13925,"line_start":338,"line_end":338,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13926,"byte_end":13933,"line_start":339,"line_end":339,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14122,"byte_end":14134,"line_start":345,"line_end":345,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/mod.rs","byte_start":15864,"byte_end":15884,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":83},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":176}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"allow(unused_imports, dead_code)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31010,"byte_end":31046,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"! Asynchronous values.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31048,"byte_end":31072,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":876},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31537,"byte_end":31543,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":874},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31502,"byte_end":31532,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":879},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31597,"byte_end":31601,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":874},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31554,"byte_end":31592,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":882},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31763,"byte_end":31767,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":874},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31620,"byte_end":31686,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31691,"byte_end":31758,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":874},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31473,"byte_end":31482,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":882}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31409,"byte_end":31446,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":93},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31930,"byte_end":31940,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31885,"byte_end":31922,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32343,"byte_end":32353,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32059,"byte_end":32144,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32149,"byte_end":32220,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32225,"byte_end":32298,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32303,"byte_end":32331,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32731,"byte_end":32742,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32610,"byte_end":32677,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32682,"byte_end":32705,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32710,"byte_end":32719,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33954,"byte_end":33960,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":115}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33902,"byte_end":33942,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34090,"byte_end":34097,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34011,"byte_end":34082,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":887},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34862,"byte_end":34867,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34633,"byte_end":34674,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34675,"byte_end":34678,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34679,"byte_end":34756,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34825,"byte_end":34850,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":177},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":307},{"krate":0,"index":969},{"krate":0,"index":1065},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1152},{"krate":0,"index":1188},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"! Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37622,"byte_end":37699,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37700,"byte_end":37703,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37704,"byte_end":37775,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"! defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37776,"byte_end":37856,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37857,"byte_end":37931,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37932,"byte_end":37935,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # AsyncRead and AsyncWrite","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37936,"byte_end":37966,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37967,"byte_end":37970,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37971,"byte_end":38051,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"! [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38052,"byte_end":38129,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"! input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38130,"byte_end":38207,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"! _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38208,"byte_end":38288,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"! type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38289,"byte_end":38367,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38368,"byte_end":38433,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38434,"byte_end":38437,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38438,"byte_end":38510,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"! core methods needed to provide asynchronous reading and writing","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38511,"byte_end":38578,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"! functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38579,"byte_end":38658,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"! and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38659,"byte_end":38733,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"! implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38734,"byte_end":38808,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"! respectively.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38809,"byte_end":38826,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38827,"byte_end":38830,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38831,"byte_end":38895,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"! `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38896,"byte_end":38971,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"! extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38972,"byte_end":39047,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"! and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39048,"byte_end":39125,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39126,"byte_end":39129,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39130,"byte_end":39206,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"! can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39207,"byte_end":39282,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"! `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39283,"byte_end":39363,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"! and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39364,"byte_end":39435,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"! `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39436,"byte_end":39505,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39506,"byte_end":39509,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! For example, the standard library documentation introduces `Read` by","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39510,"byte_end":39582,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"! [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39583,"byte_end":39663,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"! can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39664,"byte_end":39717,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39718,"byte_end":39721,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39722,"byte_end":39735,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39736,"byte_end":39776,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"! use tokio::fs::File;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39777,"byte_end":39801,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39802,"byte_end":39805,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39806,"byte_end":39824,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39825,"byte_end":39864,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"!     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39865,"byte_end":39914,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"!     let mut buffer = [0; 10];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39915,"byte_end":39948,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39949,"byte_end":39952,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     // read up to 10 bytes","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39953,"byte_end":39983,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"!     let n = f.read(&mut buffer).await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39984,"byte_end":40027,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40028,"byte_end":40031,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"!     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40032,"byte_end":40082,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"!     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40083,"byte_end":40097,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40098,"byte_end":40103,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40104,"byte_end":40111,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40112,"byte_end":40115,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! [`File`]: crate::fs::File","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40116,"byte_end":40145,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"! [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40146,"byte_end":40186,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"! [`std::fs::File`]: std::fs::File","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40187,"byte_end":40223,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"! [std_example]: std::io#read-and-write","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40224,"byte_end":40265,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40266,"byte_end":40269,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! ## Buffered Readers and Writers","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40270,"byte_end":40305,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40306,"byte_end":40309,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40310,"byte_end":40391,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"! making near-constant calls to the operating system. To help with this,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40392,"byte_end":40466,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"! `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40467,"byte_end":40545,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"! and therefore, `tokio::io` does as well.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40546,"byte_end":40590,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40591,"byte_end":40594,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40595,"byte_end":40665,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"! [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40666,"byte_end":40744,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"! wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40745,"byte_end":40823,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"! of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40824,"byte_end":40901,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40902,"byte_end":40905,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40906,"byte_end":40981,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"! extra methods to any async reader:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40982,"byte_end":41020,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41021,"byte_end":41024,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41025,"byte_end":41038,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41039,"byte_end":41093,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"! use tokio::fs::File;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41094,"byte_end":41118,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41119,"byte_end":41122,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41123,"byte_end":41141,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41142,"byte_end":41181,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"!     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41182,"byte_end":41227,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"!     let mut reader = BufReader::new(f);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41228,"byte_end":41271,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"!     let mut buffer = String::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41272,"byte_end":41311,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41312,"byte_end":41315,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"!     // read a line into buffer","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41316,"byte_end":41350,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"!     reader.read_line(&mut buffer).await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41351,"byte_end":41396,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41397,"byte_end":41400,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"!     println!(\"{}\", buffer);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41401,"byte_end":41432,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"!     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41433,"byte_end":41447,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41448,"byte_end":41453,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41454,"byte_end":41461,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41462,"byte_end":41465,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41466,"byte_end":41547,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"! to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41548,"byte_end":41626,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"! [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41627,"byte_end":41689,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41690,"byte_end":41693,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41694,"byte_end":41707,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41708,"byte_end":41760,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"! use tokio::fs::File;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41761,"byte_end":41785,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41786,"byte_end":41789,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41790,"byte_end":41808,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41809,"byte_end":41848,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"!     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41849,"byte_end":41896,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"!     {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41897,"byte_end":41906,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"!         let mut writer = BufWriter::new(f);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41907,"byte_end":41954,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41955,"byte_end":41958,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"!         // Write a byte to the buffer.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41959,"byte_end":42001,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"!         writer.write(&[42u8]).await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42002,"byte_end":42043,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42044,"byte_end":42047,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"!         // Flush the buffer before it goes out of scope.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42048,"byte_end":42108,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"!         writer.flush().await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42109,"byte_end":42143,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42144,"byte_end":42147,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"!     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42148,"byte_end":42238,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42239,"byte_end":42242,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42243,"byte_end":42257,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42258,"byte_end":42263,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42264,"byte_end":42271,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42272,"byte_end":42275,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42276,"byte_end":42321,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"! [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42322,"byte_end":42364,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42365,"byte_end":42410,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"! [`BufReader`]: crate::io::BufReader","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42411,"byte_end":42450,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"! [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42451,"byte_end":42490,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42491,"byte_end":42494,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42495,"byte_end":42539,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42540,"byte_end":42543,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42544,"byte_end":42626,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"! our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42627,"byte_end":42706,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"! non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42707,"byte_end":42781,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"! other words, these types must never block the thread, and instead the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42782,"byte_end":42855,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"! current task is notified when the I/O resource is ready.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42856,"byte_end":42916,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42917,"byte_end":42920,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! ## Conversion to and from Sink/Stream","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42921,"byte_end":42962,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42963,"byte_end":42966,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42967,"byte_end":43035,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"! bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43036,"byte_end":43105,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"! type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43106,"byte_end":43172,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"! provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43173,"byte_end":43236,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"! abstract the asynchronous buffering that is required and allows","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43237,"byte_end":43304,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"! you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43305,"byte_end":43374,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"! buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43375,"byte_end":43445,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"! that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43446,"byte_end":43524,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"! your structured data.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43525,"byte_end":43550,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43551,"byte_end":43554,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! [tokio-util]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43555,"byte_end":43631,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43632,"byte_end":43635,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"! # Standard input and output","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43636,"byte_end":43667,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43668,"byte_end":43671,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43672,"byte_end":43752,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"! These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43753,"byte_end":43829,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"! implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43830,"byte_end":43877,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43878,"byte_end":43881,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43882,"byte_end":43955,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"! context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43956,"byte_end":44032,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"! function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44033,"byte_end":44109,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44110,"byte_end":44113,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! [input]: fn@stdin","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44114,"byte_end":44135,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"! [output]: fn@stdout","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44136,"byte_end":44159,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"! [error]: fn@stderr","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44160,"byte_end":44182,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44183,"byte_end":44186,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"! # `std` re-exports","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44187,"byte_end":44209,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44210,"byte_end":44213,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! Additionally, [`Error`], [`ErrorKind`], and [`Result`] are re-exported","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44214,"byte_end":44288,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"! from `std::io` for ease of use.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44289,"byte_end":44324,"line_start":166,"line_end":166,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44325,"byte_end":44328,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44329,"byte_end":44363,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"! [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44364,"byte_end":44400,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"! [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44401,"byte_end":44441,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"! [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44442,"byte_end":44484,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"! [\"codec\"]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44485,"byte_end":44558,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"! [`Encoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44559,"byte_end":44642,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"! [`Decoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44643,"byte_end":44726,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"! [`Error`]: struct@Error","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44727,"byte_end":44754,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"! [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44755,"byte_end":44788,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"! [`Result`]: type@Result","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44789,"byte_end":44816,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"! [`Read`]: std::io::Read","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44817,"byte_end":44844,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"! [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44845,"byte_end":44915,"line_start":179,"line_end":179,"column_start":1,"column_end":71}},{"value":"! [`Stream`]: crate::stream::Stream","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44916,"byte_end":44953,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"! [`Write`]: std::io::Write","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44954,"byte_end":44983,"line_start":181,"line_end":181,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":186},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47360,"byte_end":47372,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46683,"byte_end":46714,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46715,"byte_end":46718,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46719,"byte_end":46791,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46792,"byte_end":46870,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46871,"byte_end":46957,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46958,"byte_end":47035,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47036,"byte_end":47047,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47048,"byte_end":47051,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47052,"byte_end":47120,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47121,"byte_end":47145,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47146,"byte_end":47149,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47150,"byte_end":47192,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47193,"byte_end":47243,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47244,"byte_end":47297,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47298,"byte_end":47349,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48470,"byte_end":48483,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47390,"byte_end":47475,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47480,"byte_end":47521,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47526,"byte_end":47529,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47534,"byte_end":47581,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47586,"byte_end":47589,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47594,"byte_end":47653,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47658,"byte_end":47716,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47721,"byte_end":47802,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47807,"byte_end":47833,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47838,"byte_end":47841,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47846,"byte_end":47917,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47922,"byte_end":47984,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47989,"byte_end":48060,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48065,"byte_end":48146,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48151,"byte_end":48227,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48232,"byte_end":48283,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48288,"byte_end":48291,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48296,"byte_end":48367,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48372,"byte_end":48375,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48380,"byte_end":48419,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48424,"byte_end":48462,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49386,"byte_end":49393,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48561,"byte_end":48635,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48640,"byte_end":48707,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48712,"byte_end":48715,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48720,"byte_end":48791,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48796,"byte_end":48865,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48870,"byte_end":48944,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48949,"byte_end":49026,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49031,"byte_end":49101,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49106,"byte_end":49159,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49164,"byte_end":49167,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49172,"byte_end":49244,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49249,"byte_end":49271,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49276,"byte_end":49279,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49284,"byte_end":49323,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49328,"byte_end":49378,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":215},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52627,"byte_end":52636,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51046,"byte_end":51076,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51077,"byte_end":51080,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51081,"byte_end":51160,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51161,"byte_end":51235,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51236,"byte_end":51315,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51316,"byte_end":51393,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51394,"byte_end":51405,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51406,"byte_end":51409,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51410,"byte_end":51487,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51488,"byte_end":51506,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51507,"byte_end":51510,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51511,"byte_end":51587,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51588,"byte_end":51664,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51665,"byte_end":51684,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51685,"byte_end":51688,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51689,"byte_end":51754,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51755,"byte_end":51835,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51836,"byte_end":51915,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51916,"byte_end":51989,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51990,"byte_end":52063,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52064,"byte_end":52085,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52086,"byte_end":52089,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52090,"byte_end":52174,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52175,"byte_end":52199,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52200,"byte_end":52203,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52204,"byte_end":52277,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52278,"byte_end":52357,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52358,"byte_end":52361,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52362,"byte_end":52427,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52428,"byte_end":52449,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52450,"byte_end":52453,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52454,"byte_end":52493,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52494,"byte_end":52530,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52531,"byte_end":52570,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52571,"byte_end":52616,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54280,"byte_end":54308,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"pub unsafe fn prepare_uninitialized_buffer(&Self, &mut [MaybeUninit<u8>])\n-> bool","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52643,"byte_end":52717,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52722,"byte_end":52771,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52776,"byte_end":52779,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52784,"byte_end":52857,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52862,"byte_end":52933,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52938,"byte_end":53012,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53017,"byte_end":53093,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53098,"byte_end":53136,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53141,"byte_end":53144,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53149,"byte_end":53225,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53230,"byte_end":53304,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53309,"byte_end":53386,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53391,"byte_end":53423,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53428,"byte_end":53431,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53436,"byte_end":53509,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53514,"byte_end":53582,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53587,"byte_end":53643,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53648,"byte_end":53683,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53688,"byte_end":53691,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53696,"byte_end":53772,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53777,"byte_end":53852,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53857,"byte_end":53934,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53939,"byte_end":53957,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53962,"byte_end":53965,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53970,"byte_end":54021,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54026,"byte_end":54029,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54034,"byte_end":54046,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54051,"byte_end":54054,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54059,"byte_end":54131,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54136,"byte_end":54167,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54172,"byte_end":54175,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54180,"byte_end":54211,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: method@Self::poll_read_buf","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54216,"byte_end":54265,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54821,"byte_end":54830,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54451,"byte_end":54504,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54509,"byte_end":54512,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54517,"byte_end":54575,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54580,"byte_end":54583,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54588,"byte_end":54647,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54652,"byte_end":54710,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54715,"byte_end":54782,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54787,"byte_end":54813,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55291,"byte_end":55304,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"pub fn poll_read_buf<B: BufMut>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<io::Result<usize>> where Self: Sized","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pulls some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54955,"byte_end":55031,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ how many bytes were read.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55036,"byte_end":55065,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55070,"byte_end":55073,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55078,"byte_end":55153,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55158,"byte_end":55234,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55239,"byte_end":55283,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":246},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58459,"byte_end":58468,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":57977,"byte_end":58007,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58008,"byte_end":58011,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58012,"byte_end":58086,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58087,"byte_end":58157,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58158,"byte_end":58227,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58228,"byte_end":58231,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58232,"byte_end":58297,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58298,"byte_end":58319,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58320,"byte_end":58323,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58324,"byte_end":58360,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58361,"byte_end":58402,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58403,"byte_end":58448,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58806,"byte_end":58816,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, &mut Context, SeekFrom)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58475,"byte_end":58532,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58537,"byte_end":58540,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58545,"byte_end":58618,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58623,"byte_end":58649,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58654,"byte_end":58657,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58662,"byte_end":58737,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58742,"byte_end":58798,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59399,"byte_end":59412,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58942,"byte_end":58985,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58990,"byte_end":58993,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58998,"byte_end":59047,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59052,"byte_end":59122,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59127,"byte_end":59188,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59193,"byte_end":59196,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59201,"byte_end":59213,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59218,"byte_end":59221,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59226,"byte_end":59282,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59287,"byte_end":59290,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59295,"byte_end":59307,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59312,"byte_end":59315,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59320,"byte_end":59391,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":271},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62915,"byte_end":62925,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61052,"byte_end":61084,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61085,"byte_end":61088,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61089,"byte_end":61171,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61172,"byte_end":61247,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61248,"byte_end":61315,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61316,"byte_end":61319,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61320,"byte_end":61400,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61401,"byte_end":61419,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61420,"byte_end":61423,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61424,"byte_end":61495,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61496,"byte_end":61510,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61511,"byte_end":61514,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61515,"byte_end":61583,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61584,"byte_end":61664,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61665,"byte_end":61744,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61745,"byte_end":61818,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61819,"byte_end":61892,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61893,"byte_end":61914,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61915,"byte_end":61918,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61919,"byte_end":62003,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62004,"byte_end":62028,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62029,"byte_end":62032,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62033,"byte_end":62115,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62116,"byte_end":62199,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62200,"byte_end":62203,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62204,"byte_end":62288,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62289,"byte_end":62373,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62374,"byte_end":62452,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62453,"byte_end":62532,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62533,"byte_end":62594,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62595,"byte_end":62598,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62599,"byte_end":62665,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62666,"byte_end":62688,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62689,"byte_end":62692,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62693,"byte_end":62731,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62732,"byte_end":62776,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62777,"byte_end":62816,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62817,"byte_end":62856,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62857,"byte_end":62904,"line_start":45,"line_end":45,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63309,"byte_end":63319,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62932,"byte_end":62986,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62991,"byte_end":62994,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62999,"byte_end":63060,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63065,"byte_end":63068,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63073,"byte_end":63135,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63140,"byte_end":63198,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63203,"byte_end":63270,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63275,"byte_end":63301,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63860,"byte_end":63870,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63447,"byte_end":63518,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63523,"byte_end":63545,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63550,"byte_end":63553,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63558,"byte_end":63604,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63609,"byte_end":63612,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63617,"byte_end":63681,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63686,"byte_end":63744,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63749,"byte_end":63817,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63822,"byte_end":63852,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67156,"byte_end":67169,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63952,"byte_end":64026,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64031,"byte_end":64079,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64084,"byte_end":64087,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64092,"byte_end":64163,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64168,"byte_end":64244,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64249,"byte_end":64325,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64330,"byte_end":64405,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64410,"byte_end":64481,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64486,"byte_end":64562,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64567,"byte_end":64595,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64600,"byte_end":64603,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64608,"byte_end":64669,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64674,"byte_end":64745,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64750,"byte_end":64822,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64827,"byte_end":64902,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64907,"byte_end":64980,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64985,"byte_end":65060,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65065,"byte_end":65137,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65142,"byte_end":65153,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65158,"byte_end":65161,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65166,"byte_end":65240,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65245,"byte_end":65317,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65322,"byte_end":65391,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65396,"byte_end":65464,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65469,"byte_end":65530,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65535,"byte_end":65538,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65543,"byte_end":65561,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65566,"byte_end":65569,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65574,"byte_end":65644,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65649,"byte_end":65652,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65657,"byte_end":65720,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65725,"byte_end":65794,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65799,"byte_end":65874,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65879,"byte_end":65952,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65957,"byte_end":66008,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66013,"byte_end":66016,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66021,"byte_end":66091,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66096,"byte_end":66171,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66176,"byte_end":66248,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66253,"byte_end":66323,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66328,"byte_end":66403,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66408,"byte_end":66411,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66416,"byte_end":66497,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66502,"byte_end":66577,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66582,"byte_end":66649,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66654,"byte_end":66657,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66662,"byte_end":66674,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66679,"byte_end":66682,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66687,"byte_end":66758,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66763,"byte_end":66829,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66834,"byte_end":66908,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66913,"byte_end":66977,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66982,"byte_end":67021,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67026,"byte_end":67029,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67034,"byte_end":67046,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67051,"byte_end":67054,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67059,"byte_end":67134,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67139,"byte_end":67148,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67457,"byte_end":67471,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"pub fn poll_write_buf<B: Buf>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<Result<usize, io::Error>> where Self: Sized","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Writes a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Writes a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67251,"byte_end":67325,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67330,"byte_end":67333,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67338,"byte_end":67412,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67417,"byte_end":67449,"line_start":135,"line_end":135,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7855922,"byte_end":7855933,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19269,"byte_end":19298,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7858179,"byte_end":7858182,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"pub fn new(E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7857757,"byte_end":7857825,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7857830,"byte_end":7857833,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7857838,"byte_end":7857850,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7857855,"byte_end":7857858,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7857863,"byte_end":7857923,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7857928,"byte_end":7857931,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7857936,"byte_end":7858006,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7858011,"byte_end":7858084,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7858089,"byte_end":7858167,"line_start":176,"line_end":176,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7859386,"byte_end":7859400,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<PollEvented<E>>::new_with_ready","value":"pub fn new_with_ready(E, mio::Ready) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`\n state. `new_with_ready` should be used over `new` when you need control over the readiness\n state, such as when a file descriptor only allows reads. This does not add `hup` or `error`\n so if you are interested in those states, you will need to add them to the readiness state\n passed to this function.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7858282,"byte_end":7858376,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ state. `new_with_ready` should be used over `new` when you need control over the readiness","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7858381,"byte_end":7858475,"line_start":182,"line_end":182,"column_start":5,"column_end":99}},{"value":"/ state, such as when a file descriptor only allows reads. This does not add `hup` or `error`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7858480,"byte_end":7858575,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ so if you are interested in those states, you will need to add them to the readiness state","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7858580,"byte_end":7858674,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ passed to this function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7858679,"byte_end":7858707,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7858712,"byte_end":7858715,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7858720,"byte_end":7858757,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7858762,"byte_end":7858765,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7858770,"byte_end":7858781,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7858786,"byte_end":7858803,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7858808,"byte_end":7858839,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7858844,"byte_end":7858889,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7858894,"byte_end":7858948,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7858953,"byte_end":7859005,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7859010,"byte_end":7859020,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7859025,"byte_end":7859032,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7859037,"byte_end":7859040,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7859045,"byte_end":7859057,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7859062,"byte_end":7859065,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7859070,"byte_end":7859130,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7859135,"byte_end":7859138,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7859143,"byte_end":7859213,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7859218,"byte_end":7859291,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7859296,"byte_end":7859374,"line_start":204,"line_end":204,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7859878,"byte_end":7859885,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"pub fn get_ref(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7859764,"byte_end":7859838,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7859843,"byte_end":7859866,"line_start":218,"line_end":218,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7860061,"byte_end":7860068,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7859946,"byte_end":7860021,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7860026,"byte_end":7860049,"line_start":224,"line_end":224,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7860604,"byte_end":7860614,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"pub fn into_inner(Self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7860137,"byte_end":7860186,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7860191,"byte_end":7860194,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7860199,"byte_end":7860273,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7860278,"byte_end":7860353,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7860358,"byte_end":7860361,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7860366,"byte_end":7860441,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7860446,"byte_end":7860522,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7860527,"byte_end":7860592,"line_start":236,"line_end":236,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861771,"byte_end":7861786,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context, mio::Ready)\n-> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's read readiness state.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7860762,"byte_end":7860813,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7860818,"byte_end":7860821,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7860826,"byte_end":7860899,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7860904,"byte_end":7860975,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7860980,"byte_end":7861055,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861060,"byte_end":7861067,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861072,"byte_end":7861075,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861080,"byte_end":7861156,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861161,"byte_end":7861227,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861232,"byte_end":7861235,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861240,"byte_end":7861313,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861318,"byte_end":7861362,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861367,"byte_end":7861370,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: method@Self::clear_read_ready","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861375,"byte_end":7861430,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861435,"byte_end":7861438,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861443,"byte_end":7861455,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861460,"byte_end":7861463,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861468,"byte_end":7861496,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861501,"byte_end":7861504,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861509,"byte_end":7861541,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861546,"byte_end":7861590,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861595,"byte_end":7861598,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861603,"byte_end":7861616,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861621,"byte_end":7861624,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861629,"byte_end":7861702,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_write_ready`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7861707,"byte_end":7861759,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7862762,"byte_end":7862778,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"pub fn clear_read_ready(&Self, &mut Context, mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7862163,"byte_end":7862239,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7862244,"byte_end":7862308,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7862313,"byte_end":7862316,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7862321,"byte_end":7862383,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7862388,"byte_end":7862459,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7862464,"byte_end":7862467,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7862472,"byte_end":7862547,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7862552,"byte_end":7862584,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7862589,"byte_end":7862592,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7862597,"byte_end":7862609,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7862614,"byte_end":7862617,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7862622,"byte_end":7862650,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7862655,"byte_end":7862658,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7862663,"byte_end":7862701,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7862706,"byte_end":7862750,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7864218,"byte_end":7864234,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's write readiness state.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863303,"byte_end":7863355,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863360,"byte_end":7863363,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863368,"byte_end":7863437,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863442,"byte_end":7863485,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863490,"byte_end":7863493,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Poll::Pending` is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863498,"byte_end":7863566,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863571,"byte_end":7863646,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863651,"byte_end":7863654,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863659,"byte_end":7863733,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863738,"byte_end":7863783,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863788,"byte_end":7863791,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: method@Self::clear_write_ready","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863796,"byte_end":7863853,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863858,"byte_end":7863861,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863866,"byte_end":7863878,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863883,"byte_end":7863886,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863891,"byte_end":7863919,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863924,"byte_end":7863927,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863932,"byte_end":7863989,"line_start":333,"line_end":333,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7863994,"byte_end":7864038,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7864043,"byte_end":7864046,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7864051,"byte_end":7864064,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7864069,"byte_end":7864072,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7864077,"byte_end":7864150,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_read_ready`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7864155,"byte_end":7864206,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7865083,"byte_end":7865100,"line_start":362,"line_end":362,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"pub fn clear_write_ready(&Self, &mut Context) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7864510,"byte_end":7864587,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7864592,"byte_end":7864657,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7864662,"byte_end":7864665,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7864670,"byte_end":7864746,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7864751,"byte_end":7864796,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7864801,"byte_end":7864804,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7864809,"byte_end":7864884,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7864889,"byte_end":7864963,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7864968,"byte_end":7864971,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7864976,"byte_end":7864988,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7864993,"byte_end":7864996,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7865001,"byte_end":7865071,"line_start":361,"line_end":361,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869342,"byte_end":7869354,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19269,"byte_end":19298,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870046,"byte_end":7870049,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"pub fn new<T>(&T) -> io::Result<Registration> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869474,"byte_end":7869530,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869535,"byte_end":7869538,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869543,"byte_end":7869555,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869560,"byte_end":7869563,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869568,"byte_end":7869620,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869625,"byte_end":7869684,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869689,"byte_end":7869692,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869697,"byte_end":7869700,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869705,"byte_end":7869717,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869722,"byte_end":7869725,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869730,"byte_end":7869790,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869795,"byte_end":7869798,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869803,"byte_end":7869873,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869878,"byte_end":7869951,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869956,"byte_end":7870034,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7871452,"byte_end":7871466,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<Registration>::new_with_ready","value":"pub fn new_with_ready<T>(&T, mio::Ready) -> io::Result<Registration> where\nT: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.\n `new_with_ready` should be used over `new` when you need control over the readiness state,\n such as when a file descriptor only allows reads. This does not add `hup` or `error` so if\n you are interested in those states, you will need to add them to the readiness state passed\n to this function.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870196,"byte_end":7870287,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ `new_with_ready` should be used over `new` when you need control over the readiness state,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870292,"byte_end":7870386,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ such as when a file descriptor only allows reads. This does not add `hup` or `error` so if","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870391,"byte_end":7870485,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ you are interested in those states, you will need to add them to the readiness state passed","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870490,"byte_end":7870585,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ to this function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870590,"byte_end":7870611,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870616,"byte_end":7870619,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870624,"byte_end":7870661,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870666,"byte_end":7870669,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870674,"byte_end":7870685,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870690,"byte_end":7870707,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870712,"byte_end":7870743,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870748,"byte_end":7870793,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870798,"byte_end":7870852,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870857,"byte_end":7870909,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870914,"byte_end":7870924,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870929,"byte_end":7870936,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870941,"byte_end":7870944,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870949,"byte_end":7870961,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870966,"byte_end":7870969,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7870974,"byte_end":7871026,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7871031,"byte_end":7871090,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7871095,"byte_end":7871098,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7871103,"byte_end":7871106,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7871111,"byte_end":7871123,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7871128,"byte_end":7871131,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7871136,"byte_end":7871196,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7871201,"byte_end":7871204,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7871209,"byte_end":7871279,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7871284,"byte_end":7871357,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7871362,"byte_end":7871440,"line_start":101,"line_end":101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7872701,"byte_end":7872711,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"pub fn deregister<T>(&mut Self, &T) -> io::Result<()> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Deregisters the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregisters the I/O resource from the reactor it is associated with.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7871925,"byte_end":7871997,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7872002,"byte_end":7872005,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7872010,"byte_end":7872086,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7872091,"byte_end":7872119,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7872124,"byte_end":7872127,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7872132,"byte_end":7872207,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7872212,"byte_end":7872288,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7872293,"byte_end":7872358,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7872363,"byte_end":7872366,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7872371,"byte_end":7872383,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7872388,"byte_end":7872391,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7872396,"byte_end":7872468,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7872473,"byte_end":7872549,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7872554,"byte_end":7872627,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7872632,"byte_end":7872635,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7872640,"byte_end":7872689,"line_start":134,"line_end":134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7874262,"byte_end":7874277,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's read readiness stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873014,"byte_end":7873079,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873084,"byte_end":7873087,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873092,"byte_end":7873166,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873171,"byte_end":7873244,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873249,"byte_end":7873299,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873304,"byte_end":7873307,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873312,"byte_end":7873385,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873390,"byte_end":7873465,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873470,"byte_end":7873506,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873511,"byte_end":7873514,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873519,"byte_end":7873537,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873542,"byte_end":7873545,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873550,"byte_end":7873595,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873600,"byte_end":7873603,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873608,"byte_end":7873683,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873688,"byte_end":7873749,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873754,"byte_end":7873757,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873762,"byte_end":7873837,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873842,"byte_end":7873889,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873894,"byte_end":7873897,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873902,"byte_end":7873978,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7873983,"byte_end":7874056,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7874061,"byte_end":7874064,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7874069,"byte_end":7874142,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7874147,"byte_end":7874150,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7874155,"byte_end":7874167,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7874172,"byte_end":7874175,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7874180,"byte_end":7874250,"line_start":173,"line_end":173,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875118,"byte_end":7875133,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"pub fn take_read_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7874757,"byte_end":7874802,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7874807,"byte_end":7874810,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7874815,"byte_end":7874887,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7874892,"byte_end":7874967,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7874972,"byte_end":7875040,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875045,"byte_end":7875048,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875053,"byte_end":7875106,"line_start":197,"line_end":197,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7876487,"byte_end":7876503,"line_start":230,"line_end":230,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's write readiness stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875235,"byte_end":7875301,"line_start":202,"line_end":202,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875306,"byte_end":7875309,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875314,"byte_end":7875389,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875394,"byte_end":7875468,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875473,"byte_end":7875523,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875528,"byte_end":7875531,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875536,"byte_end":7875609,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875614,"byte_end":7875689,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875694,"byte_end":7875730,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875735,"byte_end":7875738,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875743,"byte_end":7875761,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875766,"byte_end":7875769,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875774,"byte_end":7875819,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875824,"byte_end":7875827,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875832,"byte_end":7875907,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875912,"byte_end":7875973,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875978,"byte_end":7875981,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7875986,"byte_end":7876061,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7876066,"byte_end":7876114,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7876119,"byte_end":7876122,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7876127,"byte_end":7876203,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7876208,"byte_end":7876281,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7876286,"byte_end":7876289,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7876294,"byte_end":7876367,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7876372,"byte_end":7876375,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7876380,"byte_end":7876392,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7876397,"byte_end":7876400,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7876405,"byte_end":7876475,"line_start":229,"line_end":229,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7877350,"byte_end":7877366,"line_start":254,"line_end":254,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"pub fn take_write_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consumes any pending write readiness event.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7876984,"byte_end":7877031,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7877036,"byte_end":7877039,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7877044,"byte_end":7877117,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7877122,"byte_end":7877197,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7877202,"byte_end":7877270,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7877275,"byte_end":7877278,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7877283,"byte_end":7877338,"line_start":253,"line_end":253,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7881229,"byte_end":7881237,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1304}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7881366,"byte_end":7881375,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1307}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7881689,"byte_end":7881694,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7882320,"byte_end":7882330,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7882217,"byte_end":7882292,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7882297,"byte_end":7882308,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7882737,"byte_end":7882744,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7882413,"byte_end":7882462,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7882467,"byte_end":7882470,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7882475,"byte_end":7882487,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7882492,"byte_end":7882495,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7882500,"byte_end":7882574,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7882579,"byte_end":7882629,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7882634,"byte_end":7882698,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7882703,"byte_end":7882725,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7883245,"byte_end":7883255,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7883143,"byte_end":7883217,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7883222,"byte_end":7883233,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":7886492,"byte_end":7886496,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":7886329,"byte_end":7886395,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":7886413,"byte_end":7886480,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":2000},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":7889655,"byte_end":7889670,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2005},{"krate":0,"index":2006}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":7892370,"byte_end":7892380,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2003},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":7895271,"byte_end":7895280,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":7896680,"byte_end":7896685,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":7898535,"byte_end":7898540,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2008},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7900719,"byte_end":7900731,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2013},{"krate":0,"index":2016},{"krate":0,"index":2023},{"krate":0,"index":2025},{"krate":0,"index":2027},{"krate":0,"index":2029},{"krate":0,"index":2031},{"krate":0,"index":2033},{"krate":0,"index":2035},{"krate":0,"index":2037},{"krate":0,"index":2039},{"krate":0,"index":2041},{"krate":0,"index":2043},{"krate":0,"index":2045},{"krate":0,"index":2047},{"krate":0,"index":2049},{"krate":0,"index":2051},{"krate":0,"index":2053},{"krate":0,"index":2055},{"krate":0,"index":2057},{"krate":0,"index":2018},{"krate":0,"index":2020},{"krate":0,"index":2022}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7901851,"byte_end":7901856,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7904685,"byte_end":7904689,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7906991,"byte_end":7906999,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7908896,"byte_end":7908906,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2023},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7910343,"byte_end":7910350,"line_start":324,"line_end":324,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2025},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7911639,"byte_end":7911646,"line_start":362,"line_end":362,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2027},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7912977,"byte_end":7912985,"line_start":400,"line_end":400,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7914325,"byte_end":7914333,"line_start":438,"line_end":438,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7915614,"byte_end":7915622,"line_start":475,"line_end":475,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2033},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7916917,"byte_end":7916925,"line_start":513,"line_end":513,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2035},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7918288,"byte_end":7918296,"line_start":552,"line_end":552,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2037},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7919589,"byte_end":7919597,"line_start":589,"line_end":589,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2039},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7921057,"byte_end":7921066,"line_start":629,"line_end":629,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2041},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7922460,"byte_end":7922469,"line_start":669,"line_end":669,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2043},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7923816,"byte_end":7923827,"line_start":707,"line_end":707,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7925188,"byte_end":7925199,"line_start":745,"line_end":745,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7926500,"byte_end":7926511,"line_start":782,"line_end":782,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7927823,"byte_end":7927834,"line_start":820,"line_end":820,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2051},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7929215,"byte_end":7929226,"line_start":859,"line_end":859,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7930520,"byte_end":7930531,"line_start":896,"line_end":896,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7932009,"byte_end":7932021,"line_start":936,"line_end":936,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7933415,"byte_end":7933427,"line_start":976,"line_end":976,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2018},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7935040,"byte_end":7935051,"line_start":1022,"line_end":1022,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2020},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7936619,"byte_end":7936633,"line_start":1069,"line_end":1069,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7937811,"byte_end":7937815,"line_start":1103,"line_end":1103,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2008},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1389},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938857,"byte_end":7938869,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":1390}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to [`AsyncSeek`] types.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938082,"byte_end":7938155,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938156,"byte_end":7938159,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ As a convenience, this trait may be imported using the [`prelude`]:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938160,"byte_end":7938231,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938232,"byte_end":7938235,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938236,"byte_end":7938250,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938251,"byte_end":7938254,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938255,"byte_end":7938262,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Cursor, SeekFrom};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938263,"byte_end":7938299,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938300,"byte_end":7938326,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938327,"byte_end":7938330,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938331,"byte_end":7938349,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938350,"byte_end":7938389,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/     let mut cursor = Cursor::new(b\"abcdefg\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938390,"byte_end":7938439,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938440,"byte_end":7938443,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     // the `seek` method is defined by this trait","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938444,"byte_end":7938497,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/     cursor.seek(SeekFrom::Start(3)).await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938498,"byte_end":7938545,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938546,"byte_end":7938549,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0; 1];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938550,"byte_end":7938579,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/     let n = cursor.read(&mut buf).await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938580,"byte_end":7938625,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938626,"byte_end":7938651,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/     assert_eq!(buf, [b'd']);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938652,"byte_end":7938684,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938685,"byte_end":7938688,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938689,"byte_end":7938703,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938704,"byte_end":7938709,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938710,"byte_end":7938717,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938718,"byte_end":7938721,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [module][crate::io] documentation for more details.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938722,"byte_end":7938781,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938782,"byte_end":7938785,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: AsyncSeek","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938786,"byte_end":7938814,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`prelude`]: crate::prelude","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938815,"byte_end":7938846,"line_start":34,"line_end":34,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939586,"byte_end":7939590,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":1389},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938887,"byte_end":7938956,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938961,"byte_end":7939014,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939019,"byte_end":7939022,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939027,"byte_end":7939104,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939109,"byte_end":7939131,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939136,"byte_end":7939139,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939144,"byte_end":7939158,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939163,"byte_end":7939166,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939171,"byte_end":7939184,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939189,"byte_end":7939213,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939218,"byte_end":7939244,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939249,"byte_end":7939252,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939257,"byte_end":7939283,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939288,"byte_end":7939291,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939296,"byte_end":7939341,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939346,"byte_end":7939394,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939399,"byte_end":7939440,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939445,"byte_end":7939448,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939453,"byte_end":7939490,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939495,"byte_end":7939537,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939542,"byte_end":7939554,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939559,"byte_end":7939566,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939571,"byte_end":7939578,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2060},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7941793,"byte_end":7941806,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2066},{"krate":0,"index":2070},{"krate":0,"index":2072},{"krate":0,"index":2074},{"krate":0,"index":2076},{"krate":0,"index":2078},{"krate":0,"index":2080},{"krate":0,"index":2082},{"krate":0,"index":2084},{"krate":0,"index":2086},{"krate":0,"index":2088},{"krate":0,"index":2090},{"krate":0,"index":2092},{"krate":0,"index":2094},{"krate":0,"index":2096},{"krate":0,"index":2098},{"krate":0,"index":2100},{"krate":0,"index":2102},{"krate":0,"index":2104},{"krate":0,"index":2068},{"krate":0,"index":2069}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7943648,"byte_end":7943653,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7946455,"byte_end":7946464,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7947806,"byte_end":7947815,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7949215,"byte_end":7949223,"line_start":271,"line_end":271,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7950484,"byte_end":7950492,"line_start":308,"line_end":308,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7951807,"byte_end":7951816,"line_start":346,"line_end":346,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7953129,"byte_end":7953138,"line_start":384,"line_end":384,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7954478,"byte_end":7954487,"line_start":422,"line_end":422,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7955822,"byte_end":7955831,"line_start":460,"line_end":460,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7957208,"byte_end":7957217,"line_start":498,"line_end":498,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7958604,"byte_end":7958613,"line_start":536,"line_end":536,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7960068,"byte_end":7960078,"line_start":576,"line_end":576,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7961468,"byte_end":7961478,"line_start":616,"line_end":616,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7962810,"byte_end":7962822,"line_start":655,"line_end":655,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7964149,"byte_end":7964161,"line_start":693,"line_end":693,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7965515,"byte_end":7965527,"line_start":731,"line_end":731,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7966876,"byte_end":7966888,"line_start":769,"line_end":769,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7968279,"byte_end":7968291,"line_start":807,"line_end":807,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7969692,"byte_end":7969704,"line_start":845,"line_end":845,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7971171,"byte_end":7971184,"line_start":885,"line_end":885,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7972586,"byte_end":7972599,"line_start":925,"line_end":925,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7973619,"byte_end":7973624,"line_start":958,"line_end":958,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7974844,"byte_end":7974852,"line_start":995,"line_end":995,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2060},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9726},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7976261,"byte_end":7976270,"line_start":29,"line_end":29,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":9728},{"krate":0,"index":9729},{"krate":0,"index":9730},{"krate":0,"index":9731}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7976606,"byte_end":7976609,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7976464,"byte_end":7976556,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7976561,"byte_end":7976594,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7976771,"byte_end":7976784,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7976694,"byte_end":7976759,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7977460,"byte_end":7977467,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7977323,"byte_end":7977369,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7977374,"byte_end":7977377,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7977382,"byte_end":7977448,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7977659,"byte_end":7977666,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7977514,"byte_end":7977568,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7977573,"byte_end":7977576,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7977581,"byte_end":7977647,"line_start":74,"line_end":74,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7977877,"byte_end":7977888,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7977725,"byte_end":7977786,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7977791,"byte_end":7977794,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7977799,"byte_end":7977865,"line_start":81,"line_end":81,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7978119,"byte_end":7978129,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7977968,"byte_end":7978031,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7978036,"byte_end":7978039,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7978044,"byte_end":7978107,"line_start":88,"line_end":88,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7978333,"byte_end":7978339,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7978173,"byte_end":7978229,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7978234,"byte_end":7978237,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7978242,"byte_end":7978321,"line_start":95,"line_end":95,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":9712},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7982585,"byte_end":7982594,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":9714}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7982873,"byte_end":7982876,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7982719,"byte_end":7982776,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7982781,"byte_end":7982784,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7982789,"byte_end":7982861,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7983208,"byte_end":7983221,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7983008,"byte_end":7983093,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7983098,"byte_end":7983111,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7983116,"byte_end":7983119,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7983124,"byte_end":7983196,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7983678,"byte_end":7983685,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7983533,"byte_end":7983583,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7983588,"byte_end":7983591,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7983596,"byte_end":7983666,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7983905,"byte_end":7983912,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7983752,"byte_end":7983810,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7983815,"byte_end":7983818,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7983823,"byte_end":7983893,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7984147,"byte_end":7984158,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7983987,"byte_end":7984052,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7984057,"byte_end":7984060,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7984065,"byte_end":7984135,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7984422,"byte_end":7984432,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7984267,"byte_end":7984334,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7984339,"byte_end":7984342,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7984347,"byte_end":7984410,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9649},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7988251,"byte_end":7988260,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":9651},{"krate":0,"index":9652},{"krate":0,"index":9653}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7988568,"byte_end":7988571,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7988426,"byte_end":7988518,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7988523,"byte_end":7988556,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7988733,"byte_end":7988746,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7988656,"byte_end":7988721,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7989828,"byte_end":7989835,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7989770,"byte_end":7989816,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7990026,"byte_end":7990033,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7989882,"byte_end":7989936,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7989941,"byte_end":7989944,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7989949,"byte_end":7990014,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7990243,"byte_end":7990254,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7990092,"byte_end":7990153,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7990158,"byte_end":7990161,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7990166,"byte_end":7990231,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7990485,"byte_end":7990495,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7990334,"byte_end":7990397,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7990402,"byte_end":7990405,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7990410,"byte_end":7990473,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7990607,"byte_end":7990613,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7990539,"byte_end":7990595,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":9600},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7993246,"byte_end":7993251,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":9603},{"krate":0,"index":9604},{"krate":0,"index":9605}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":7657717,"byte_end":7657726,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7993692,"byte_end":7993699,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7993618,"byte_end":7993680,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7994031,"byte_end":7994038,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7993768,"byte_end":7993838,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7993843,"byte_end":7993846,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7993851,"byte_end":7993924,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7993929,"byte_end":7994002,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7994007,"byte_end":7994019,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7994397,"byte_end":7994408,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7994127,"byte_end":7994204,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7994209,"byte_end":7994212,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7994217,"byte_end":7994290,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7994295,"byte_end":7994368,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7994373,"byte_end":7994385,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7994605,"byte_end":7994615,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7994537,"byte_end":7994593,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2110},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":7997191,"byte_end":7997195,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":7997108,"byte_end":7997175,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":2106},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":7998460,"byte_end":7998464,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"pub fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W) -> Copy where\nR: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8001221,"byte_end":8001226,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2127}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2128},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8001905,"byte_end":8001910,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2129},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/flush.rs","byte_start":8003127,"byte_end":8003132,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":2132}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9577},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8004248,"byte_end":8004253,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":9579},{"krate":0,"index":9580},{"krate":0,"index":9581},{"krate":0,"index":9582}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":7657717,"byte_end":7657726,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8005100,"byte_end":8005109,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8004610,"byte_end":8004650,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8004655,"byte_end":8004658,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8004663,"byte_end":8004677,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8004682,"byte_end":8004685,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8004690,"byte_end":8004697,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8004702,"byte_end":8004736,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8004741,"byte_end":8004776,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8004781,"byte_end":8004784,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8004789,"byte_end":8004872,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8004877,"byte_end":8004917,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8004922,"byte_end":8004925,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8004930,"byte_end":8004983,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8004988,"byte_end":8005031,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8005036,"byte_end":8005041,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8005046,"byte_end":8005058,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8005063,"byte_end":8005070,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8005075,"byte_end":8005082,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8005336,"byte_end":8005343,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8005269,"byte_end":8005324,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8005462,"byte_end":8005469,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8005403,"byte_end":8005450,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8005756,"byte_end":8005766,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8005521,"byte_end":8005582,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8005587,"byte_end":8005590,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8005595,"byte_end":8005658,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8005663,"byte_end":8005744,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8005885,"byte_end":8005899,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2137},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8007868,"byte_end":8007872,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8007785,"byte_end":8007852,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2146},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8008935,"byte_end":8008942,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":2150},{"krate":0,"index":2151}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8008852,"byte_end":8008919,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8010191,"byte_end":8010200,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8010108,"byte_end":8010175,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":9519},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8014524,"byte_end":8014530,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":9521}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9486},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8014546,"byte_end":8014552,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":9488}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9441},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8014568,"byte_end":8014575,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":9443},{"krate":0,"index":9444},{"krate":0,"index":9446}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9396},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8014600,"byte_end":8014607,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":9398},{"krate":0,"index":9399},{"krate":0,"index":9401}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9351},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8014632,"byte_end":8014639,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":9353},{"krate":0,"index":9354},{"krate":0,"index":9356}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9306},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8014664,"byte_end":8014672,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":9308},{"krate":0,"index":9309},{"krate":0,"index":9311}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9261},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8014700,"byte_end":8014707,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":9263},{"krate":0,"index":9264},{"krate":0,"index":9266}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9216},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8014732,"byte_end":8014739,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":9218},{"krate":0,"index":9219},{"krate":0,"index":9221}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9171},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8014764,"byte_end":8014771,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":9173},{"krate":0,"index":9174},{"krate":0,"index":9176}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9126},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8014796,"byte_end":8014804,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":9128},{"krate":0,"index":9129},{"krate":0,"index":9131}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9081},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8014832,"byte_end":8014841,"line_start":125,"line_end":125,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":9083},{"krate":0,"index":9084},{"krate":0,"index":9086}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9036},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8014869,"byte_end":8014878,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":9038},{"krate":0,"index":9039},{"krate":0,"index":9041}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8991},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8014906,"byte_end":8014915,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":8993},{"krate":0,"index":8994},{"krate":0,"index":8996}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8946},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8014943,"byte_end":8014953,"line_start":128,"line_end":128,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":8948},{"krate":0,"index":8949},{"krate":0,"index":8951}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8901},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8014984,"byte_end":8014993,"line_start":130,"line_end":130,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":8903},{"krate":0,"index":8904},{"krate":0,"index":8906}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8856},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8015021,"byte_end":8015030,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":8858},{"krate":0,"index":8859},{"krate":0,"index":8861}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8811},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8015058,"byte_end":8015067,"line_start":132,"line_end":132,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":8813},{"krate":0,"index":8814},{"krate":0,"index":8816}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8766},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8015095,"byte_end":8015105,"line_start":133,"line_end":133,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":8768},{"krate":0,"index":8769},{"krate":0,"index":8771}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2311},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8015523,"byte_end":8015531,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8015440,"byte_end":8015507,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2322},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8018767,"byte_end":8018776,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8018637,"byte_end":8018704,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2332},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8021755,"byte_end":8021767,"line_start":13,"line_end":13,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8021672,"byte_end":8021739,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2343},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8024220,"byte_end":8024229,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2349}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8024137,"byte_end":8024204,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2355},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8026675,"byte_end":8026681,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2356}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2354},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8027367,"byte_end":8027373,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/shutdown.rs","byte_start":8028322,"byte_end":8028330,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":2362}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2367},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8029502,"byte_end":8029506,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2368}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2369},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8030347,"byte_end":8030351,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8743},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8031596,"byte_end":8031601,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":8745},{"krate":0,"index":8746},{"krate":0,"index":8747},{"krate":0,"index":8748}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":7657717,"byte_end":7657726,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032462,"byte_end":8032474,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8031950,"byte_end":8031993,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8031998,"byte_end":8032001,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032006,"byte_end":8032020,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032025,"byte_end":8032028,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032033,"byte_end":8032040,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032045,"byte_end":8032079,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032084,"byte_end":8032119,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032124,"byte_end":8032127,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032132,"byte_end":8032215,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032220,"byte_end":8032267,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032272,"byte_end":8032275,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032280,"byte_end":8032342,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032347,"byte_end":8032393,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032398,"byte_end":8032403,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032408,"byte_end":8032420,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032425,"byte_end":8032432,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032437,"byte_end":8032444,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032712,"byte_end":8032729,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8697},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8045523,"byte_end":8045535,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::util::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":8700},{"krate":0,"index":8701}],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2385},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046811,"byte_end":8046824,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"stream_reader","qualname":"::io::util::stream_reader::stream_reader","value":"pub fn stream_reader<S, B>(S) -> StreamReader<S, B> where S: Stream<Item =\nResult<B, io::Error>>, B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8045612,"byte_end":8045692,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8045693,"byte_end":8045696,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8045697,"byte_end":8045710,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8045711,"byte_end":8045714,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8045715,"byte_end":8045722,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8045723,"byte_end":8045744,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ use tokio::io::{stream_reader, AsyncReadExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8045745,"byte_end":8045794,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8045795,"byte_end":8045815,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8045816,"byte_end":8045862,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8045863,"byte_end":8045866,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Create a stream from an iterator.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8045867,"byte_end":8045907,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let stream = tokio::stream::iter(vec![","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8045908,"byte_end":8045950,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     Ok(Bytes::from_static(&[0, 1, 2, 3])),","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8045951,"byte_end":8045997,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[4, 5, 6, 7])),","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8045998,"byte_end":8046044,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[8, 9, 10, 11])),","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046045,"byte_end":8046093,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ ]);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046094,"byte_end":8046101,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046102,"byte_end":8046105,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Convert it to an AsyncRead.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046106,"byte_end":8046140,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ let mut read = stream_reader(stream);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046141,"byte_end":8046182,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046183,"byte_end":8046186,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Read five bytes from the stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046187,"byte_end":8046226,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ let mut buf = [0; 5];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046227,"byte_end":8046252,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ read.read_exact(&mut buf).await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046253,"byte_end":8046290,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(buf, [0, 1, 2, 3, 4]);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046291,"byte_end":8046328,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046329,"byte_end":8046332,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Read the rest of the current chunk.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046333,"byte_end":8046375,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 3);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046376,"byte_end":8046422,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..3], [5, 6, 7]);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046423,"byte_end":8046460,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046461,"byte_end":8046464,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Read the next chunk.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046465,"byte_end":8046492,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 4);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046493,"byte_end":8046539,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..4], [8, 9, 10, 11]);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046540,"byte_end":8046582,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046583,"byte_end":8046586,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // We have now reached the end.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046587,"byte_end":8046622,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 0);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046623,"byte_end":8046669,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046670,"byte_end":8046673,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046674,"byte_end":8046686,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046687,"byte_end":8046694,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046695,"byte_end":8046702,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8652},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8034324,"byte_end":8034328,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8654},{"krate":0,"index":8655}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":7657717,"byte_end":7657726,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8034918,"byte_end":8034923,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8034615,"byte_end":8034668,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8034673,"byte_end":8034719,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8034724,"byte_end":8034727,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8034732,"byte_end":8034742,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8034747,"byte_end":8034750,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8034755,"byte_end":8034832,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8034837,"byte_end":8034906,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035242,"byte_end":8035251,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8034971,"byte_end":8035042,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035047,"byte_end":8035121,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035126,"byte_end":8035201,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035206,"byte_end":8035230,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035374,"byte_end":8035381,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035316,"byte_end":8035362,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1925},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035673,"byte_end":8035680,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035428,"byte_end":8035482,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035487,"byte_end":8035490,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035495,"byte_end":8035568,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035573,"byte_end":8035645,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035650,"byte_end":8035661,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035991,"byte_end":8036002,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035739,"byte_end":8035800,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035805,"byte_end":8035808,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035813,"byte_end":8035886,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035891,"byte_end":8035963,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8035968,"byte_end":8035979,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1927},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8036148,"byte_end":8036158,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8036082,"byte_end":8036136,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2408},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8038088,"byte_end":8038093,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":2411},{"krate":0,"index":2412}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8038005,"byte_end":8038072,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2417},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8038989,"byte_end":8038997,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":2420},{"krate":0,"index":2421}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8038906,"byte_end":8038973,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2426},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8040380,"byte_end":8040388,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":2430},{"krate":0,"index":2431}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8040297,"byte_end":8040364,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8592},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044269,"byte_end":8044276,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":8594},{"krate":0,"index":8595}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8555},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044292,"byte_end":8044299,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":8557},{"krate":0,"index":8558}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8510},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044315,"byte_end":8044323,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":8512},{"krate":0,"index":8513},{"krate":0,"index":8515}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8465},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044348,"byte_end":8044356,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":8467},{"krate":0,"index":8468},{"krate":0,"index":8470}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8420},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044381,"byte_end":8044389,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":8422},{"krate":0,"index":8423},{"krate":0,"index":8425}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8375},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044414,"byte_end":8044423,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":8377},{"krate":0,"index":8378},{"krate":0,"index":8380}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8330},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044451,"byte_end":8044459,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":8332},{"krate":0,"index":8333},{"krate":0,"index":8335}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8285},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044484,"byte_end":8044492,"line_start":120,"line_end":120,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":8287},{"krate":0,"index":8288},{"krate":0,"index":8290}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8240},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044517,"byte_end":8044525,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":8242},{"krate":0,"index":8243},{"krate":0,"index":8245}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8195},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044550,"byte_end":8044559,"line_start":122,"line_end":122,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":8197},{"krate":0,"index":8198},{"krate":0,"index":8200}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8150},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044587,"byte_end":8044597,"line_start":124,"line_end":124,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":8152},{"krate":0,"index":8153},{"krate":0,"index":8155}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8105},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044625,"byte_end":8044635,"line_start":125,"line_end":125,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":8107},{"krate":0,"index":8108},{"krate":0,"index":8110}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8060},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044663,"byte_end":8044673,"line_start":126,"line_end":126,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":8062},{"krate":0,"index":8063},{"krate":0,"index":8065}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8015},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044701,"byte_end":8044712,"line_start":127,"line_end":127,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":8017},{"krate":0,"index":8018},{"krate":0,"index":8020}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7970},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044743,"byte_end":8044753,"line_start":129,"line_end":129,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":7972},{"krate":0,"index":7973},{"krate":0,"index":7975}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7925},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044781,"byte_end":8044791,"line_start":130,"line_end":130,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":7927},{"krate":0,"index":7928},{"krate":0,"index":7930}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7880},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044819,"byte_end":8044829,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":7882},{"krate":0,"index":7883},{"krate":0,"index":7885}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7835},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8044857,"byte_end":8044868,"line_start":132,"line_end":132,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":7837},{"krate":0,"index":7838},{"krate":0,"index":7840}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":308},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":372},{"krate":0,"index":2582},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2885},{"krate":0,"index":3011},{"krate":0,"index":3030},{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3265}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71776,"byte_end":71794,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71796,"byte_end":71834,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71835,"byte_end":71838,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71839,"byte_end":71922,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"! library, which can be used to implement networking protocols.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71923,"byte_end":71988,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71989,"byte_end":71992,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Organization","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71993,"byte_end":72011,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72012,"byte_end":72015,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72016,"byte_end":72104,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"! * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72105,"byte_end":72174,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"! * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72175,"byte_end":72263,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"! Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72264,"byte_end":72322,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"! * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72323,"byte_end":72386,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"! over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72387,"byte_end":72452,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72454,"byte_end":72457,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! [`TcpListener`]: TcpListener","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72458,"byte_end":72490,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"! [`TcpStream`]: TcpStream","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72491,"byte_end":72519,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"! [`UdpSocket`]: UdpSocket","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72520,"byte_end":72548,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"! [`UnixListener`]: UnixListener","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72549,"byte_end":72583,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"! [`UnixStream`]: UnixStream","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72584,"byte_end":72614,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"! [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72615,"byte_end":72649,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":319},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73898,"byte_end":73911,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73210,"byte_end":73287,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73288,"byte_end":73291,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73292,"byte_end":73301,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73302,"byte_end":73305,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73306,"byte_end":73383,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73384,"byte_end":73455,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73456,"byte_end":73483,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73484,"byte_end":73487,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73488,"byte_end":73501,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73502,"byte_end":73505,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73506,"byte_end":73583,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73584,"byte_end":73656,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73657,"byte_end":73726,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73727,"byte_end":73730,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73731,"byte_end":73810,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73811,"byte_end":73887,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":368},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79572,"byte_end":79589,"line_start":237,"line_end":237,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":369},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79605,"byte_end":79609,"line_start":238,"line_end":238,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":370},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79670,"byte_end":79676,"line_start":239,"line_end":239,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79748,"byte_end":79763,"line_start":241,"line_end":241,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> Self::Future","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2582},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":2583},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2685},{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":10833},{"krate":0,"index":2740},{"krate":0,"index":2843}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}},{"value":"! TCP utility types","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8050276,"byte_end":8050297,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2846},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8052897,"byte_end":8052908,"line_start":69,"line_end":69,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":2847}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054877,"byte_end":8054881,"line_start":132,"line_end":132,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8052991,"byte_end":8053067,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053072,"byte_end":8053075,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053080,"byte_end":8053141,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053146,"byte_end":8053149,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053154,"byte_end":8053229,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053234,"byte_end":8053310,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053315,"byte_end":8053326,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053331,"byte_end":8053334,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053339,"byte_end":8053414,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ Note that strings only implement this trait when the **`dns`** feature","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053419,"byte_end":8053493,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ is enabled, as strings may contain domain names that need to be resolved.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053498,"byte_end":8053575,"line_start":85,"line_end":85,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053580,"byte_end":8053583,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053588,"byte_end":8053664,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053669,"byte_end":8053742,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053747,"byte_end":8053820,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053825,"byte_end":8053877,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053882,"byte_end":8053885,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053890,"byte_end":8053953,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053958,"byte_end":8053961,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8053966,"byte_end":8054020,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054025,"byte_end":8054028,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054033,"byte_end":8054047,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054052,"byte_end":8054055,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054060,"byte_end":8054073,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054078,"byte_end":8054110,"line_start":99,"line_end":99,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054115,"byte_end":8054118,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054123,"byte_end":8054139,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054144,"byte_end":8054147,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054152,"byte_end":8054170,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054175,"byte_end":8054214,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054219,"byte_end":8054285,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054290,"byte_end":8054293,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054298,"byte_end":8054325,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054330,"byte_end":8054333,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054338,"byte_end":8054365,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054370,"byte_end":8054384,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054389,"byte_end":8054394,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054399,"byte_end":8054406,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054411,"byte_end":8054414,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054419,"byte_end":8054449,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054454,"byte_end":8054457,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054462,"byte_end":8054475,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054480,"byte_end":8054512,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054517,"byte_end":8054544,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054549,"byte_end":8054552,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054557,"byte_end":8054573,"line_start":120,"line_end":120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054578,"byte_end":8054581,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054586,"byte_end":8054604,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054609,"byte_end":8054648,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind((Ipv4Addr::new(127, 0, 0, 1), 2345)).await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054653,"byte_end":8054738,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054743,"byte_end":8054746,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054751,"byte_end":8054778,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054783,"byte_end":8054786,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054791,"byte_end":8054818,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054823,"byte_end":8054837,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054842,"byte_end":8054847,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8054852,"byte_end":8054859,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056453,"byte_end":8056459,"line_start":184,"line_end":184,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8055594,"byte_end":8055651,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8055656,"byte_end":8055659,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8055664,"byte_end":8055739,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8055744,"byte_end":8055814,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8055819,"byte_end":8055848,"line_start":161,"line_end":161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8055853,"byte_end":8055856,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8055861,"byte_end":8055908,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8055913,"byte_end":8055916,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8055921,"byte_end":8055935,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8055940,"byte_end":8055943,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8055948,"byte_end":8055961,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8055966,"byte_end":8055998,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056003,"byte_end":8056006,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056011,"byte_end":8056027,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056032,"byte_end":8056035,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056040,"byte_end":8056058,"line_start":172,"line_end":172,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056063,"byte_end":8056102,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056107,"byte_end":8056177,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056182,"byte_end":8056185,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056190,"byte_end":8056229,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056234,"byte_end":8056304,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056309,"byte_end":8056372,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056377,"byte_end":8056386,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056391,"byte_end":8056394,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056399,"byte_end":8056413,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056418,"byte_end":8056423,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056428,"byte_end":8056435,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2610},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056795,"byte_end":8056806,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","sig":null,"attributes":[{"value":"/ Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056572,"byte_end":8056644,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056649,"byte_end":8056652,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ In case if I/O resource isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056657,"byte_end":8056733,"line_start":190,"line_end":190,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8056738,"byte_end":8056783,"line_start":191,"line_end":191,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059668,"byte_end":8059676,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Creates a new TCP listener from the standard library's TCP listener.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8057653,"byte_end":8057725,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8057730,"byte_end":8057733,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8057738,"byte_end":8057808,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8057813,"byte_end":8057889,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8057894,"byte_end":8057938,"line_start":224,"line_end":224,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8057943,"byte_end":8057946,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8057951,"byte_end":8058026,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058031,"byte_end":8058107,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058112,"byte_end":8058177,"line_start":228,"line_end":228,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058182,"byte_end":8058237,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058242,"byte_end":8058245,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058250,"byte_end":8058321,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058326,"byte_end":8058401,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058406,"byte_end":8058445,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058450,"byte_end":8058453,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058458,"byte_end":8058521,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058526,"byte_end":8058529,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058534,"byte_end":8058607,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058612,"byte_end":8058643,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058648,"byte_end":8058651,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058656,"byte_end":8058729,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058734,"byte_end":8058809,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058814,"byte_end":8058887,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058892,"byte_end":8058919,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058924,"byte_end":8058927,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058932,"byte_end":8058946,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058951,"byte_end":8058954,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058959,"byte_end":8058977,"line_start":247,"line_end":247,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8058982,"byte_end":8059008,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059013,"byte_end":8059045,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059050,"byte_end":8059053,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059058,"byte_end":8059076,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059081,"byte_end":8059132,"line_start":252,"line_end":252,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059137,"byte_end":8059208,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059213,"byte_end":8059273,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059278,"byte_end":8059292,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059297,"byte_end":8059302,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059307,"byte_end":8059314,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059319,"byte_end":8059322,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059327,"byte_end":8059339,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059344,"byte_end":8059347,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059352,"byte_end":8059412,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059417,"byte_end":8059420,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059425,"byte_end":8059495,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059500,"byte_end":8059573,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8059578,"byte_end":8059656,"line_start":265,"line_end":265,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2614},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060760,"byte_end":8060770,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060034,"byte_end":8060095,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060100,"byte_end":8060103,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060108,"byte_end":8060181,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060186,"byte_end":8060220,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060225,"byte_end":8060228,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060233,"byte_end":8060247,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060252,"byte_end":8060255,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060260,"byte_end":8060278,"line_start":284,"line_end":284,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060283,"byte_end":8060315,"line_start":285,"line_end":285,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060320,"byte_end":8060323,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060328,"byte_end":8060344,"line_start":287,"line_end":287,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060349,"byte_end":8060404,"line_start":288,"line_end":288,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060409,"byte_end":8060412,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060417,"byte_end":8060435,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060440,"byte_end":8060479,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060484,"byte_end":8060550,"line_start":292,"line_end":292,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060555,"byte_end":8060558,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060563,"byte_end":8060605,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060610,"byte_end":8060699,"line_start":295,"line_end":295,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060704,"byte_end":8060707,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060712,"byte_end":8060726,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060731,"byte_end":8060736,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060741,"byte_end":8060748,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062201,"byte_end":8062209,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060856,"byte_end":8060930,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060935,"byte_end":8060938,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Note that `TcpListener` also directly implements `Stream`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8060943,"byte_end":8061005,"line_start":306,"line_end":306,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061010,"byte_end":8061013,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061018,"byte_end":8061094,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061099,"byte_end":8061168,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061173,"byte_end":8061202,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061207,"byte_end":8061210,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061215,"byte_end":8061227,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061232,"byte_end":8061235,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061240,"byte_end":8061315,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061320,"byte_end":8061395,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061400,"byte_end":8061474,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061479,"byte_end":8061554,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061559,"byte_end":8061567,"line_start":318,"line_end":318,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061572,"byte_end":8061575,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061580,"byte_end":8061594,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061599,"byte_end":8061602,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061607,"byte_end":8061620,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061625,"byte_end":8061678,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061683,"byte_end":8061686,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061691,"byte_end":8061709,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061714,"byte_end":8061735,"line_start":326,"line_end":326,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061740,"byte_end":8061818,"line_start":327,"line_end":327,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061823,"byte_end":8061870,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061875,"byte_end":8061878,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061883,"byte_end":8061939,"line_start":330,"line_end":330,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061944,"byte_end":8061970,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8061975,"byte_end":8062006,"line_start":332,"line_end":332,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062011,"byte_end":8062055,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062060,"byte_end":8062077,"line_start":334,"line_end":334,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062082,"byte_end":8062135,"line_start":335,"line_end":335,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062140,"byte_end":8062153,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062158,"byte_end":8062167,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062172,"byte_end":8062177,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062182,"byte_end":8062189,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2616},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062895,"byte_end":8062898,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062278,"byte_end":8062336,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062341,"byte_end":8062344,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062349,"byte_end":8062409,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062414,"byte_end":8062417,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062422,"byte_end":8062459,"line_start":348,"line_end":348,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062464,"byte_end":8062467,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062472,"byte_end":8062486,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062491,"byte_end":8062494,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062499,"byte_end":8062512,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062517,"byte_end":8062549,"line_start":353,"line_end":353,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062554,"byte_end":8062557,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062562,"byte_end":8062578,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062583,"byte_end":8062586,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062591,"byte_end":8062609,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062614,"byte_end":8062653,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062658,"byte_end":8062720,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062725,"byte_end":8062728,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062733,"byte_end":8062790,"line_start":361,"line_end":361,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062795,"byte_end":8062835,"line_start":362,"line_end":362,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062840,"byte_end":8062843,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062848,"byte_end":8062861,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062866,"byte_end":8062871,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062876,"byte_end":8062883,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063537,"byte_end":8063544,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8062970,"byte_end":8063028,"line_start":371,"line_end":371,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063033,"byte_end":8063036,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063041,"byte_end":8063117,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063122,"byte_end":8063143,"line_start":374,"line_end":374,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063148,"byte_end":8063151,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063156,"byte_end":8063170,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063175,"byte_end":8063178,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063183,"byte_end":8063196,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063201,"byte_end":8063233,"line_start":379,"line_end":379,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063238,"byte_end":8063241,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063246,"byte_end":8063262,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063267,"byte_end":8063270,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063275,"byte_end":8063293,"line_start":383,"line_end":383,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063298,"byte_end":8063337,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063342,"byte_end":8063405,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063410,"byte_end":8063413,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063418,"byte_end":8063476,"line_start":387,"line_end":387,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063481,"byte_end":8063484,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063489,"byte_end":8063503,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063508,"byte_end":8063513,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063518,"byte_end":8063525,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2848},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8065817,"byte_end":8065825,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":2850}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8065615,"byte_end":8065691,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8065692,"byte_end":8065739,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8065740,"byte_end":8065788,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8066240,"byte_end":8066251,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `TcpStream` by polling inner `TcpListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `TcpStream` by polling inner `TcpListener` to accept","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8066003,"byte_end":8066076,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ connection.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8066081,"byte_end":8066096,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8066101,"byte_end":8066104,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If `TcpListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8066109,"byte_end":8066178,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8066183,"byte_end":8066228,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2854},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8067810,"byte_end":8067818,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8067402,"byte_end":8067457,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8067458,"byte_end":8067461,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8067462,"byte_end":8067550,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8067551,"byte_end":8067628,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8067629,"byte_end":8067632,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8067633,"byte_end":8067661,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8067662,"byte_end":8067695,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8067696,"byte_end":8067747,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8067748,"byte_end":8067781,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2861},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068512,"byte_end":8068521,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8067840,"byte_end":8067896,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8067897,"byte_end":8067900,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8067901,"byte_end":8067987,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8067988,"byte_end":8068040,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068041,"byte_end":8068044,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068045,"byte_end":8068131,"line_start":39,"line_end":39,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068132,"byte_end":8068217,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068218,"byte_end":8068221,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068222,"byte_end":8068250,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068251,"byte_end":8068284,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068285,"byte_end":8068332,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068333,"byte_end":8068395,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068396,"byte_end":8068449,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068450,"byte_end":8068483,"line_start":47,"line_end":47,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2667},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069578,"byte_end":8069587,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068695,"byte_end":8068769,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068774,"byte_end":8068847,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068852,"byte_end":8068866,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068871,"byte_end":8068874,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068879,"byte_end":8068952,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068957,"byte_end":8068960,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068965,"byte_end":8068979,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068984,"byte_end":8068987,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068992,"byte_end":8069005,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069010,"byte_end":8069028,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069033,"byte_end":8069063,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069068,"byte_end":8069071,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069076,"byte_end":8069109,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069114,"byte_end":8069117,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069122,"byte_end":8069140,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069145,"byte_end":8069184,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069189,"byte_end":8069258,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069263,"byte_end":8069311,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069316,"byte_end":8069346,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069351,"byte_end":8069354,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069359,"byte_end":8069381,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069386,"byte_end":8069431,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069436,"byte_end":8069454,"line_start":78,"line_end":78,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069459,"byte_end":8069462,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069467,"byte_end":8069481,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069486,"byte_end":8069491,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069496,"byte_end":8069503,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069508,"byte_end":8069511,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069516,"byte_end":8069566,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2668},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8071004,"byte_end":8071008,"line_start":128,"line_end":128,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069712,"byte_end":8069782,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069787,"byte_end":8069856,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069861,"byte_end":8069900,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069905,"byte_end":8069908,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069913,"byte_end":8069981,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069986,"byte_end":8069989,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8069994,"byte_end":8070034,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070039,"byte_end":8070042,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070047,"byte_end":8070061,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070066,"byte_end":8070069,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070074,"byte_end":8070087,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070092,"byte_end":8070122,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070127,"byte_end":8070153,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070158,"byte_end":8070184,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070189,"byte_end":8070192,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070197,"byte_end":8070215,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070220,"byte_end":8070271,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070276,"byte_end":8070304,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070309,"byte_end":8070378,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070383,"byte_end":8070431,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070436,"byte_end":8070439,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070444,"byte_end":8070473,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070478,"byte_end":8070507,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070512,"byte_end":8070515,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070520,"byte_end":8070547,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070552,"byte_end":8070599,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070604,"byte_end":8070607,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070612,"byte_end":8070636,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070641,"byte_end":8070700,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070705,"byte_end":8070744,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070749,"byte_end":8070752,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070757,"byte_end":8070771,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070776,"byte_end":8070781,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070786,"byte_end":8070793,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070798,"byte_end":8070801,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070806,"byte_end":8070871,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070876,"byte_end":8070879,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070884,"byte_end":8070930,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8070935,"byte_end":8070986,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2868},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073610,"byte_end":8073623,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":2869}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073175,"byte_end":8073241,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073242,"byte_end":8073245,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073246,"byte_end":8073333,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073334,"byte_end":8073418,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073419,"byte_end":8073422,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073423,"byte_end":8073451,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073452,"byte_end":8073495,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073496,"byte_end":8073547,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073548,"byte_end":8073581,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2872},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8074429,"byte_end":8074443,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":2873},{"krate":0,"index":2874}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073656,"byte_end":8073723,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073724,"byte_end":8073727,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073728,"byte_end":8073814,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073815,"byte_end":8073867,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073868,"byte_end":8073871,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Dropping the write half will shutdown the write half of the TCP stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073872,"byte_end":8073947,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073948,"byte_end":8073951,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8073952,"byte_end":8074038,"line_start":45,"line_end":45,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8074039,"byte_end":8074124,"line_start":46,"line_end":46,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8074125,"byte_end":8074128,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8074129,"byte_end":8074157,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8074158,"byte_end":8074201,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8074202,"byte_end":8074249,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8074250,"byte_end":8074312,"line_start":51,"line_end":51,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8074313,"byte_end":8074366,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8074367,"byte_end":8074400,"line_start":53,"line_end":53,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2877},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8075387,"byte_end":8075399,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8075260,"byte_end":8075337,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ not be reunited.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8075338,"byte_end":8075358,"line_start":87,"line_end":87,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2879},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8075400,"byte_end":8075417,"line_start":89,"line_end":89,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":2877},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2880},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8075419,"byte_end":8075437,"line_start":89,"line_end":89,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":2877},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8075983,"byte_end":8075990,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8075720,"byte_end":8075789,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8075794,"byte_end":8075858,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8075863,"byte_end":8075915,"line_start":105,"line_end":105,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8075920,"byte_end":8075923,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8075928,"byte_end":8075971,"line_start":107,"line_end":107,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076981,"byte_end":8076990,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076097,"byte_end":8076171,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076176,"byte_end":8076249,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076254,"byte_end":8076268,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076273,"byte_end":8076276,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076281,"byte_end":8076354,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076359,"byte_end":8076362,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076367,"byte_end":8076381,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076386,"byte_end":8076389,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076394,"byte_end":8076407,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076412,"byte_end":8076430,"line_start":121,"line_end":121,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076435,"byte_end":8076465,"line_start":122,"line_end":122,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076470,"byte_end":8076473,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076478,"byte_end":8076511,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076516,"byte_end":8076519,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076524,"byte_end":8076542,"line_start":126,"line_end":126,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076547,"byte_end":8076586,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076591,"byte_end":8076656,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076661,"byte_end":8076714,"line_start":129,"line_end":129,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076719,"byte_end":8076749,"line_start":130,"line_end":130,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076754,"byte_end":8076757,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076762,"byte_end":8076784,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076789,"byte_end":8076834,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076839,"byte_end":8076857,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076862,"byte_end":8076865,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076870,"byte_end":8076884,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076889,"byte_end":8076894,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076899,"byte_end":8076906,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076911,"byte_end":8076914,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8076919,"byte_end":8076969,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078412,"byte_end":8078416,"line_start":184,"line_end":184,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077119,"byte_end":8077189,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077194,"byte_end":8077263,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077268,"byte_end":8077307,"line_start":147,"line_end":147,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077312,"byte_end":8077315,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077320,"byte_end":8077388,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077393,"byte_end":8077396,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077401,"byte_end":8077441,"line_start":151,"line_end":151,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077446,"byte_end":8077449,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077454,"byte_end":8077468,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077473,"byte_end":8077476,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077481,"byte_end":8077494,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077499,"byte_end":8077529,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077534,"byte_end":8077560,"line_start":157,"line_end":157,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077565,"byte_end":8077591,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077596,"byte_end":8077599,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077604,"byte_end":8077622,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077627,"byte_end":8077678,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077683,"byte_end":8077711,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077716,"byte_end":8077781,"line_start":163,"line_end":163,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077786,"byte_end":8077839,"line_start":164,"line_end":164,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077844,"byte_end":8077847,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077852,"byte_end":8077881,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077886,"byte_end":8077915,"line_start":167,"line_end":167,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077920,"byte_end":8077923,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077928,"byte_end":8077955,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8077960,"byte_end":8078007,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078012,"byte_end":8078015,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078020,"byte_end":8078044,"line_start":172,"line_end":172,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078049,"byte_end":8078108,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078113,"byte_end":8078152,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078157,"byte_end":8078160,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078165,"byte_end":8078179,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078184,"byte_end":8078189,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078194,"byte_end":8078201,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078206,"byte_end":8078209,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078214,"byte_end":8078279,"line_start":180,"line_end":180,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078284,"byte_end":8078287,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078292,"byte_end":8078338,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078343,"byte_end":8078394,"line_start":183,"line_end":183,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2722},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8079149,"byte_end":8079156,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078886,"byte_end":8078955,"line_start":204,"line_end":204,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078960,"byte_end":8079024,"line_start":205,"line_end":205,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8079029,"byte_end":8079081,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8079086,"byte_end":8079089,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8079094,"byte_end":8079137,"line_start":208,"line_end":208,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8079330,"byte_end":8079336,"line_start":214,"line_end":214,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drop the write half, but don't issue a TCP shutdown.\n","sig":null,"attributes":[{"value":"/ Drop the write half, but don't issue a TCP shutdown.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8079262,"byte_end":8079318,"line_start":213,"line_end":213,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2883},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8082626,"byte_end":8082635,"line_start":58,"line_end":58,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":2884}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2774},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084716,"byte_end":8084723,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8082714,"byte_end":8082758,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8082763,"byte_end":8082766,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8082771,"byte_end":8082845,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address. Note that","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8082850,"byte_end":8082919,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ strings only implement this trait when the **`dns`** feature is enabled,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8082924,"byte_end":8083000,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ as strings may contain domain names that need to be resolved.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083005,"byte_end":8083070,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083075,"byte_end":8083078,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083083,"byte_end":8083159,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083164,"byte_end":8083233,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083238,"byte_end":8083314,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083319,"byte_end":8083378,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083383,"byte_end":8083386,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083391,"byte_end":8083445,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083450,"byte_end":8083453,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083458,"byte_end":8083472,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083477,"byte_end":8083480,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083485,"byte_end":8083498,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083503,"byte_end":8083533,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083538,"byte_end":8083564,"line_start":82,"line_end":82,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083569,"byte_end":8083595,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083600,"byte_end":8083603,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083608,"byte_end":8083626,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083631,"byte_end":8083682,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083687,"byte_end":8083715,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083720,"byte_end":8083789,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083794,"byte_end":8083797,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083802,"byte_end":8083829,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083834,"byte_end":8083883,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083888,"byte_end":8083891,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083896,"byte_end":8083910,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083915,"byte_end":8083920,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083925,"byte_end":8083932,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083937,"byte_end":8083940,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083945,"byte_end":8083975,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083980,"byte_end":8083983,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8083988,"byte_end":8084001,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084006,"byte_end":8084036,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084041,"byte_end":8084067,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084072,"byte_end":8084098,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084103,"byte_end":8084130,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084135,"byte_end":8084138,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084143,"byte_end":8084161,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084166,"byte_end":8084217,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084222,"byte_end":8084250,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect((Ipv4Addr::new(127, 0, 0, 1), 8080)).await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084255,"byte_end":8084343,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084348,"byte_end":8084351,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084356,"byte_end":8084383,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084388,"byte_end":8084437,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084442,"byte_end":8084445,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084450,"byte_end":8084464,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084469,"byte_end":8084474,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084479,"byte_end":8084486,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084491,"byte_end":8084494,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084499,"byte_end":8084570,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084575,"byte_end":8084578,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084583,"byte_end":8084640,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8084645,"byte_end":8084698,"line_start":120,"line_end":120,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2784},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8087156,"byte_end":8087164,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086189,"byte_end":8086246,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086251,"byte_end":8086254,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086259,"byte_end":8086334,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086339,"byte_end":8086412,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086417,"byte_end":8086420,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086425,"byte_end":8086439,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086444,"byte_end":8086447,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086452,"byte_end":8086470,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086475,"byte_end":8086501,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086506,"byte_end":8086536,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086541,"byte_end":8086544,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086549,"byte_end":8086567,"line_start":177,"line_end":177,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086572,"byte_end":8086623,"line_start":178,"line_end":178,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086628,"byte_end":8086702,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086707,"byte_end":8086761,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086766,"byte_end":8086780,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086785,"byte_end":8086790,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086795,"byte_end":8086802,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086807,"byte_end":8086810,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086815,"byte_end":8086827,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086832,"byte_end":8086835,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086840,"byte_end":8086900,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086905,"byte_end":8086908,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086913,"byte_end":8086983,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8086988,"byte_end":8087061,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8087066,"byte_end":8087144,"line_start":191,"line_end":191,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8087561,"byte_end":8087572,"line_start":202,"line_end":202,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"pub async fn connect_std<'_>(net::TcpStream, &'_ SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088720,"byte_end":8088730,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088321,"byte_end":8088380,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088385,"byte_end":8088388,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088393,"byte_end":8088407,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088412,"byte_end":8088415,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088420,"byte_end":8088433,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088438,"byte_end":8088468,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088473,"byte_end":8088476,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088481,"byte_end":8088545,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088550,"byte_end":8088611,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088616,"byte_end":8088619,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088624,"byte_end":8088667,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088672,"byte_end":8088684,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088689,"byte_end":8088696,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088701,"byte_end":8088708,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089219,"byte_end":8089228,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088816,"byte_end":8088880,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088885,"byte_end":8088888,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088893,"byte_end":8088907,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088912,"byte_end":8088915,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088920,"byte_end":8088933,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088938,"byte_end":8088968,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088973,"byte_end":8088976,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8088981,"byte_end":8089045,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089050,"byte_end":8089111,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089116,"byte_end":8089119,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089124,"byte_end":8089166,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089171,"byte_end":8089183,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089188,"byte_end":8089195,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089200,"byte_end":8089207,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2791},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8090386,"byte_end":8090395,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089313,"byte_end":8089388,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089393,"byte_end":8089466,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089471,"byte_end":8089485,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089490,"byte_end":8089493,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089498,"byte_end":8089516,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089521,"byte_end":8089524,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089529,"byte_end":8089554,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089559,"byte_end":8089562,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089567,"byte_end":8089618,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089623,"byte_end":8089706,"line_start":267,"line_end":267,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089711,"byte_end":8089766,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089771,"byte_end":8089774,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089779,"byte_end":8089791,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089796,"byte_end":8089799,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089804,"byte_end":8089879,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089884,"byte_end":8089887,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089892,"byte_end":8089906,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089911,"byte_end":8089914,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089919,"byte_end":8089932,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089937,"byte_end":8089955,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089960,"byte_end":8089990,"line_start":278,"line_end":278,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8089995,"byte_end":8089998,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8090003,"byte_end":8090036,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8090041,"byte_end":8090044,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8090049,"byte_end":8090067,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8090072,"byte_end":8090111,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8090116,"byte_end":8090185,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8090190,"byte_end":8090220,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8090225,"byte_end":8090228,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8090233,"byte_end":8090255,"line_start":287,"line_end":287,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8090260,"byte_end":8090302,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8090307,"byte_end":8090325,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8090330,"byte_end":8090333,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8090338,"byte_end":8090352,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8090357,"byte_end":8090362,"line_start":292,"line_end":292,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8090367,"byte_end":8090374,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092307,"byte_end":8092311,"line_start":352,"line_end":352,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091056,"byte_end":8091126,"line_start":315,"line_end":315,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091131,"byte_end":8091200,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091205,"byte_end":8091244,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091249,"byte_end":8091252,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091257,"byte_end":8091331,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091336,"byte_end":8091396,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091401,"byte_end":8091404,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091409,"byte_end":8091423,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091428,"byte_end":8091431,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091436,"byte_end":8091449,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091454,"byte_end":8091484,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091489,"byte_end":8091515,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091520,"byte_end":8091546,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091551,"byte_end":8091554,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091559,"byte_end":8091577,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091582,"byte_end":8091633,"line_start":330,"line_end":330,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091638,"byte_end":8091666,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091671,"byte_end":8091740,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091745,"byte_end":8091748,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091753,"byte_end":8091782,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091787,"byte_end":8091816,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091821,"byte_end":8091824,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091829,"byte_end":8091856,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091861,"byte_end":8091905,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091910,"byte_end":8091913,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091918,"byte_end":8091942,"line_start":340,"line_end":340,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8091947,"byte_end":8092003,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092008,"byte_end":8092047,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092052,"byte_end":8092055,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092060,"byte_end":8092074,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092079,"byte_end":8092084,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092089,"byte_end":8092096,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092101,"byte_end":8092104,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092109,"byte_end":8092174,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092179,"byte_end":8092182,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092187,"byte_end":8092233,"line_start":350,"line_end":350,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092238,"byte_end":8092289,"line_start":351,"line_end":351,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093180,"byte_end":8093188,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092425,"byte_end":8092491,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092496,"byte_end":8092499,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092504,"byte_end":8092576,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092581,"byte_end":8092650,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092655,"byte_end":8092688,"line_start":360,"line_end":360,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092693,"byte_end":8092696,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092701,"byte_end":8092715,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092720,"byte_end":8092723,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092728,"byte_end":8092741,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092746,"byte_end":8092776,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092781,"byte_end":8092807,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092812,"byte_end":8092839,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092844,"byte_end":8092847,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092852,"byte_end":8092870,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092875,"byte_end":8092926,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092931,"byte_end":8092959,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8092964,"byte_end":8093029,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093034,"byte_end":8093037,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093042,"byte_end":8093072,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093077,"byte_end":8093119,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093124,"byte_end":8093127,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093132,"byte_end":8093146,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093151,"byte_end":8093156,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093161,"byte_end":8093168,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093814,"byte_end":8093821,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093282,"byte_end":8093344,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093349,"byte_end":8093352,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093357,"byte_end":8093421,"line_start":386,"line_end":386,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093426,"byte_end":8093429,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093434,"byte_end":8093477,"line_start":388,"line_end":388,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093482,"byte_end":8093485,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093490,"byte_end":8093504,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093509,"byte_end":8093512,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093517,"byte_end":8093530,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093535,"byte_end":8093565,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093570,"byte_end":8093573,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093578,"byte_end":8093642,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093647,"byte_end":8093708,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093713,"byte_end":8093716,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093721,"byte_end":8093761,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093766,"byte_end":8093778,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093783,"byte_end":8093790,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093795,"byte_end":8093802,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094628,"byte_end":8094639,"line_start":426,"line_end":426,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093898,"byte_end":8093960,"line_start":406,"line_end":406,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093965,"byte_end":8093968,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8093973,"byte_end":8094042,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094047,"byte_end":8094120,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094125,"byte_end":8094198,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094203,"byte_end":8094278,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094283,"byte_end":8094301,"line_start":412,"line_end":412,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094306,"byte_end":8094309,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094314,"byte_end":8094328,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094333,"byte_end":8094336,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094341,"byte_end":8094354,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094359,"byte_end":8094389,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094394,"byte_end":8094397,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094402,"byte_end":8094466,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094471,"byte_end":8094532,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094537,"byte_end":8094540,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094545,"byte_end":8094575,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094580,"byte_end":8094592,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094597,"byte_end":8094604,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094609,"byte_end":8094616,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095306,"byte_end":8095322,"line_start":448,"line_end":448,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094740,"byte_end":8094800,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094805,"byte_end":8094808,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094813,"byte_end":8094886,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094891,"byte_end":8094894,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: TcpStream::set_recv_buffer_size","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094899,"byte_end":8094960,"line_start":434,"line_end":434,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094965,"byte_end":8094968,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094973,"byte_end":8094987,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8094992,"byte_end":8094995,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095000,"byte_end":8095013,"line_start":438,"line_end":438,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095018,"byte_end":8095048,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095053,"byte_end":8095056,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095061,"byte_end":8095125,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095130,"byte_end":8095191,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095196,"byte_end":8095199,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095204,"byte_end":8095253,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095258,"byte_end":8095270,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095275,"byte_end":8095282,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095287,"byte_end":8095294,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095914,"byte_end":8095934,"line_start":469,"line_end":469,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095409,"byte_end":8095469,"line_start":452,"line_end":452,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095474,"byte_end":8095477,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095482,"byte_end":8095554,"line_start":454,"line_end":454,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095559,"byte_end":8095579,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095584,"byte_end":8095587,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095592,"byte_end":8095606,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095611,"byte_end":8095614,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095619,"byte_end":8095632,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095637,"byte_end":8095667,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095672,"byte_end":8095675,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095680,"byte_end":8095744,"line_start":462,"line_end":462,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095749,"byte_end":8095810,"line_start":463,"line_end":463,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095815,"byte_end":8095818,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095823,"byte_end":8095861,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095866,"byte_end":8095878,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095883,"byte_end":8095890,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8095895,"byte_end":8095902,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096605,"byte_end":8096621,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096039,"byte_end":8096099,"line_start":473,"line_end":473,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096104,"byte_end":8096107,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096112,"byte_end":8096185,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096190,"byte_end":8096193,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: TcpStream::set_send_buffer_size","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096198,"byte_end":8096259,"line_start":477,"line_end":477,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096264,"byte_end":8096267,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096272,"byte_end":8096286,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096291,"byte_end":8096294,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096299,"byte_end":8096312,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096317,"byte_end":8096347,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096352,"byte_end":8096355,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096360,"byte_end":8096424,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096429,"byte_end":8096490,"line_start":485,"line_end":485,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096495,"byte_end":8096498,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096503,"byte_end":8096552,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096557,"byte_end":8096569,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096574,"byte_end":8096581,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096586,"byte_end":8096593,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097210,"byte_end":8097230,"line_start":512,"line_end":512,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096708,"byte_end":8096768,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096773,"byte_end":8096776,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096781,"byte_end":8096855,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096860,"byte_end":8096875,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096880,"byte_end":8096883,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096888,"byte_end":8096902,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096907,"byte_end":8096910,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096915,"byte_end":8096928,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096933,"byte_end":8096963,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096968,"byte_end":8096971,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8096976,"byte_end":8097040,"line_start":505,"line_end":505,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097045,"byte_end":8097106,"line_start":506,"line_end":506,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097111,"byte_end":8097114,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097119,"byte_end":8097157,"line_start":508,"line_end":508,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097162,"byte_end":8097174,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097179,"byte_end":8097186,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097191,"byte_end":8097198,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097932,"byte_end":8097941,"line_start":535,"line_end":535,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"pub fn keepalive(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097335,"byte_end":8097411,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097416,"byte_end":8097454,"line_start":517,"line_end":517,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097459,"byte_end":8097462,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097467,"byte_end":8097533,"line_start":519,"line_end":519,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097538,"byte_end":8097541,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: TcpStream::set_keepalive","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097546,"byte_end":8097593,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097598,"byte_end":8097601,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097606,"byte_end":8097620,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097625,"byte_end":8097628,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097633,"byte_end":8097646,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097651,"byte_end":8097681,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097686,"byte_end":8097689,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097694,"byte_end":8097758,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097763,"byte_end":8097824,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097829,"byte_end":8097832,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097837,"byte_end":8097879,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097884,"byte_end":8097896,"line_start":532,"line_end":532,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097901,"byte_end":8097908,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8097913,"byte_end":8097920,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098972,"byte_end":8098985,"line_start":564,"line_end":564,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"pub fn set_keepalive(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098032,"byte_end":8098106,"line_start":539,"line_end":539,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098111,"byte_end":8098114,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098119,"byte_end":8098186,"line_start":541,"line_end":541,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098191,"byte_end":8098265,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098270,"byte_end":8098332,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098337,"byte_end":8098340,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098345,"byte_end":8098419,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098424,"byte_end":8098499,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098504,"byte_end":8098528,"line_start":547,"line_end":547,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098533,"byte_end":8098536,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098541,"byte_end":8098604,"line_start":549,"line_end":549,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098609,"byte_end":8098643,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098648,"byte_end":8098651,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098656,"byte_end":8098670,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098675,"byte_end":8098678,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098683,"byte_end":8098696,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098701,"byte_end":8098731,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098736,"byte_end":8098739,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098744,"byte_end":8098808,"line_start":557,"line_end":557,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098813,"byte_end":8098874,"line_start":558,"line_end":558,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098879,"byte_end":8098882,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098887,"byte_end":8098919,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098924,"byte_end":8098936,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098941,"byte_end":8098948,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8098953,"byte_end":8098960,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099616,"byte_end":8099619,"line_start":586,"line_end":586,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099104,"byte_end":8099162,"line_start":568,"line_end":568,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099167,"byte_end":8099170,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099175,"byte_end":8099235,"line_start":570,"line_end":570,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099240,"byte_end":8099243,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099248,"byte_end":8099283,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099288,"byte_end":8099291,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099296,"byte_end":8099310,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099315,"byte_end":8099318,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099323,"byte_end":8099336,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099341,"byte_end":8099371,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099376,"byte_end":8099379,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099384,"byte_end":8099448,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099453,"byte_end":8099514,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099519,"byte_end":8099522,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099527,"byte_end":8099563,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099568,"byte_end":8099580,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099585,"byte_end":8099592,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099597,"byte_end":8099604,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100186,"byte_end":8100193,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099691,"byte_end":8099749,"line_start":590,"line_end":590,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099754,"byte_end":8099757,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099762,"byte_end":8099838,"line_start":592,"line_end":592,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099843,"byte_end":8099864,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099869,"byte_end":8099872,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099877,"byte_end":8099891,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099896,"byte_end":8099899,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099904,"byte_end":8099917,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099922,"byte_end":8099952,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099957,"byte_end":8099960,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8099965,"byte_end":8100029,"line_start":600,"line_end":600,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100034,"byte_end":8100095,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100100,"byte_end":8100103,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100108,"byte_end":8100133,"line_start":603,"line_end":603,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100138,"byte_end":8100150,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100155,"byte_end":8100162,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100167,"byte_end":8100174,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2808},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100835,"byte_end":8100841,"line_start":630,"line_end":630,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100281,"byte_end":8100353,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100358,"byte_end":8100369,"line_start":612,"line_end":612,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100374,"byte_end":8100377,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100382,"byte_end":8100445,"line_start":614,"line_end":614,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100450,"byte_end":8100453,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100458,"byte_end":8100499,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100504,"byte_end":8100507,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100512,"byte_end":8100526,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100531,"byte_end":8100534,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100539,"byte_end":8100552,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100557,"byte_end":8100587,"line_start":621,"line_end":621,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100592,"byte_end":8100595,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100600,"byte_end":8100664,"line_start":623,"line_end":623,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100669,"byte_end":8100730,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100735,"byte_end":8100738,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100743,"byte_end":8100782,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100787,"byte_end":8100799,"line_start":627,"line_end":627,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100804,"byte_end":8100811,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100816,"byte_end":8100823,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101783,"byte_end":8101793,"line_start":658,"line_end":658,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8100929,"byte_end":8100999,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101004,"byte_end":8101015,"line_start":635,"line_end":635,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101020,"byte_end":8101023,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101028,"byte_end":8101103,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101108,"byte_end":8101171,"line_start":638,"line_end":638,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101176,"byte_end":8101247,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101252,"byte_end":8101269,"line_start":640,"line_end":640,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101274,"byte_end":8101277,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101282,"byte_end":8101355,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101360,"byte_end":8101436,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101441,"byte_end":8101457,"line_start":644,"line_end":644,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101462,"byte_end":8101465,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101470,"byte_end":8101484,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101489,"byte_end":8101492,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101497,"byte_end":8101510,"line_start":648,"line_end":648,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101515,"byte_end":8101545,"line_start":649,"line_end":649,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101550,"byte_end":8101553,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101558,"byte_end":8101622,"line_start":651,"line_end":651,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101627,"byte_end":8101688,"line_start":652,"line_end":652,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101693,"byte_end":8101696,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101701,"byte_end":8101730,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101735,"byte_end":8101747,"line_start":655,"line_end":655,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101752,"byte_end":8101759,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101764,"byte_end":8101771,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8102233,"byte_end":8102238,"line_start":669,"line_end":669,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split(&mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101897,"byte_end":8101974,"line_start":662,"line_end":662,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8101979,"byte_end":8102025,"line_start":663,"line_end":663,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8102030,"byte_end":8102033,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8102038,"byte_end":8102117,"line_start":665,"line_end":665,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8102122,"byte_end":8102165,"line_start":666,"line_end":666,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8102170,"byte_end":8102173,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8102178,"byte_end":8102221,"line_start":668,"line_end":668,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8102821,"byte_end":8102831,"line_start":683,"line_end":683,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8102316,"byte_end":8102393,"line_start":673,"line_end":673,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8102398,"byte_end":8102444,"line_start":674,"line_end":674,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8102449,"byte_end":8102452,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8102457,"byte_end":8102535,"line_start":676,"line_end":676,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8102540,"byte_end":8102588,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8102593,"byte_end":8102596,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ **Note::** Dropping the write half will shutdown the write half of the TCP","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8102601,"byte_end":8102679,"line_start":679,"line_end":679,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling `shutdown(Write)` on the `TcpStream`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8102684,"byte_end":8102763,"line_start":680,"line_end":680,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8102768,"byte_end":8102771,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8102776,"byte_end":8102809,"line_start":682,"line_end":682,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":2885},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::net::udp","value":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","parent":null,"children":[{"krate":0,"index":2886},{"krate":0,"index":2969},{"krate":0,"index":2970},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":10947},{"krate":0,"index":3010}],"decl_id":null,"docs":" UDP utility types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23406,"byte_end":23429,"line_start":340,"line_end":340,"column_start":13,"column_end":36}},{"value":"! UDP utility types.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8110084,"byte_end":8110106,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3012},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8110562,"byte_end":8110571,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::socket::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3013}],"decl_id":null,"docs":" A UDP socket\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23406,"byte_end":23429,"line_start":340,"line_end":340,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2906},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8110769,"byte_end":8110773,"line_start":22,"line_end":22,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.\n","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8110650,"byte_end":8110722,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8110727,"byte_end":8110751,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8112476,"byte_end":8112484,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8111608,"byte_end":8111680,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8111685,"byte_end":8111688,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8111693,"byte_end":8111766,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ is associated with. This function requires that `socket` has previously","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8111771,"byte_end":8111846,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8111851,"byte_end":8111898,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8111903,"byte_end":8111906,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8111911,"byte_end":8111984,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8111989,"byte_end":8112064,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8112069,"byte_end":8112122,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8112127,"byte_end":8112130,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8112135,"byte_end":8112147,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8112152,"byte_end":8112155,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8112160,"byte_end":8112220,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8112225,"byte_end":8112228,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8112233,"byte_end":8112303,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8112308,"byte_end":8112381,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8112386,"byte_end":8112464,"line_start":67,"line_end":67,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8112868,"byte_end":8112873,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"split","qualname":"<UdpSocket>::split","value":"pub fn split(Self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `UdpSocket` into a receive half and a send half. The two parts\n can be used to receive and send datagrams concurrently, even from two\n different tasks.\n","sig":null,"attributes":[{"value":"/ Splits the `UdpSocket` into a receive half and a send half. The two parts","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8112676,"byte_end":8112753,"line_start":74,"line_end":74,"column_start":5,"column_end":82}},{"value":"/ can be used to receive and send datagrams concurrently, even from two","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8112758,"byte_end":8112831,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ different tasks.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8112836,"byte_end":8112856,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2915},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8113008,"byte_end":8113018,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8112937,"byte_end":8112996,"line_start":81,"line_end":81,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8113290,"byte_end":8113297,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<'_, A: ToSocketAddrs>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8113104,"byte_end":8113178,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8113183,"byte_end":8113256,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8113261,"byte_end":8113272,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2921},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8114234,"byte_end":8114238,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8113831,"byte_end":8113929,"line_start":108,"line_end":108,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8113934,"byte_end":8114005,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8114010,"byte_end":8114013,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8114018,"byte_end":8114101,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8114106,"byte_end":8114166,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8114171,"byte_end":8114174,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8114179,"byte_end":8114216,"line_start":114,"line_end":114,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2925},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8114965,"byte_end":8114974,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2926},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8115992,"byte_end":8115996,"line_start":154,"line_end":154,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8115352,"byte_end":8115431,"line_start":142,"line_end":142,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8115436,"byte_end":8115520,"line_start":143,"line_end":143,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8115525,"byte_end":8115557,"line_start":144,"line_end":144,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8115562,"byte_end":8115565,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8115570,"byte_end":8115651,"line_start":146,"line_end":146,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8115656,"byte_end":8115739,"line_start":147,"line_end":147,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8115744,"byte_end":8115778,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8115783,"byte_end":8115786,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8115791,"byte_end":8115874,"line_start":150,"line_end":150,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8115879,"byte_end":8115924,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8115929,"byte_end":8115932,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8115937,"byte_end":8115974,"line_start":153,"line_end":153,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2930},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8116136,"byte_end":8116145,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2931},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8116864,"byte_end":8116871,"line_start":176,"line_end":176,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<'_, '_, A: ToSocketAddrs>(&'_ mut Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8116573,"byte_end":8116645,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8116650,"byte_end":8116721,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8116726,"byte_end":8116729,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8116734,"byte_end":8116810,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8116815,"byte_end":8116846,"line_start":175,"line_end":175,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2936},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8117343,"byte_end":8117355,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], &SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2937},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8118194,"byte_end":8118203,"line_start":213,"line_end":213,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8117804,"byte_end":8117883,"line_start":207,"line_end":207,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8117888,"byte_end":8117955,"line_start":208,"line_end":208,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8117960,"byte_end":8117963,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8117968,"byte_end":8118046,"line_start":210,"line_end":210,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8118051,"byte_end":8118129,"line_start":211,"line_end":211,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8118134,"byte_end":8118176,"line_start":212,"line_end":212,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2941},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8118362,"byte_end":8118376,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut [u8])\n-> Poll<Result<(usize, SocketAddr), io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2942},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119078,"byte_end":8119087,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8118861,"byte_end":8118925,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8118930,"byte_end":8118933,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8118938,"byte_end":8119004,"line_start":236,"line_end":236,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119009,"byte_end":8119012,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119017,"byte_end":8119066,"line_start":238,"line_end":238,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2943},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119343,"byte_end":8119356,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119166,"byte_end":8119230,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119235,"byte_end":8119238,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119243,"byte_end":8119314,"line_start":245,"line_end":245,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119319,"byte_end":8119331,"line_start":246,"line_end":246,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2944},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119695,"byte_end":8119712,"line_start":256,"line_end":256,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119449,"byte_end":8119518,"line_start":251,"line_end":251,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119523,"byte_end":8119526,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119531,"byte_end":8119605,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119610,"byte_end":8119613,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119618,"byte_end":8119683,"line_start":255,"line_end":255,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8120052,"byte_end":8120073,"line_start":267,"line_end":267,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119799,"byte_end":8119868,"line_start":260,"line_end":260,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119873,"byte_end":8119876,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119881,"byte_end":8119955,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119960,"byte_end":8119963,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119968,"byte_end":8119978,"line_start":264,"line_end":264,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119983,"byte_end":8119986,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8119991,"byte_end":8120040,"line_start":266,"line_end":266,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2946},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8120416,"byte_end":8120432,"line_start":276,"line_end":276,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8120174,"byte_end":8120242,"line_start":271,"line_end":271,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8120247,"byte_end":8120250,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8120255,"byte_end":8120328,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8120333,"byte_end":8120336,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8120341,"byte_end":8120404,"line_start":275,"line_end":275,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2947},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8120911,"byte_end":8120931,"line_start":289,"line_end":289,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8120517,"byte_end":8120585,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8120590,"byte_end":8120593,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8120598,"byte_end":8120668,"line_start":282,"line_end":282,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8120673,"byte_end":8120747,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8120752,"byte_end":8120814,"line_start":284,"line_end":284,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8120819,"byte_end":8120822,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8120827,"byte_end":8120837,"line_start":286,"line_end":286,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8120842,"byte_end":8120845,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8120850,"byte_end":8120899,"line_start":288,"line_end":288,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2948},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121280,"byte_end":8121297,"line_start":298,"line_end":298,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121032,"byte_end":8121103,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121108,"byte_end":8121111,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121116,"byte_end":8121190,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121195,"byte_end":8121198,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121203,"byte_end":8121268,"line_start":297,"line_end":297,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2949},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121641,"byte_end":8121662,"line_start":309,"line_end":309,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121384,"byte_end":8121455,"line_start":302,"line_end":302,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121460,"byte_end":8121463,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121468,"byte_end":8121544,"line_start":304,"line_end":304,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121549,"byte_end":8121552,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121557,"byte_end":8121567,"line_start":306,"line_end":306,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121572,"byte_end":8121575,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121580,"byte_end":8121629,"line_start":308,"line_end":308,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2950},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121956,"byte_end":8121959,"line_start":318,"line_end":318,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121763,"byte_end":8121821,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121826,"byte_end":8121829,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121834,"byte_end":8121894,"line_start":315,"line_end":315,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121899,"byte_end":8121902,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8121907,"byte_end":8121944,"line_start":317,"line_end":317,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8122216,"byte_end":8122223,"line_start":326,"line_end":326,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8122031,"byte_end":8122089,"line_start":322,"line_end":322,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8122094,"byte_end":8122097,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8122102,"byte_end":8122178,"line_start":324,"line_end":324,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8122183,"byte_end":8122204,"line_start":325,"line_end":325,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2952},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8122741,"byte_end":8122758,"line_start":337,"line_end":337,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8122311,"byte_end":8122369,"line_start":330,"line_end":330,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8122374,"byte_end":8122377,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8122382,"byte_end":8122456,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8122461,"byte_end":8122534,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8122539,"byte_end":8122611,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8122616,"byte_end":8122686,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8122691,"byte_end":8122729,"line_start":336,"line_end":336,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8123223,"byte_end":8123240,"line_start":346,"line_end":346,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8122907,"byte_end":8122967,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8122972,"byte_end":8122975,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8122980,"byte_end":8123054,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8123059,"byte_end":8123132,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8123137,"byte_end":8123211,"line_start":345,"line_end":345,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2954},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8123607,"byte_end":8123625,"line_start":355,"line_end":355,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8123383,"byte_end":8123442,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8123447,"byte_end":8123450,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8123455,"byte_end":8123525,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8123530,"byte_end":8123533,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8123538,"byte_end":8123595,"line_start":354,"line_end":354,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2955},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8124001,"byte_end":8124019,"line_start":364,"line_end":364,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8123775,"byte_end":8123836,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8123841,"byte_end":8123844,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8123849,"byte_end":8123919,"line_start":361,"line_end":361,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8123924,"byte_end":8123927,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8123932,"byte_end":8123989,"line_start":363,"line_end":363,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3014},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8126654,"byte_end":8126662,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::udp::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The send half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The send half after [`split`](super::UdpSocket::split).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8126466,"byte_end":8126525,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8126526,"byte_end":8126529,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Use [`send_to`](method@Self::send_to) or [`send`](method@Self::send) to send","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8126530,"byte_end":8126610,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ datagrams.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8126611,"byte_end":8126625,"line_start":27,"line_end":27,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3019},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8126876,"byte_end":8126884,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::udp::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The recv half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The recv half after [`split`](super::UdpSocket::split).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8126681,"byte_end":8126740,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8126741,"byte_end":8126744,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use [`recv_from`](method@Self::recv_from) or [`recv`](method@Self::recv) to receive","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8126745,"byte_end":8126832,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ datagrams.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8126833,"byte_end":8126847,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3024},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8127226,"byte_end":8127238,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::udp::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8127097,"byte_end":8127174,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ not be `reunite`d.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8127175,"byte_end":8127197,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3026},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8127239,"byte_end":8127251,"line_start":48,"line_end":48,"column_start":25,"column_end":37},"name":"0","qualname":"::net::udp::split::ReuniteError::0","value":"net::udp::split::SendHalf","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3027},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8127253,"byte_end":8127265,"line_start":48,"line_end":48,"column_start":39,"column_end":51},"name":"1","qualname":"::net::udp::split::ReuniteError::1","value":"net::udp::split::RecvHalf","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8128275,"byte_end":8128282,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"reunite","qualname":"<RecvHalf>::reunite","value":"pub fn reunite(Self, SendHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8128060,"byte_end":8128131,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8128136,"byte_end":8128202,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8128207,"byte_end":8128263,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2985},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8128773,"byte_end":8128782,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8128383,"byte_end":8128462,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8128467,"byte_end":8128534,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8128539,"byte_end":8128542,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8128547,"byte_end":8128625,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8128630,"byte_end":8128708,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8128713,"byte_end":8128755,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2989},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129562,"byte_end":8129566,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8128917,"byte_end":8128996,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129001,"byte_end":8129085,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129090,"byte_end":8129122,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129127,"byte_end":8129130,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129135,"byte_end":8129216,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129221,"byte_end":8129304,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129309,"byte_end":8129343,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129348,"byte_end":8129351,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129356,"byte_end":8129439,"line_start":100,"line_end":100,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129444,"byte_end":8129489,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129494,"byte_end":8129497,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129502,"byte_end":8129544,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2994},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129915,"byte_end":8129922,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SendHalf>::reunite","value":"pub fn reunite(Self, RecvHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129700,"byte_end":8129771,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129776,"byte_end":8129842,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129847,"byte_end":8129903,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2995},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8130314,"byte_end":8130321,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"pub async fn send_to<'_, '_, '_>(&'_ mut Self, &'_ [u8], &'_ SocketAddr)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8130023,"byte_end":8130095,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8130100,"byte_end":8130171,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8130176,"byte_end":8130179,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8130184,"byte_end":8130260,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8130265,"byte_end":8130296,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2999},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8130873,"byte_end":8130877,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8130465,"byte_end":8130563,"line_start":126,"line_end":126,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8130568,"byte_end":8130639,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8130644,"byte_end":8130647,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8130652,"byte_end":8130735,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8130740,"byte_end":8130800,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8130805,"byte_end":8130808,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8130813,"byte_end":8130855,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":3030},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":3031},{"krate":0,"index":3092},{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3179},{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3262}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}},{"value":"! Unix domain socket utility types","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8131185,"byte_end":8131221,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3266},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8131859,"byte_end":8131871,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":3267}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8132028,"byte_end":8132032,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixDatagram> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8131955,"byte_end":8132016,"line_start":21,"line_end":21,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3051},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8132495,"byte_end":8132499,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8132215,"byte_end":8132264,"line_start":30,"line_end":30,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8132269,"byte_end":8132272,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8132277,"byte_end":8132348,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8132353,"byte_end":8132423,"line_start":33,"line_end":33,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8132428,"byte_end":8132483,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3052},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8133325,"byte_end":8133333,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixDatagram` in the standard library and returns a\n nonblocking `UnixDatagram` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixDatagram` in the standard library and returns a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8132710,"byte_end":8132777,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixDatagram` from this crate.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8132782,"byte_end":8132829,"line_start":44,"line_end":44,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8132834,"byte_end":8132837,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ The returned datagram will be associated with the given event loop","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8132842,"byte_end":8132912,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8132917,"byte_end":8132971,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8132976,"byte_end":8132979,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8132984,"byte_end":8132996,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8133001,"byte_end":8133004,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8133009,"byte_end":8133069,"line_start":51,"line_end":51,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8133074,"byte_end":8133077,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8133082,"byte_end":8133152,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8133157,"byte_end":8133230,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8133235,"byte_end":8133313,"line_start":55,"line_end":55,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3054},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8133784,"byte_end":8133791,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8133705,"byte_end":8133772,"line_start":67,"line_end":67,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3055},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8134144,"byte_end":8134151,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8133925,"byte_end":8133974,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8133979,"byte_end":8133982,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8133987,"byte_end":8134059,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8134064,"byte_end":8134132,"line_start":76,"line_end":76,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3057},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8134323,"byte_end":8134327,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8134255,"byte_end":8134305,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3062},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8135522,"byte_end":8135526,"line_start":113,"line_end":113,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8135470,"byte_end":8135504,"line_start":112,"line_end":112,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3067},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8136204,"byte_end":8136211,"line_start":134,"line_end":134,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<'_, '_, P>(&'_ mut Self, &'_ [u8], P) -> /*impl Trait*/\nwhere P: AsRef<Path> + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8136132,"byte_end":8136186,"line_start":133,"line_end":133,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8136932,"byte_end":8136941,"line_start":159,"line_end":159,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8136880,"byte_end":8136914,"line_start":158,"line_end":158,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8137668,"byte_end":8137678,"line_start":180,"line_end":180,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8137597,"byte_end":8137656,"line_start":179,"line_end":179,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8137894,"byte_end":8137903,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8137764,"byte_end":8137810,"line_start":184,"line_end":184,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8137815,"byte_end":8137818,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8137823,"byte_end":8137882,"line_start":186,"line_end":186,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8138047,"byte_end":8138057,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8137988,"byte_end":8138035,"line_start":191,"line_end":191,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8138431,"byte_end":8138439,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8138150,"byte_end":8138216,"line_start":196,"line_end":196,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8138221,"byte_end":8138224,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8138229,"byte_end":8138297,"line_start":198,"line_end":198,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8138302,"byte_end":8138372,"line_start":199,"line_end":199,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8138377,"byte_end":8138419,"line_start":200,"line_end":200,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3268},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8139817,"byte_end":8139825,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::unix::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":3270}],"decl_id":null,"docs":" Stream of listeners\n","sig":null,"attributes":[{"value":"/ Stream of listeners","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8139716,"byte_end":8139739,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8139757,"byte_end":8139805,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8140334,"byte_end":8140345,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<UnixStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `UnixStream` by polling inner `UnixListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `UnixStream` by polling inner `UnixListener` to accept","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8140005,"byte_end":8140080,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ connection.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8140085,"byte_end":8140100,"line_start":20,"line_end":20,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8140105,"byte_end":8140108,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If `UnixListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8140113,"byte_end":8140183,"line_start":22,"line_end":22,"column_start":5,"column_end":75}},{"value":"/ current task will be notified by a waker.  Otherwise `Poll::Ready` with","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8140188,"byte_end":8140263,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ `Result` containing `UnixStream` will be returned.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8140268,"byte_end":8140322,"line_start":24,"line_end":24,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3274},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8142671,"byte_end":8142683,"line_start":49,"line_end":49,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":3275}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8143182,"byte_end":8143186,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixListener> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8142767,"byte_end":8142828,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8142833,"byte_end":8142836,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8142841,"byte_end":8142853,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8142858,"byte_end":8142861,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8142866,"byte_end":8142926,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8142931,"byte_end":8142934,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8142939,"byte_end":8143009,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8143014,"byte_end":8143087,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8143092,"byte_end":8143170,"line_start":63,"line_end":63,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3131},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8144030,"byte_end":8144038,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixListener` in the standard library and returns a\n nonblocking `UnixListener` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixListener` in the standard library and returns a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8143415,"byte_end":8143482,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixListener` from this crate.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8143487,"byte_end":8143534,"line_start":74,"line_end":74,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8143539,"byte_end":8143542,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The returned listener will be associated with the given event loop","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8143547,"byte_end":8143617,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8143622,"byte_end":8143676,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8143681,"byte_end":8143684,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8143689,"byte_end":8143701,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8143706,"byte_end":8143709,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8143714,"byte_end":8143774,"line_start":81,"line_end":81,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8143779,"byte_end":8143782,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8143787,"byte_end":8143857,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8143862,"byte_end":8143935,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8143940,"byte_end":8144018,"line_start":85,"line_end":85,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3132},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8144325,"byte_end":8144335,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8144259,"byte_end":8144313,"line_start":92,"line_end":92,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8144480,"byte_end":8144490,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8144421,"byte_end":8144468,"line_start":97,"line_end":97,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8144656,"byte_end":8144662,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8144583,"byte_end":8144638,"line_start":102,"line_end":102,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3140},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8147131,"byte_end":8147139,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8145767,"byte_end":8145841,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8145846,"byte_end":8145849,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Note that `UnixListener` also directly implements `Stream`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8145854,"byte_end":8145917,"line_start":139,"line_end":139,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8145922,"byte_end":8145925,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8145930,"byte_end":8146006,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146011,"byte_end":8146080,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146085,"byte_end":8146114,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146119,"byte_end":8146122,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146127,"byte_end":8146139,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146144,"byte_end":8146147,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146152,"byte_end":8146227,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146232,"byte_end":8146307,"line_start":148,"line_end":148,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146312,"byte_end":8146386,"line_start":149,"line_end":149,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146391,"byte_end":8146466,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146471,"byte_end":8146479,"line_start":151,"line_end":151,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146484,"byte_end":8146487,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146492,"byte_end":8146506,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146511,"byte_end":8146514,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146519,"byte_end":8146532,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixListener;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146537,"byte_end":8146570,"line_start":156,"line_end":156,"column_start":5,"column_end":38}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146575,"byte_end":8146608,"line_start":157,"line_end":157,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146613,"byte_end":8146616,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146621,"byte_end":8146639,"line_start":159,"line_end":159,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146644,"byte_end":8146665,"line_start":160,"line_end":160,"column_start":5,"column_end":26}},{"value":"/     let mut listener = UnixListener::bind(\"/path/to/the/socket\").unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146670,"byte_end":8146748,"line_start":161,"line_end":161,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146753,"byte_end":8146800,"line_start":162,"line_end":162,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146805,"byte_end":8146808,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146813,"byte_end":8146869,"line_start":164,"line_end":164,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146874,"byte_end":8146900,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146905,"byte_end":8146936,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146941,"byte_end":8146985,"line_start":167,"line_end":167,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8146990,"byte_end":8147007,"line_start":168,"line_end":168,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8147012,"byte_end":8147065,"line_start":169,"line_end":169,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8147070,"byte_end":8147083,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8147088,"byte_end":8147097,"line_start":171,"line_end":171,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8147102,"byte_end":8147107,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8147112,"byte_end":8147119,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3276},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8149250,"byte_end":8149258,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Read half of a `UnixStream`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8149189,"byte_end":8149221,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3283},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8149343,"byte_end":8149352,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Write half of a `UnixStream`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8149281,"byte_end":8149314,"line_start":24,"line_end":24,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3290},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8151318,"byte_end":8151328,"line_start":23,"line_end":23,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":3291}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3215},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8151650,"byte_end":8151657,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8151408,"byte_end":8151451,"line_start":29,"line_end":29,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8151456,"byte_end":8151459,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8151464,"byte_end":8151535,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8151540,"byte_end":8151616,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8151621,"byte_end":8151632,"line_start":33,"line_end":33,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3220},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152542,"byte_end":8152550,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixStream` in the standard library and returns a\n nonblocking `UnixStream` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixStream` in the standard library and returns a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8151933,"byte_end":8151998,"line_start":45,"line_end":45,"column_start":5,"column_end":70}},{"value":"/ nonblocking `UnixStream` from this crate.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152003,"byte_end":8152048,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152053,"byte_end":8152056,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be associated with the given event loop","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152061,"byte_end":8152129,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152134,"byte_end":8152188,"line_start":49,"line_end":49,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152193,"byte_end":8152196,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152201,"byte_end":8152213,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152218,"byte_end":8152221,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152226,"byte_end":8152286,"line_start":53,"line_end":53,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152291,"byte_end":8152294,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152299,"byte_end":8152369,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152374,"byte_end":8152447,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152452,"byte_end":8152530,"line_start":57,"line_end":57,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3221},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8153034,"byte_end":8153038,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152754,"byte_end":8152803,"line_start":65,"line_end":65,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152808,"byte_end":8152811,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152816,"byte_end":8152887,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152892,"byte_end":8152962,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8152967,"byte_end":8153022,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3223},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8153479,"byte_end":8153489,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8153399,"byte_end":8153467,"line_start":83,"line_end":83,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8153656,"byte_end":8153665,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8153575,"byte_end":8153644,"line_start":88,"line_end":88,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3225},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8153844,"byte_end":8153853,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"pub fn peer_cred(&Self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8153750,"byte_end":8153832,"line_start":93,"line_end":93,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3226},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8153989,"byte_end":8153999,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8153930,"byte_end":8153977,"line_start":98,"line_end":98,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3227},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8154373,"byte_end":8154381,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8154092,"byte_end":8154158,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8154163,"byte_end":8154166,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8154171,"byte_end":8154239,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8154244,"byte_end":8154314,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8154319,"byte_end":8154361,"line_start":107,"line_end":107,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3228},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8154615,"byte_end":8154620,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"pub fn split(&mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.\n","sig":null,"attributes":[{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8154475,"byte_end":8154552,"line_start":112,"line_end":112,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8154557,"byte_end":8154603,"line_start":113,"line_end":113,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":3292},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8158201,"byte_end":8158206,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred { uid, gid }","parent":null,"children":[{"krate":0,"index":3293},{"krate":0,"index":3294}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8158110,"byte_end":8158138,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3293},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8158254,"byte_end":8158257,"line_start":7,"line_end":7,"column_start":9,"column_end":12},"name":"uid","qualname":"::net::unix::ucred::UCred::uid","value":"u32","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" UID (user ID) of the process\n","sig":null,"attributes":[{"value":"/ UID (user ID) of the process","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8158213,"byte_end":8158245,"line_start":6,"line_end":6,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3294},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8158312,"byte_end":8158315,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"gid","qualname":"::net::unix::ucred::UCred::gid","value":"u32","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" GID (group ID) of the process\n","sig":null,"attributes":[{"value":"/ GID (group ID) of the process","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8158270,"byte_end":8158303,"line_start":8,"line_end":8,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":545},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93380,"byte_end":93386,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93317,"byte_end":93370,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":546},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93439,"byte_end":93444,"line_start":58,"line_end":58,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93401,"byte_end":93429,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":556},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":3410},{"krate":0,"index":3411},{"krate":0,"index":3412},{"krate":0,"index":3413},{"krate":0,"index":3414}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105035,"byte_end":105053,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105055,"byte_end":105102,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105103,"byte_end":105106,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105107,"byte_end":105183,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"! almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105184,"byte_end":105261,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"! library's prelude you'll have to do so manually:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105262,"byte_end":105314,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105315,"byte_end":105318,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105319,"byte_end":105326,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"! # #![allow(warnings)]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105327,"byte_end":105352,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105353,"byte_end":105379,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105380,"byte_end":105387,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105388,"byte_end":105391,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105392,"byte_end":105466,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":562},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":3425},{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":683},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":4085},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":4086},{"krate":0,"index":4090},{"krate":0,"index":4092},{"krate":0,"index":4099},{"krate":0,"index":722},{"krate":0,"index":723}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"! The Tokio runtime.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105678,"byte_end":105700,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105701,"byte_end":105704,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Unlike other Rust programs, asynchronous applications require","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105705,"byte_end":105770,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"! runtime support. In particular, the following runtime services are","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105771,"byte_end":105841,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"! necessary:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105842,"byte_end":105856,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105857,"byte_end":105860,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105861,"byte_end":105939,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"!   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105940,"byte_end":105997,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"! * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105998,"byte_end":106068,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"! * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106069,"byte_end":106141,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106142,"byte_end":106145,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106146,"byte_end":106226,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"! them to be started, shut down, and configured together. However, most","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106227,"byte_end":106300,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"! applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106301,"byte_end":106375,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"! use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106376,"byte_end":106454,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! the hood.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106455,"byte_end":106468,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106469,"byte_end":106472,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106473,"byte_end":106484,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106485,"byte_end":106488,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106489,"byte_end":106556,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106557,"byte_end":106560,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106561,"byte_end":106574,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106575,"byte_end":106607,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106608,"byte_end":106634,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106635,"byte_end":106638,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106639,"byte_end":106657,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106658,"byte_end":106721,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"!     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106722,"byte_end":106792,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106793,"byte_end":106796,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106797,"byte_end":106811,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"!         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106812,"byte_end":106871,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106872,"byte_end":106875,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106876,"byte_end":106913,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"!             let mut buf = [0; 1024];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106914,"byte_end":106954,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106955,"byte_end":106958,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"!             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106959,"byte_end":107039,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"!             loop {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107040,"byte_end":107062,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"!                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107063,"byte_end":107126,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"!                     // socket closed","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107127,"byte_end":107167,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"!                     Ok(n) if n == 0 => return,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107168,"byte_end":107218,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"!                     Ok(n) => n,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107219,"byte_end":107254,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"!                     Err(e) => {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107255,"byte_end":107290,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"!                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107291,"byte_end":107373,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"!                         return;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107374,"byte_end":107409,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107410,"byte_end":107435,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!                 };","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107436,"byte_end":107458,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107459,"byte_end":107462,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"!                 // Write the data back","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107463,"byte_end":107505,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"!                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107506,"byte_end":107578,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"!                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107579,"byte_end":107656,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"!                     return;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107657,"byte_end":107688,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"!                 }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107689,"byte_end":107710,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107711,"byte_end":107728,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107729,"byte_end":107744,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107745,"byte_end":107754,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107755,"byte_end":107760,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107761,"byte_end":107768,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107769,"byte_end":107772,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107773,"byte_end":107851,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"! the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107852,"byte_end":107930,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"! executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107931,"byte_end":107992,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107993,"byte_end":107996,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! A [`Runtime`] instance can also be used directly.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107997,"byte_end":108050,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108051,"byte_end":108054,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108055,"byte_end":108068,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108069,"byte_end":108101,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108102,"byte_end":108128,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"! use tokio::runtime::Runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108129,"byte_end":108161,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108162,"byte_end":108165,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108166,"byte_end":108223,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"!     // Create the runtime","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108224,"byte_end":108253,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"!     let mut rt = Runtime::new()?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108254,"byte_end":108291,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108292,"byte_end":108295,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"!     // Spawn the root task","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108296,"byte_end":108326,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"!     rt.block_on(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108327,"byte_end":108354,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"!         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108355,"byte_end":108429,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108430,"byte_end":108433,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"!         loop {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108434,"byte_end":108452,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"!             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108453,"byte_end":108516,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108517,"byte_end":108520,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"!             tokio::spawn(async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108521,"byte_end":108562,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"!                 let mut buf = [0; 1024];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108563,"byte_end":108607,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108608,"byte_end":108611,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"!                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108612,"byte_end":108696,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"!                 loop {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108697,"byte_end":108723,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"!                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108724,"byte_end":108791,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"!                         // socket closed","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108792,"byte_end":108836,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"!                         Ok(n) if n == 0 => return,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108837,"byte_end":108891,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"!                         Ok(n) => n,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108892,"byte_end":108931,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"!                         Err(e) => {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108932,"byte_end":108971,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"!                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108972,"byte_end":109058,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"!                             return;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109059,"byte_end":109098,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"!                         }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109099,"byte_end":109128,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"!                     };","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109129,"byte_end":109155,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109156,"byte_end":109159,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"!                     // Write the data back","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109160,"byte_end":109206,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"!                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109207,"byte_end":109283,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"!                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109284,"byte_end":109365,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"!                         return;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109366,"byte_end":109401,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109402,"byte_end":109427,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"!                 }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109428,"byte_end":109449,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"!             });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109450,"byte_end":109469,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"!         }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109470,"byte_end":109483,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"!     })","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109484,"byte_end":109494,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"! }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109495,"byte_end":109500,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109501,"byte_end":109508,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109509,"byte_end":109512,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! ## Runtime Configurations","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109513,"byte_end":109542,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109543,"byte_end":109546,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109547,"byte_end":109625,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"! applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109626,"byte_end":109702,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"! used to select which scheduler to use.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109703,"byte_end":109745,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109746,"byte_end":109749,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! #### Basic Scheduler","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109750,"byte_end":109774,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109775,"byte_end":109778,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109779,"byte_end":109858,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"! will be created and executed on the current thread. The basic scheduler","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109859,"byte_end":109934,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"! requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109935,"byte_end":110005,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"! [`Builder::basic_scheduler`] method:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110006,"byte_end":110046,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110047,"byte_end":110054,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"! use tokio::runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110055,"byte_end":110078,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110079,"byte_end":110082,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110083,"byte_end":110142,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"! let basic_rt = runtime::Builder::new()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110143,"byte_end":110185,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"!     .basic_scheduler()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110186,"byte_end":110212,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"!     .build()?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110213,"byte_end":110231,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"! # Ok(()) }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110232,"byte_end":110246,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110247,"byte_end":110254,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110255,"byte_end":110258,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"! If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110259,"byte_end":110324,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"! [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110325,"byte_end":110395,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110396,"byte_end":110399,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! #### Threaded Scheduler","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110400,"byte_end":110427,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110428,"byte_end":110431,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110432,"byte_end":110503,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"! work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110504,"byte_end":110582,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"! CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110583,"byte_end":110662,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"! for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110663,"byte_end":110747,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"! flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110748,"byte_end":110828,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110829,"byte_end":110836,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"! use tokio::runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110837,"byte_end":110860,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110861,"byte_end":110864,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110865,"byte_end":110924,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"! let threaded_rt = runtime::Builder::new()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110925,"byte_end":110970,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"!     .threaded_scheduler()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110971,"byte_end":111000,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"!     .build()?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111001,"byte_end":111019,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"! # Ok(()) }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111020,"byte_end":111034,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111035,"byte_end":111042,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111043,"byte_end":111046,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111047,"byte_end":111127,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"! threaded scheduler runtime by default.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111128,"byte_end":111170,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111171,"byte_end":111174,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111175,"byte_end":111252,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"! use-cases, such as when running only a single thread is required.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111253,"byte_end":111322,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111323,"byte_end":111326,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"! #### Resource drivers","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111327,"byte_end":111352,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111353,"byte_end":111356,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"! When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111357,"byte_end":111431,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"! default. In this case, attempting to use networking types or time types will","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111432,"byte_end":111512,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"! fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111513,"byte_end":111592,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"! This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111593,"byte_end":111672,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"! shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111673,"byte_end":111742,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111743,"byte_end":111746,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! ## Lifetime of spawned threads","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111747,"byte_end":111781,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111782,"byte_end":111785,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"! The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111786,"byte_end":111865,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"! threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111866,"byte_end":111934,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"! `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111935,"byte_end":111997,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111998,"byte_end":112001,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112002,"byte_end":112080,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"! idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112081,"byte_end":112160,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"! Any tasks that have not yet completed will be dropped.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112161,"byte_end":112219,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112220,"byte_end":112223,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"! [tasks]: crate::task","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112224,"byte_end":112248,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"! [`Runtime`]: Runtime","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112249,"byte_end":112273,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"! [`tokio::spawn`]: crate::spawn","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112274,"byte_end":112308,"line_start":176,"line_end":176,"column_start":1,"column_end":35}},{"value":"! [`tokio::main`]: ../attr.main.html","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112309,"byte_end":112347,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"! [runtime builder]: crate::runtime::Builder","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112348,"byte_end":112394,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"! [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112395,"byte_end":112445,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"! [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112446,"byte_end":112520,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"! [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112521,"byte_end":112601,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"! [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112602,"byte_end":112664,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"! [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112665,"byte_end":112731,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"! [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112732,"byte_end":112796,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3963},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8187714,"byte_end":8187723,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":3964}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3609},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8187899,"byte_end":8187908,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"pub fn cancelled() -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8187874,"byte_end":8187887,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188126,"byte_end":8188131,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"pub fn panic(Box<Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188101,"byte_end":8188114,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3613},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188461,"byte_end":8188473,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188381,"byte_end":8188449,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3614},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188979,"byte_end":8188987,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188600,"byte_end":8188662,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188667,"byte_end":8188670,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188675,"byte_end":8188689,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188694,"byte_end":8188697,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188702,"byte_end":8188709,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188714,"byte_end":8188733,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188738,"byte_end":8188741,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188746,"byte_end":8188764,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188769,"byte_end":8188790,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188795,"byte_end":8188833,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188838,"byte_end":8188865,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188870,"byte_end":8188900,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188905,"byte_end":8188908,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188913,"byte_end":8188945,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188950,"byte_end":8188955,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8188960,"byte_end":8188967,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3615},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189894,"byte_end":8189904,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189113,"byte_end":8189192,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189197,"byte_end":8189200,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189205,"byte_end":8189217,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189222,"byte_end":8189225,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189230,"byte_end":8189304,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189309,"byte_end":8189384,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189389,"byte_end":8189447,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189452,"byte_end":8189455,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189460,"byte_end":8189474,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189479,"byte_end":8189482,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189487,"byte_end":8189506,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189511,"byte_end":8189530,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189535,"byte_end":8189538,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189543,"byte_end":8189561,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189566,"byte_end":8189587,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189592,"byte_end":8189630,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189635,"byte_end":8189662,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189667,"byte_end":8189697,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189702,"byte_end":8189705,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189710,"byte_end":8189737,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189742,"byte_end":8189790,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189795,"byte_end":8189846,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189851,"byte_end":8189860,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189865,"byte_end":8189870,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8189875,"byte_end":8189882,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190669,"byte_end":8190683,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190045,"byte_end":8190114,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190119,"byte_end":8190191,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190196,"byte_end":8190209,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190214,"byte_end":8190217,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190222,"byte_end":8190236,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190241,"byte_end":8190244,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190249,"byte_end":8190268,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190273,"byte_end":8190292,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190297,"byte_end":8190300,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190305,"byte_end":8190323,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190328,"byte_end":8190349,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190354,"byte_end":8190392,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190397,"byte_end":8190424,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190429,"byte_end":8190459,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190464,"byte_end":8190467,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190472,"byte_end":8190522,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190527,"byte_end":8190575,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190580,"byte_end":8190621,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190626,"byte_end":8190635,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190640,"byte_end":8190645,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190650,"byte_end":8190657,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3965},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8207049,"byte_end":8207059,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":3967},{"krate":0,"index":3968}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":592},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128991,"byte_end":128998,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128163,"byte_end":128221,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128222,"byte_end":128225,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128226,"byte_end":128298,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128299,"byte_end":128347,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128348,"byte_end":128351,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128352,"byte_end":128417,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128418,"byte_end":128421,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128422,"byte_end":128499,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128500,"byte_end":128513,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128514,"byte_end":128517,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128518,"byte_end":128551,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new`]: method@Self::new","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128552,"byte_end":128590,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128591,"byte_end":128594,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128595,"byte_end":128609,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128610,"byte_end":128613,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128614,"byte_end":128621,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128622,"byte_end":128654,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128655,"byte_end":128658,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128659,"byte_end":128674,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128675,"byte_end":128699,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128700,"byte_end":128736,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128737,"byte_end":128770,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128771,"byte_end":128799,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128800,"byte_end":128842,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128843,"byte_end":128890,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128891,"byte_end":128911,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128912,"byte_end":128934,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128935,"byte_end":128938,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128939,"byte_end":128965,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128966,"byte_end":128971,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128972,"byte_end":128979,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130153,"byte_end":130156,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":129979,"byte_end":130051,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130056,"byte_end":130067,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130072,"byte_end":130075,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130080,"byte_end":130141,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131360,"byte_end":131370,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130846,"byte_end":130884,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130889,"byte_end":130892,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130897,"byte_end":130968,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130973,"byte_end":131049,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131054,"byte_end":131108,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131113,"byte_end":131116,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131121,"byte_end":131135,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131140,"byte_end":131143,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131148,"byte_end":131155,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131160,"byte_end":131183,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131188,"byte_end":131191,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131196,"byte_end":131232,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131237,"byte_end":131266,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/     .enable_all()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131271,"byte_end":131292,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131297,"byte_end":131313,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131318,"byte_end":131336,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131341,"byte_end":131348,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131925,"byte_end":131936,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"pub fn num_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131547,"byte_end":131620,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ Sets the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131625,"byte_end":131703,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131708,"byte_end":131711,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131716,"byte_end":131791,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131796,"byte_end":131831,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131836,"byte_end":131839,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131844,"byte_end":131913,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132645,"byte_end":132657,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"pub fn core_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132038,"byte_end":132113,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132118,"byte_end":132121,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132126,"byte_end":132203,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132208,"byte_end":132243,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132248,"byte_end":132251,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132256,"byte_end":132325,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132330,"byte_end":132333,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132338,"byte_end":132390,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132395,"byte_end":132398,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132403,"byte_end":132417,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132422,"byte_end":132425,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132430,"byte_end":132437,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132442,"byte_end":132465,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132470,"byte_end":132473,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132478,"byte_end":132514,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132519,"byte_end":132548,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     .core_threads(4)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132553,"byte_end":132577,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132582,"byte_end":132598,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132603,"byte_end":132621,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132626,"byte_end":132633,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133536,"byte_end":133547,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"pub fn max_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132818,"byte_end":132874,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132879,"byte_end":132882,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132887,"byte_end":132964,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132969,"byte_end":133051,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133056,"byte_end":133126,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133131,"byte_end":133134,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133139,"byte_end":133219,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133224,"byte_end":133227,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133232,"byte_end":133261,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133266,"byte_end":133269,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133274,"byte_end":133359,"line_start":187,"line_end":187,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133364,"byte_end":133367,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133372,"byte_end":133461,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133466,"byte_end":133524,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134071,"byte_end":134082,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133701,"byte_end":133765,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133770,"byte_end":133773,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133778,"byte_end":133825,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133830,"byte_end":133833,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133838,"byte_end":133852,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133857,"byte_end":133860,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133865,"byte_end":133872,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133877,"byte_end":133902,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133907,"byte_end":133910,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133915,"byte_end":133936,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133941,"byte_end":133977,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133982,"byte_end":134013,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134018,"byte_end":134035,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134040,"byte_end":134047,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134052,"byte_end":134059,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134806,"byte_end":134823,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134196,"byte_end":134250,"line_start":217,"line_end":217,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134255,"byte_end":134258,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134263,"byte_end":134335,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134340,"byte_end":134373,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134378,"byte_end":134381,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134386,"byte_end":134454,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134459,"byte_end":134520,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134525,"byte_end":134528,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134533,"byte_end":134547,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134552,"byte_end":134555,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134560,"byte_end":134567,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134572,"byte_end":134597,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134602,"byte_end":134605,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134610,"byte_end":134631,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134636,"byte_end":134672,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134677,"byte_end":134706,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134711,"byte_end":134748,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134753,"byte_end":134770,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134775,"byte_end":134782,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134787,"byte_end":134794,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135464,"byte_end":135479,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134930,"byte_end":135005,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135010,"byte_end":135025,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135030,"byte_end":135033,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135038,"byte_end":135100,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135105,"byte_end":135108,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135113,"byte_end":135127,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135132,"byte_end":135135,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135140,"byte_end":135147,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135152,"byte_end":135177,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135182,"byte_end":135185,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135190,"byte_end":135211,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135216,"byte_end":135257,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135262,"byte_end":135291,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135296,"byte_end":135325,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135330,"byte_end":135369,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135374,"byte_end":135384,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135389,"byte_end":135406,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135411,"byte_end":135418,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135423,"byte_end":135430,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135435,"byte_end":135452,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136130,"byte_end":136144,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135640,"byte_end":135691,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135696,"byte_end":135699,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135704,"byte_end":135766,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135771,"byte_end":135774,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135779,"byte_end":135793,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135798,"byte_end":135801,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135806,"byte_end":135813,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135818,"byte_end":135843,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135848,"byte_end":135851,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135856,"byte_end":135877,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135882,"byte_end":135923,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135928,"byte_end":135957,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135962,"byte_end":135990,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135995,"byte_end":136035,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136040,"byte_end":136050,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136055,"byte_end":136072,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136077,"byte_end":136084,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136089,"byte_end":136096,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136101,"byte_end":136118,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136690,"byte_end":136695,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136305,"byte_end":136342,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136347,"byte_end":136350,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136355,"byte_end":136418,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136423,"byte_end":136426,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136431,"byte_end":136445,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136450,"byte_end":136453,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136458,"byte_end":136465,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136470,"byte_end":136502,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136507,"byte_end":136510,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136515,"byte_end":136564,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136569,"byte_end":136572,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136577,"byte_end":136600,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136605,"byte_end":136654,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136659,"byte_end":136666,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136671,"byte_end":136678,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4001},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138320,"byte_end":138329,"line_start":367,"line_end":367,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4003},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138840,"byte_end":138851,"line_start":390,"line_end":390,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4005},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":139464,"byte_end":139479,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"pub fn basic_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4043},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150461,"byte_end":150467,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":4044},{"krate":0,"index":4045},{"krate":0,"index":4046},{"krate":0,"index":4047},{"krate":0,"index":4048}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150192,"byte_end":150218,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150219,"byte_end":150222,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150223,"byte_end":150311,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150312,"byte_end":150362,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150363,"byte_end":150366,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150367,"byte_end":150425,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152004,"byte_end":152009,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150831,"byte_end":150906,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150911,"byte_end":150989,"line_start":40,"line_end":40,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150994,"byte_end":151062,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151067,"byte_end":151070,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Runtime::enter`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151075,"byte_end":151133,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151138,"byte_end":151141,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151146,"byte_end":151186,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151191,"byte_end":151238,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151243,"byte_end":151300,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151305,"byte_end":151342,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151347,"byte_end":151350,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151355,"byte_end":151368,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151373,"byte_end":151376,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151381,"byte_end":151388,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151393,"byte_end":151425,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151430,"byte_end":151433,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151438,"byte_end":151480,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `handle.enter` below, this would panic.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151485,"byte_end":151551,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151556,"byte_end":151589,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151594,"byte_end":151626,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151631,"byte_end":151642,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151647,"byte_end":151652,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151657,"byte_end":151660,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151665,"byte_end":151680,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151685,"byte_end":151726,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/     let handle = rt.handle().clone();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151731,"byte_end":151772,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151777,"byte_end":151780,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151785,"byte_end":151828,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151833,"byte_end":151836,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151841,"byte_end":151916,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/     handle.enter(|| function_that_spawns(s));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151921,"byte_end":151970,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151975,"byte_end":151980,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151985,"byte_end":151992,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153479,"byte_end":153486,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152127,"byte_end":152191,"line_start":79,"line_end":79,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152196,"byte_end":152199,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152204,"byte_end":152215,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152220,"byte_end":152223,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152228,"byte_end":152322,"line_start":83,"line_end":83,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152327,"byte_end":152419,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152424,"byte_end":152500,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152505,"byte_end":152508,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152513,"byte_end":152527,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152532,"byte_end":152535,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152540,"byte_end":152622,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152627,"byte_end":152673,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152678,"byte_end":152681,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152686,"byte_end":152693,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152698,"byte_end":152720,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152725,"byte_end":152759,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152764,"byte_end":152780,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152785,"byte_end":152824,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152829,"byte_end":152851,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152856,"byte_end":152887,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152892,"byte_end":152895,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152900,"byte_end":152941,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152946,"byte_end":152981,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152986,"byte_end":153010,"line_start":102,"line_end":102,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153015,"byte_end":153071,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153076,"byte_end":153083,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153088,"byte_end":153091,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153096,"byte_end":153114,"line_start":106,"line_end":106,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153119,"byte_end":153146,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153151,"byte_end":153236,"line_start":108,"line_end":108,"column_start":5,"column_end":90}},{"value":"/     handle.block_on(async { /* ... */ })","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153241,"byte_end":153285,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/     // This next line would cause a panic","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153290,"byte_end":153335,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153340,"byte_end":153383,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153388,"byte_end":153395,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153400,"byte_end":153429,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153434,"byte_end":153443,"line_start":114,"line_end":114,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153448,"byte_end":153455,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153460,"byte_end":153467,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153784,"byte_end":153795,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153591,"byte_end":153651,"line_start":121,"line_end":121,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153656,"byte_end":153659,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153664,"byte_end":153715,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153720,"byte_end":153723,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153728,"byte_end":153772,"line_start":125,"line_end":125,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4054},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":155320,"byte_end":155325,"line_start":170,"line_end":170,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4056},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":159444,"byte_end":159452,"line_start":274,"line_end":274,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime from a synchronous\n context.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":660},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163244,"byte_end":163259,"line_start":357,"line_end":357,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163164,"byte_end":163232,"line_start":356,"line_end":356,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4086},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114701,"byte_end":114708,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":4087},{"krate":0,"index":4088},{"krate":0,"index":4089}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113684,"byte_end":113706,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113707,"byte_end":113710,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O driver, task scheduler, [timer], and blocking","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113711,"byte_end":113788,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113789,"byte_end":113840,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113841,"byte_end":113844,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113845,"byte_end":113925,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113926,"byte_end":114011,"line_start":252,"line_end":252,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114012,"byte_end":114015,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114016,"byte_end":114075,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114076,"byte_end":114079,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114080,"byte_end":114094,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114095,"byte_end":114098,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114099,"byte_end":114178,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114179,"byte_end":114238,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114239,"byte_end":114242,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114243,"byte_end":114281,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114282,"byte_end":114333,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114334,"byte_end":114357,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114358,"byte_end":114361,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114362,"byte_end":114434,"line_start":265,"line_end":265,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114435,"byte_end":114508,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114509,"byte_end":114532,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114533,"byte_end":114536,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [timer]: crate::time","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114537,"byte_end":114561,"line_start":269,"line_end":269,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114562,"byte_end":114583,"line_start":270,"line_end":270,"column_start":1,"column_end":22}},{"value":"/ [`new`]: method@Self::new","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114584,"byte_end":114613,"line_start":271,"line_end":271,"column_start":1,"column_end":30}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114614,"byte_end":114645,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ [`tokio::run`]: fn@run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114646,"byte_end":114672,"line_start":273,"line_end":273,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116929,"byte_end":116932,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115522,"byte_end":115590,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115595,"byte_end":115598,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115603,"byte_end":115669,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115674,"byte_end":115747,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115752,"byte_end":115823,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115828,"byte_end":115903,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115908,"byte_end":115946,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115951,"byte_end":115954,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115959,"byte_end":116019,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116024,"byte_end":116098,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116103,"byte_end":116106,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116111,"byte_end":116187,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116192,"byte_end":116268,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116273,"byte_end":116339,"line_start":319,"line_end":319,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116344,"byte_end":116347,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116352,"byte_end":116411,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116416,"byte_end":116419,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116424,"byte_end":116438,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116443,"byte_end":116446,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116451,"byte_end":116514,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116519,"byte_end":116522,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116527,"byte_end":116534,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116539,"byte_end":116571,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116576,"byte_end":116579,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116584,"byte_end":116611,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116616,"byte_end":116634,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116639,"byte_end":116642,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116647,"byte_end":116672,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116677,"byte_end":116684,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116689,"byte_end":116692,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116697,"byte_end":116718,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/ [main]: ../attr.main.html","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116723,"byte_end":116752,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116757,"byte_end":116812,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116817,"byte_end":116866,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116871,"byte_end":116917,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118522,"byte_end":118527,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117342,"byte_end":117384,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117389,"byte_end":117392,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117397,"byte_end":117468,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117473,"byte_end":117548,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117553,"byte_end":117576,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117581,"byte_end":117584,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117589,"byte_end":117648,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117653,"byte_end":117656,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117661,"byte_end":117682,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117687,"byte_end":117690,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117695,"byte_end":117709,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117714,"byte_end":117717,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117722,"byte_end":117729,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117734,"byte_end":117766,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117771,"byte_end":117774,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117779,"byte_end":117795,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117800,"byte_end":117825,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117830,"byte_end":117867,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117872,"byte_end":117875,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117880,"byte_end":117918,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117923,"byte_end":117943,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117948,"byte_end":117999,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118004,"byte_end":118011,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118016,"byte_end":118023,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118028,"byte_end":118035,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118040,"byte_end":118043,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118048,"byte_end":118060,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118065,"byte_end":118068,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function will not panic unless task execution is disabled on the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118073,"byte_end":118146,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ executor. This can only happen if the runtime was built using","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118151,"byte_end":118216,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ [`Builder`] without picking either [`basic_scheduler`] or","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118221,"byte_end":118282,"line_start":384,"line_end":384,"column_start":5,"column_end":66}},{"value":"/ [`threaded_scheduler`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118287,"byte_end":118314,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118319,"byte_end":118322,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118327,"byte_end":118358,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ [`threaded_scheduler`]: fn@Builder::threaded_scheduler","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118363,"byte_end":118421,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ [`basic_scheduler`]: fn@Builder::basic_scheduler","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118426,"byte_end":118478,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118483,"byte_end":118510,"line_start":390,"line_end":390,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120148,"byte_end":120156,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&mut Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118929,"byte_end":119003,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119008,"byte_end":119024,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119029,"byte_end":119032,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119037,"byte_end":119104,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119109,"byte_end":119182,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119187,"byte_end":119252,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119257,"byte_end":119260,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `&mut` is required as calling `block_on` **may** result in advancing the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119265,"byte_end":119341,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ state of the runtime. The details depend on how the runtime is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119346,"byte_end":119412,"line_start":412,"line_end":412,"column_start":5,"column_end":71}},{"value":"/ configured. [`runtime::Handle::block_on`][handle] provides a version","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119417,"byte_end":119489,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ that takes `&self`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119494,"byte_end":119517,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119522,"byte_end":119525,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method may not be called from an asynchronous context.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119530,"byte_end":119593,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119598,"byte_end":119601,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119606,"byte_end":119618,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119623,"byte_end":119626,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, or if called within an","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119631,"byte_end":119709,"line_start":420,"line_end":420,"column_start":5,"column_end":83}},{"value":"/ asynchronous execution context.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119714,"byte_end":119749,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119754,"byte_end":119757,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119762,"byte_end":119776,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119781,"byte_end":119784,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119789,"byte_end":119802,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119807,"byte_end":119839,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119844,"byte_end":119847,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119852,"byte_end":119877,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119882,"byte_end":119923,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119928,"byte_end":119931,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119936,"byte_end":120007,"line_start":431,"line_end":431,"column_start":5,"column_end":76}},{"value":"/ rt.block_on(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120012,"byte_end":120035,"line_start":432,"line_end":432,"column_start":5,"column_end":28}},{"value":"/     println!(\"hello\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120040,"byte_end":120066,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120071,"byte_end":120078,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120083,"byte_end":120090,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120095,"byte_end":120098,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [handle]: fn@Handle::block_on","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120103,"byte_end":120136,"line_start":437,"line_end":437,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121678,"byte_end":121683,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120562,"byte_end":120637,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120642,"byte_end":120720,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120725,"byte_end":120793,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120798,"byte_end":120801,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Handle::enter`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120806,"byte_end":120863,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120868,"byte_end":120871,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120876,"byte_end":120916,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120921,"byte_end":120968,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ [`Handle::enter`]: fn@crate::runtime::Handle::enter","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120973,"byte_end":121028,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121033,"byte_end":121070,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121075,"byte_end":121078,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121083,"byte_end":121096,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121101,"byte_end":121104,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121109,"byte_end":121116,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121121,"byte_end":121153,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121158,"byte_end":121161,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121166,"byte_end":121208,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `rt.enter` below, this would panic.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121213,"byte_end":121275,"line_start":467,"line_end":467,"column_start":5,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121280,"byte_end":121313,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121318,"byte_end":121350,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121355,"byte_end":121366,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121371,"byte_end":121376,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121381,"byte_end":121384,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121389,"byte_end":121404,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121409,"byte_end":121450,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121455,"byte_end":121458,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121463,"byte_end":121506,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121511,"byte_end":121514,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121519,"byte_end":121594,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/     rt.enter(|| function_that_spawns(s));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121599,"byte_end":121644,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121649,"byte_end":121654,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121659,"byte_end":121666,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122270,"byte_end":122276,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121790,"byte_end":121835,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121840,"byte_end":121843,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime, and can","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121848,"byte_end":121932,"line_start":491,"line_end":491,"column_start":5,"column_end":89}},{"value":"/ be cloned to allow moving the `Handle` to other threads.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121937,"byte_end":121997,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122002,"byte_end":122005,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122010,"byte_end":122024,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122029,"byte_end":122032,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122037,"byte_end":122044,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122049,"byte_end":122081,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122086,"byte_end":122089,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122094,"byte_end":122121,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122126,"byte_end":122144,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122149,"byte_end":122152,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122157,"byte_end":122186,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122191,"byte_end":122194,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122199,"byte_end":122246,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122251,"byte_end":122258,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123684,"byte_end":123700,"line_start":545,"line_end":545,"column_start":12,"column_end":28},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, waiting for at most `duration` for all spawned","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122329,"byte_end":122401,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ task to shutdown.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122406,"byte_end":122427,"line_start":511,"line_end":511,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122432,"byte_end":122435,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Usually, dropping a `Runtime` handle is sufficient as tasks are able to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122440,"byte_end":122515,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ shutdown in a timely fashion. However, dropping a `Runtime` will wait","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122520,"byte_end":122593,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ indefinitely for all tasks to terminate, and there are cases where a long","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122598,"byte_end":122675,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ blocking task has been spawned, which can block dropping `Runtime`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122680,"byte_end":122751,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122756,"byte_end":122759,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ In this case, calling `shutdown_timeout` with an explicit wait timeout","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122764,"byte_end":122838,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ can work. The `shutdown_timeout` will signal all tasks to shutdown and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122843,"byte_end":122917,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ will wait for at most `duration` for all spawned tasks to terminate. If","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122922,"byte_end":122997,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ `timeout` elapses before all tasks are dropped, the function returns and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123002,"byte_end":123078,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ outstanding tasks are potentially leaked.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123083,"byte_end":123128,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123133,"byte_end":123136,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123141,"byte_end":123155,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123160,"byte_end":123163,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123168,"byte_end":123175,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123180,"byte_end":123212,"line_start":527,"line_end":527,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123217,"byte_end":123237,"line_start":528,"line_end":528,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123242,"byte_end":123245,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123250,"byte_end":123270,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123275,"byte_end":123303,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123308,"byte_end":123311,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123316,"byte_end":123331,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123336,"byte_end":123385,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123390,"byte_end":123393,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123398,"byte_end":123434,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/        task::spawn_blocking(move || {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123439,"byte_end":123480,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/            thread::sleep(Duration::from_secs(10_000));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123485,"byte_end":123543,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/        });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123548,"byte_end":123562,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/    });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123567,"byte_end":123577,"line_start":540,"line_end":540,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123582,"byte_end":123585,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/    runtime.shutdown_timeout(Duration::from_millis(100));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123590,"byte_end":123650,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123655,"byte_end":123660,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123665,"byte_end":123672,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124980,"byte_end":124999,"line_start":578,"line_end":578,"column_start":12,"column_end":31},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, without waiting for any spawned tasks to shutdown.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123862,"byte_end":123938,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123943,"byte_end":123946,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This can be useful if you want to drop a runtime from within another runtime.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123951,"byte_end":124032,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ Normally, dropping a runtime will block indefinitely for spawned blocking tasks","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124037,"byte_end":124120,"line_start":555,"line_end":555,"column_start":5,"column_end":88}},{"value":"/ to complete, which would normally not be permitted within an asynchronous context.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124125,"byte_end":124211,"line_start":556,"line_end":556,"column_start":5,"column_end":91}},{"value":"/ By calling `shutdown_background()`, you can drop the runtime from such a context.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124216,"byte_end":124301,"line_start":557,"line_end":557,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124306,"byte_end":124309,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ Note however, that because we do not wait for any blocking tasks to complete, this","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124314,"byte_end":124400,"line_start":559,"line_end":559,"column_start":5,"column_end":91}},{"value":"/ may result in a resource leak (in that any blocking tasks are still running until they","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124405,"byte_end":124495,"line_start":560,"line_end":560,"column_start":5,"column_end":95}},{"value":"/ return.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124500,"byte_end":124511,"line_start":561,"line_end":561,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124516,"byte_end":124519,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `shutdown_timeout(Duration::of_nanos(0))`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124524,"byte_end":124609,"line_start":563,"line_end":563,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124614,"byte_end":124617,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124622,"byte_end":124629,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124634,"byte_end":124666,"line_start":566,"line_end":566,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124671,"byte_end":124674,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124679,"byte_end":124694,"line_start":568,"line_end":568,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124699,"byte_end":124748,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124753,"byte_end":124756,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124761,"byte_end":124797,"line_start":571,"line_end":571,"column_start":5,"column_end":41}},{"value":"/        let inner_runtime = Runtime::new().unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124802,"byte_end":124857,"line_start":572,"line_end":572,"column_start":5,"column_end":60}},{"value":"/        // ...","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124862,"byte_end":124879,"line_start":573,"line_end":573,"column_start":5,"column_end":22}},{"value":"/        inner_runtime.shutdown_background();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124884,"byte_end":124931,"line_start":574,"line_end":574,"column_start":5,"column_end":52}},{"value":"/    });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124936,"byte_end":124946,"line_start":575,"line_end":575,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124951,"byte_end":124956,"line_start":576,"line_end":576,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124961,"byte_end":124968,"line_start":577,"line_end":577,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4129},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","parent":null,"children":[{"krate":0,"index":4130},{"krate":0,"index":4137},{"krate":0,"index":4138},{"krate":0,"index":4186},{"krate":0,"index":4190}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":20815,"byte_end":20841,"line_start":210,"line_end":210,"column_start":13,"column_end":39}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":20916,"byte_end":20933,"line_start":212,"line_end":212,"column_start":13,"column_end":30}},{"value":"! Asynchronous signal handling for Tokio","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8228619,"byte_end":8228661,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8228662,"byte_end":8228665,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8228666,"byte_end":8228743,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8228744,"byte_end":8228822,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8228823,"byte_end":8228903,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"! to see if it's suitable.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8228904,"byte_end":8228932,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8228933,"byte_end":8228936,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! The are some fundamental limitations of this crate documented on the OS","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8228937,"byte_end":8229012,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"! specific structures, as well.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229013,"byte_end":8229046,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229047,"byte_end":8229050,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229051,"byte_end":8229065,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229066,"byte_end":8229069,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Print on \"ctrl-c\" notification.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229070,"byte_end":8229105,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229106,"byte_end":8229109,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229110,"byte_end":8229128,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"! use tokio::signal;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229129,"byte_end":8229151,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229152,"byte_end":8229155,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229156,"byte_end":8229174,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229175,"byte_end":8229238,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"!     signal::ctrl_c().await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229239,"byte_end":8229271,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"!     println!(\"ctrl-c received!\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229272,"byte_end":8229309,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"!     Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229310,"byte_end":8229324,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229325,"byte_end":8229330,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229331,"byte_end":8229338,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229339,"byte_end":8229342,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Wait for SIGHUP on Unix","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229343,"byte_end":8229370,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229371,"byte_end":8229374,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229375,"byte_end":8229393,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"! # #[cfg(unix)] {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229394,"byte_end":8229414,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"! use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229415,"byte_end":8229465,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229466,"byte_end":8229469,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229470,"byte_end":8229488,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229489,"byte_end":8229552,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"!     // An infinite stream of hangup signals.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229553,"byte_end":8229601,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"!     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229602,"byte_end":8229657,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229658,"byte_end":8229661,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"!     // Print whenever a HUP signal is received","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229662,"byte_end":8229712,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"!     loop {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229713,"byte_end":8229727,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"!         stream.recv().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229728,"byte_end":8229760,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"!         println!(\"got signal HUP\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229761,"byte_end":8229800,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"!     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229801,"byte_end":8229810,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229811,"byte_end":8229816,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229817,"byte_end":8229824,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8229825,"byte_end":8229832,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4134},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231908,"byte_end":8231914,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"pub async fn ctrl_c() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230206,"byte_end":8230272,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230273,"byte_end":8230276,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230277,"byte_end":8230354,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230355,"byte_end":8230433,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230434,"byte_end":8230483,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230484,"byte_end":8230487,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener is registered. The future","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230488,"byte_end":8230564,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ will complete on the first received `ctrl-c` **after** the initial call to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230565,"byte_end":8230643,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ either `Future::poll` or `.await`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230644,"byte_end":8230682,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230683,"byte_end":8230686,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230687,"byte_end":8230700,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230701,"byte_end":8230704,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230705,"byte_end":8230787,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230788,"byte_end":8230868,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230869,"byte_end":8230950,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230951,"byte_end":8230976,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230977,"byte_end":8230980,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8230981,"byte_end":8231054,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231055,"byte_end":8231127,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231128,"byte_end":8231206,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231207,"byte_end":8231284,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231285,"byte_end":8231361,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231362,"byte_end":8231441,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231442,"byte_end":8231466,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231467,"byte_end":8231470,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231471,"byte_end":8231549,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231550,"byte_end":8231610,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231611,"byte_end":8231614,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231615,"byte_end":8231629,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231630,"byte_end":8231633,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231634,"byte_end":8231652,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231653,"byte_end":8231675,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231676,"byte_end":8231679,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231680,"byte_end":8231698,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231699,"byte_end":8231720,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231721,"byte_end":8231760,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231761,"byte_end":8231764,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231765,"byte_end":8231833,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231834,"byte_end":8231837,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231838,"byte_end":8231880,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231881,"byte_end":8231886,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8231887,"byte_end":8231894,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4190},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::signal::unix","value":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","parent":null,"children":[{"krate":0,"index":4191},{"krate":0,"index":4192},{"krate":0,"index":4193},{"krate":0,"index":4194},{"krate":0,"index":4195},{"krate":0,"index":4196},{"krate":0,"index":4197},{"krate":0,"index":4198},{"krate":0,"index":4199},{"krate":0,"index":4200},{"krate":0,"index":4201},{"krate":0,"index":4202},{"krate":0,"index":4203},{"krate":0,"index":4204},{"krate":0,"index":4205},{"krate":0,"index":4206},{"krate":0,"index":4207},{"krate":0,"index":4208},{"krate":0,"index":4209},{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4215},{"krate":0,"index":4216},{"krate":0,"index":4217},{"krate":0,"index":4218},{"krate":0,"index":4219},{"krate":0,"index":4220},{"krate":0,"index":4221},{"krate":0,"index":4224},{"krate":0,"index":4286},{"krate":0,"index":4289},{"krate":0,"index":4231},{"krate":0,"index":4291},{"krate":0,"index":4297},{"krate":0,"index":4295},{"krate":0,"index":4294},{"krate":0,"index":4233},{"krate":0,"index":4247},{"krate":0,"index":4251},{"krate":0,"index":4253},{"krate":0,"index":4254},{"krate":0,"index":4299},{"krate":0,"index":4301},{"krate":0,"index":4258},{"krate":0,"index":4260},{"krate":0,"index":4303},{"krate":0,"index":4306},{"krate":0,"index":4264},{"krate":0,"index":4265},{"krate":0,"index":4308},{"krate":0,"index":4272}],"decl_id":null,"docs":" Unix-specific types for signal handling.","sig":null,"attributes":[{"value":"! Unix-specific types for signal handling.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8241352,"byte_end":8241396,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8241397,"byte_end":8241400,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only defined on Unix platforms and contains the primary","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8241401,"byte_end":8241475,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! `Signal` type for receiving notifications of signals.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8241476,"byte_end":8241533,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"cfg(unix)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8241535,"byte_end":8241548,"line_start":6,"line_end":6,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4291},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8242863,"byte_end":8242873,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"SignalKind","qualname":"::signal::unix::SignalKind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the specific kind of signal to listen for.\n","sig":null,"attributes":[{"value":"/ Represents the specific kind of signal to listen for.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8242764,"byte_end":8242821,"line_start":59,"line_end":59,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4234},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243272,"byte_end":8243280,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<SignalKind>::from_raw","value":"pub fn from_raw(c_int) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows for listening to any valid OS signal.","sig":null,"attributes":[{"value":"/ Allows for listening to any valid OS signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8242905,"byte_end":8242953,"line_start":64,"line_end":64,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8242958,"byte_end":8242961,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used for listening for platform-specific","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8242966,"byte_end":8243035,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ signals.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243040,"byte_end":8243052,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243057,"byte_end":8243075,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # use tokio::signal::unix::SignalKind;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243080,"byte_end":8243122,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/ # let signum = -1;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243127,"byte_end":8243149,"line_start":70,"line_end":70,"column_start":5,"column_end":27}},{"value":"/ // let signum = libc::OS_SPECIFIC_SIGNAL;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243154,"byte_end":8243199,"line_start":71,"line_end":71,"column_start":5,"column_end":50}},{"value":"/ let kind = SignalKind::from_raw(signum);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243204,"byte_end":8243248,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243253,"byte_end":8243260,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4235},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243534,"byte_end":8243539,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"alarm","qualname":"<SignalKind>::alarm","value":"pub fn alarm() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGALRM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGALRM signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243338,"byte_end":8243372,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243377,"byte_end":8243380,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when a real-time timer has expired.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243385,"byte_end":8243460,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243465,"byte_end":8243522,"line_start":81,"line_end":81,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4236},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243781,"byte_end":8243786,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"child","qualname":"<SignalKind>::child","value":"pub fn child() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGCHLD signal.","sig":null,"attributes":[{"value":"/ Represents the SIGCHLD signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243591,"byte_end":8243625,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243630,"byte_end":8243633,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the status of a child process","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243638,"byte_end":8243712,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ has changed. By default, this signal is ignored.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243717,"byte_end":8243769,"line_start":89,"line_end":89,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4237},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8244032,"byte_end":8244038,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"hangup","qualname":"<SignalKind>::hangup","value":"pub fn hangup() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGHUP signal.","sig":null,"attributes":[{"value":"/ Represents the SIGHUP signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243838,"byte_end":8243871,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243876,"byte_end":8243879,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal is disconnected.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243884,"byte_end":8243958,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8243963,"byte_end":8244020,"line_start":97,"line_end":97,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4238},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8244452,"byte_end":8244456,"line_start":113,"line_end":113,"column_start":12,"column_end":16},"name":"info","qualname":"<SignalKind>::info","value":"pub fn info() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINFO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINFO signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8244089,"byte_end":8244123,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8244128,"byte_end":8244131,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to request a status update from the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8244136,"byte_end":8244211,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ process. By default, this signal is ignored.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8244216,"byte_end":8244264,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"macos\",\n          target_os = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8244269,"byte_end":8244440,"line_start":106,"line_end":112,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4239},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8244691,"byte_end":8244700,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<SignalKind>::interrupt","value":"pub fn interrupt() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINT signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8244508,"byte_end":8244541,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8244546,"byte_end":8244549,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to interrupt a program.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8244554,"byte_end":8244617,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8244622,"byte_end":8244679,"line_start":120,"line_end":120,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4240},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8244949,"byte_end":8244951,"line_start":129,"line_end":129,"column_start":12,"column_end":14},"name":"io","qualname":"<SignalKind>::io","value":"pub fn io() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGIO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGIO signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8244751,"byte_end":8244783,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8244788,"byte_end":8244791,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when I/O operations are possible","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8244796,"byte_end":8244868,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ on some file descriptor. By default, this signal is ignored.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8244873,"byte_end":8244937,"line_start":128,"line_end":128,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4241},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245235,"byte_end":8245239,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"pipe","qualname":"<SignalKind>::pipe","value":"pub fn pipe() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGPIPE signal.","sig":null,"attributes":[{"value":"/ Represents the SIGPIPE signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245001,"byte_end":8245035,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245040,"byte_end":8245043,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the process attempts to write","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245048,"byte_end":8245122,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ to a pipe which has no reader. By default, the process is terminated by","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245127,"byte_end":8245202,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ this signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245207,"byte_end":8245223,"line_start":137,"line_end":137,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4242},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245542,"byte_end":8245546,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"quit","qualname":"<SignalKind>::quit","value":"pub fn quit() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGQUIT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGQUIT signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245291,"byte_end":8245325,"line_start":142,"line_end":142,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245330,"byte_end":8245333,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245338,"byte_end":8245404,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/ process, after which the OS will dump the process core.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245409,"byte_end":8245468,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245473,"byte_end":8245530,"line_start":146,"line_end":146,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4243},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245794,"byte_end":8245803,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"terminate","qualname":"<SignalKind>::terminate","value":"pub fn terminate() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGTERM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGTERM signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245598,"byte_end":8245632,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245637,"byte_end":8245640,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245645,"byte_end":8245711,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ process. By default, the process is terminated by this signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245716,"byte_end":8245782,"line_start":154,"line_end":154,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4244},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8246026,"byte_end":8246039,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"user_defined1","qualname":"<SignalKind>::user_defined1","value":"pub fn user_defined1() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR1 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR1 signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245855,"byte_end":8245889,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245894,"byte_end":8245897,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245902,"byte_end":8245952,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8245957,"byte_end":8246014,"line_start":162,"line_end":162,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4245},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8246262,"byte_end":8246275,"line_start":171,"line_end":171,"column_start":12,"column_end":25},"name":"user_defined2","qualname":"<SignalKind>::user_defined2","value":"pub fn user_defined2() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR2 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR2 signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8246091,"byte_end":8246125,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8246130,"byte_end":8246133,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8246138,"byte_end":8246188,"line_start":169,"line_end":169,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8246193,"byte_end":8246250,"line_start":170,"line_end":170,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4246},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8246507,"byte_end":8246520,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"window_change","qualname":"<SignalKind>::window_change","value":"pub fn window_change() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGWINCH signal.","sig":null,"attributes":[{"value":"/ Represents the SIGWINCH signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8246327,"byte_end":8246362,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8246367,"byte_end":8246370,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal window is resized.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8246375,"byte_end":8246451,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ By default, this signal is ignored.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8246456,"byte_end":8246495,"line_start":178,"line_end":178,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4303},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253943,"byte_end":8253949,"line_start":378,"line_end":378,"column_start":12,"column_end":18},"name":"Signal","qualname":"::signal::unix::Signal","value":"Signal {  }","parent":null,"children":[{"krate":0,"index":4304},{"krate":0,"index":4305}],"decl_id":null,"docs":" A stream of events for receiving a particular type of OS signal.","sig":null,"attributes":[{"value":"/ A stream of events for receiving a particular type of OS signal.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8251178,"byte_end":8251246,"line_start":314,"line_end":314,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8251247,"byte_end":8251250,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ In general signal handling on Unix is a pretty tricky topic, and this","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8251251,"byte_end":8251324,"line_start":316,"line_end":316,"column_start":1,"column_end":74}},{"value":"/ structure is no exception! There are some important limitations to keep in","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8251325,"byte_end":8251403,"line_start":317,"line_end":317,"column_start":1,"column_end":79}},{"value":"/ mind when using `Signal` streams:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8251404,"byte_end":8251441,"line_start":318,"line_end":318,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8251442,"byte_end":8251445,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ * Signals handling in Unix already necessitates coalescing signals","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8251446,"byte_end":8251516,"line_start":320,"line_end":320,"column_start":1,"column_end":71}},{"value":"/   together sometimes. This `Signal` stream is also no exception here in","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8251517,"byte_end":8251592,"line_start":321,"line_end":321,"column_start":1,"column_end":76}},{"value":"/   that it will also coalesce signals. That is, even if the signal handler","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8251593,"byte_end":8251670,"line_start":322,"line_end":322,"column_start":1,"column_end":78}},{"value":"/   for this process runs multiple times, the `Signal` stream may only return","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8251671,"byte_end":8251750,"line_start":323,"line_end":323,"column_start":1,"column_end":80}},{"value":"/   one signal notification. Specifically, before `poll` is called, all","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8251751,"byte_end":8251824,"line_start":324,"line_end":324,"column_start":1,"column_end":74}},{"value":"/   signal notifications are coalesced into one item returned from `poll`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8251825,"byte_end":8251901,"line_start":325,"line_end":325,"column_start":1,"column_end":77}},{"value":"/   Once `poll` has been called, however, a further signal is guaranteed to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8251902,"byte_end":8251979,"line_start":326,"line_end":326,"column_start":1,"column_end":78}},{"value":"/   be yielded as an item.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8251980,"byte_end":8252008,"line_start":327,"line_end":327,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252009,"byte_end":8252012,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/   Put another way, any element pulled off the returned stream corresponds to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252013,"byte_end":8252093,"line_start":329,"line_end":329,"column_start":1,"column_end":81}},{"value":"/   *at least one* signal, but possibly more.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252094,"byte_end":8252141,"line_start":330,"line_end":330,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252142,"byte_end":8252145,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ * Signal handling in general is relatively inefficient. Although some","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252146,"byte_end":8252219,"line_start":332,"line_end":332,"column_start":1,"column_end":74}},{"value":"/   improvements are possible in this crate, it's recommended to not plan on","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252220,"byte_end":8252298,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/   having millions of signal channels open.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252299,"byte_end":8252345,"line_start":334,"line_end":334,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252346,"byte_end":8252349,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ If you've got any questions about this feel free to open an issue on the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252350,"byte_end":8252426,"line_start":336,"line_end":336,"column_start":1,"column_end":77}},{"value":"/ repo! New approaches to alleviate some of these limitations are always","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252427,"byte_end":8252501,"line_start":337,"line_end":337,"column_start":1,"column_end":75}},{"value":"/ appreciated!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252502,"byte_end":8252518,"line_start":338,"line_end":338,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252519,"byte_end":8252522,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252523,"byte_end":8252536,"line_start":340,"line_end":340,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252537,"byte_end":8252540,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ The first time that a `Signal` instance is registered for a particular","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252541,"byte_end":8252615,"line_start":342,"line_end":342,"column_start":1,"column_end":75}},{"value":"/ signal kind, an OS signal-handler is installed which replaces the default","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252616,"byte_end":8252693,"line_start":343,"line_end":343,"column_start":1,"column_end":78}},{"value":"/ platform behavior when that signal is received, **for the duration of the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252694,"byte_end":8252771,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/ entire process**.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252772,"byte_end":8252793,"line_start":345,"line_end":345,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252794,"byte_end":8252797,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252798,"byte_end":8252871,"line_start":347,"line_end":347,"column_start":1,"column_end":74}},{"value":"/ receives SIGINT. But, when a `Signal` instance is created to listen for","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252872,"byte_end":8252947,"line_start":348,"line_end":348,"column_start":1,"column_end":76}},{"value":"/ this signal, the next SIGINT that arrives will be translated to a stream","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8252948,"byte_end":8253024,"line_start":349,"line_end":349,"column_start":1,"column_end":77}},{"value":"/ event, and the process will continue to execute. **Even if this `Signal`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253025,"byte_end":8253101,"line_start":350,"line_end":350,"column_start":1,"column_end":77}},{"value":"/ instance is dropped, subsequent SIGINT deliveries will end up captured by","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253102,"byte_end":8253179,"line_start":351,"line_end":351,"column_start":1,"column_end":78}},{"value":"/ Tokio, and the default platform behavior will NOT be reset**.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253180,"byte_end":8253245,"line_start":352,"line_end":352,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253246,"byte_end":8253249,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253250,"byte_end":8253328,"line_start":354,"line_end":354,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253329,"byte_end":8253389,"line_start":355,"line_end":355,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253390,"byte_end":8253393,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253394,"byte_end":8253408,"line_start":357,"line_end":357,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253409,"byte_end":8253412,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253413,"byte_end":8253432,"line_start":359,"line_end":359,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253433,"byte_end":8253436,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253437,"byte_end":8253455,"line_start":361,"line_end":361,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253456,"byte_end":8253506,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253507,"byte_end":8253510,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253511,"byte_end":8253529,"line_start":364,"line_end":364,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253530,"byte_end":8253593,"line_start":365,"line_end":365,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253594,"byte_end":8253642,"line_start":366,"line_end":366,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253643,"byte_end":8253698,"line_start":367,"line_end":367,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253699,"byte_end":8253702,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253703,"byte_end":8253753,"line_start":369,"line_end":369,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253754,"byte_end":8253768,"line_start":370,"line_end":370,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253769,"byte_end":8253801,"line_start":371,"line_end":371,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253802,"byte_end":8253841,"line_start":372,"line_end":372,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253842,"byte_end":8253851,"line_start":373,"line_end":373,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253852,"byte_end":8253857,"line_start":374,"line_end":374,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253858,"byte_end":8253865,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253866,"byte_end":8253914,"line_start":376,"line_end":376,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4264},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255042,"byte_end":8255048,"line_start":405,"line_end":405,"column_start":8,"column_end":14},"name":"signal","qualname":"::signal::unix::signal","value":"pub fn signal(SignalKind) -> io::Result<Signal>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which will receive notifications when the current\n process receives the specified signal `kind`.","sig":null,"attributes":[{"value":"/ Creates a new stream which will receive notifications when the current","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8253997,"byte_end":8254071,"line_start":383,"line_end":383,"column_start":1,"column_end":75}},{"value":"/ process receives the specified signal `kind`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254072,"byte_end":8254121,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254122,"byte_end":8254125,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ This function will create a new stream which binds to the default reactor.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254126,"byte_end":8254204,"line_start":386,"line_end":386,"column_start":1,"column_end":79}},{"value":"/ The `Signal` stream is an infinite stream which will receive","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254205,"byte_end":8254269,"line_start":387,"line_end":387,"column_start":1,"column_end":65}},{"value":"/ notifications whenever a signal is received. More documentation can be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254270,"byte_end":8254344,"line_start":388,"line_end":388,"column_start":1,"column_end":75}},{"value":"/ found on `Signal` itself, but to reiterate:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254345,"byte_end":8254392,"line_start":389,"line_end":389,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254393,"byte_end":8254396,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ * Signals may be coalesced beyond what the kernel already does.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254397,"byte_end":8254464,"line_start":391,"line_end":391,"column_start":1,"column_end":68}},{"value":"/ * Once a signal handler is registered with the process the underlying","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254465,"byte_end":8254538,"line_start":392,"line_end":392,"column_start":1,"column_end":74}},{"value":"/   libc signal handler is never unregistered.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254539,"byte_end":8254587,"line_start":393,"line_end":393,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254588,"byte_end":8254591,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ A `Signal` stream can be created for a particular signal number","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254592,"byte_end":8254659,"line_start":395,"line_end":395,"column_start":1,"column_end":68}},{"value":"/ multiple times. When a signal is received then all the associated","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254660,"byte_end":8254729,"line_start":396,"line_end":396,"column_start":1,"column_end":70}},{"value":"/ channels will receive the signal notification.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254730,"byte_end":8254780,"line_start":397,"line_end":397,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254781,"byte_end":8254784,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254785,"byte_end":8254797,"line_start":399,"line_end":399,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254798,"byte_end":8254801,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ * If the lower-level C functions fail for some reason.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254802,"byte_end":8254860,"line_start":401,"line_end":401,"column_start":1,"column_end":59}},{"value":"/ * If the previous initialization of this specific signal failed.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254861,"byte_end":8254929,"line_start":402,"line_end":402,"column_start":1,"column_end":69}},{"value":"/ * If the signal is one of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254930,"byte_end":8254959,"line_start":403,"line_end":403,"column_start":1,"column_end":30}},{"value":"/   [`signal_hook::FORBIDDEN`](fn@signal_hook_registry::register#panics)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8254960,"byte_end":8255034,"line_start":404,"line_end":404,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4266},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256259,"byte_end":8256263,"line_start":447,"line_end":447,"column_start":18,"column_end":22},"name":"recv","qualname":"<Signal>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255552,"byte_end":8255600,"line_start":424,"line_end":424,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255605,"byte_end":8255608,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255613,"byte_end":8255685,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255690,"byte_end":8255693,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255698,"byte_end":8255712,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255717,"byte_end":8255720,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255725,"byte_end":8255744,"line_start":430,"line_end":430,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255749,"byte_end":8255752,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255757,"byte_end":8255775,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255780,"byte_end":8255830,"line_start":433,"line_end":433,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255835,"byte_end":8255838,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255843,"byte_end":8255861,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255866,"byte_end":8255929,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255934,"byte_end":8255982,"line_start":437,"line_end":437,"column_start":5,"column_end":53}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255987,"byte_end":8256042,"line_start":438,"line_end":438,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256047,"byte_end":8256050,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256055,"byte_end":8256105,"line_start":440,"line_end":440,"column_start":5,"column_end":55}},{"value":"/     loop {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256110,"byte_end":8256124,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256129,"byte_end":8256161,"line_start":442,"line_end":442,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256166,"byte_end":8256205,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256210,"byte_end":8256219,"line_start":444,"line_end":444,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256224,"byte_end":8256229,"line_start":445,"line_end":445,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256234,"byte_end":8256241,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4271},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8257212,"byte_end":8257221,"line_start":480,"line_end":480,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Signal>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256385,"byte_end":8256455,"line_start":452,"line_end":452,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256460,"byte_end":8256480,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256485,"byte_end":8256488,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256493,"byte_end":8256565,"line_start":455,"line_end":455,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256570,"byte_end":8256573,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256578,"byte_end":8256592,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256597,"byte_end":8256600,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256605,"byte_end":8256651,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256656,"byte_end":8256659,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256664,"byte_end":8256682,"line_start":461,"line_end":461,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256687,"byte_end":8256709,"line_start":462,"line_end":462,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256714,"byte_end":8256742,"line_start":463,"line_end":463,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256747,"byte_end":8256782,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::unix::Signal;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256787,"byte_end":8256823,"line_start":465,"line_end":465,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256828,"byte_end":8256831,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256836,"byte_end":8256857,"line_start":467,"line_end":467,"column_start":5,"column_end":26}},{"value":"/     signal: Signal,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256862,"byte_end":8256885,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256890,"byte_end":8256895,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256900,"byte_end":8256903,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256908,"byte_end":8256938,"line_start":471,"line_end":471,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256943,"byte_end":8256976,"line_start":472,"line_end":472,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256981,"byte_end":8256984,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8256989,"byte_end":8257076,"line_start":474,"line_end":474,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8257081,"byte_end":8257122,"line_start":475,"line_end":475,"column_start":5,"column_end":46}},{"value":"/         self.signal.poll_recv(cx)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8257127,"byte_end":8257164,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8257169,"byte_end":8257178,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8257183,"byte_end":8257188,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8257193,"byte_end":8257200,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4311},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":4312},{"krate":0,"index":4332},{"krate":0,"index":4333},{"krate":0,"index":4353},{"krate":0,"index":4354},{"krate":0,"index":4374},{"krate":0,"index":4375},{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4468},{"krate":0,"index":4488},{"krate":0,"index":4489},{"krate":0,"index":4490},{"krate":0,"index":4491},{"krate":0,"index":4513},{"krate":0,"index":4514},{"krate":0,"index":4537},{"krate":0,"index":4538},{"krate":0,"index":4557},{"krate":0,"index":4558},{"krate":0,"index":4573},{"krate":0,"index":4574},{"krate":0,"index":4589},{"krate":0,"index":4590},{"krate":0,"index":4591},{"krate":0,"index":4592},{"krate":0,"index":4617},{"krate":0,"index":4618},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4659},{"krate":0,"index":4660},{"krate":0,"index":4679},{"krate":0,"index":4680},{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4702},{"krate":0,"index":4703},{"krate":0,"index":4704},{"krate":0,"index":4705},{"krate":0,"index":4747},{"krate":0,"index":4748},{"krate":0,"index":4768},{"krate":0,"index":4769},{"krate":0,"index":4791},{"krate":0,"index":4792},{"krate":0,"index":4813},{"krate":0,"index":4814},{"krate":0,"index":4835},{"krate":0,"index":4836},{"krate":0,"index":4860},{"krate":0,"index":4975},{"krate":0,"index":4998},{"krate":0,"index":4999},{"krate":0,"index":4861},{"krate":0,"index":4862},{"krate":0,"index":4896},{"krate":0,"index":4898}],"decl_id":null,"docs":" Stream utilities for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"stream\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21047,"byte_end":21073,"line_start":221,"line_end":221,"column_start":13,"column_end":39}},{"value":"! Stream utilities for Tokio.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8266391,"byte_end":8266422,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8266423,"byte_end":8266426,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! A `Stream` is an asynchronous sequence of values. It can be thought of as an asynchronous version of the standard library's `Iterator` trait.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8266427,"byte_end":8266572,"line_start":3,"line_end":3,"column_start":1,"column_end":146}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8266573,"byte_end":8266576,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module provides helpers to work with them.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8266577,"byte_end":8266628,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4899},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8292309,"byte_end":8292318,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":4903},{"krate":0,"index":4904}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`all`](super::StreamExt::all) method.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8292155,"byte_end":8292212,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8292230,"byte_end":8292297,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4910},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8293472,"byte_end":8293481,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":4914},{"krate":0,"index":4915}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`any`](super::StreamExt::any) method.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8293318,"byte_end":8293375,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8293393,"byte_end":8293460,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7779},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":8294601,"byte_end":8294606,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":7782},{"krate":0,"index":7783}],"decl_id":null,"docs":" Stream returned by the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7758},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8295839,"byte_end":8295846,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":7761},{"krate":0,"index":7762}],"decl_id":null,"docs":" Future returned by the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":7657717,"byte_end":7657726,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":4389},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8296411,"byte_end":8296421,"line_start":36,"line_end":36,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::collect::FromStream","value":"FromStream<T>: sealed::FromStreamPriv<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert from a [`Stream`](crate::stream::Stream).","sig":null,"attributes":[{"value":"/ Convert from a [`Stream`](crate::stream::Stream).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8295998,"byte_end":8296051,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8296052,"byte_end":8296055,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is not intended to be used directly. Instead, call","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8296056,"byte_end":8296121,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ [`StreamExt::collect()`](super::StreamExt::collect).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8296122,"byte_end":8296178,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8296179,"byte_end":8296182,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8296183,"byte_end":8296201,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8296202,"byte_end":8296205,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait may not be implemented by third parties. The trait is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8296206,"byte_end":8296285,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ sealed in order to make changes in the future. Stabilization is pending","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8296286,"byte_end":8296361,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8296362,"byte_end":8296400,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":4460},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8301322,"byte_end":8301336,"line_start":231,"line_end":231,"column_start":15,"column_end":29},"name":"FromStreamPriv","qualname":"::stream::collect::sealed::FromStreamPriv","value":"FromStreamPriv<T>","parent":null,"children":[{"krate":0,"index":4462},{"krate":0,"index":4463},{"krate":0,"index":4464},{"krate":0,"index":4465}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4462},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8301416,"byte_end":8301426,"line_start":233,"line_end":233,"column_start":14,"column_end":24},"name":"Collection","qualname":"::stream::collect::sealed::FromStreamPriv::Collection","value":"type Collection;","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" Intermediate type used during collection process\n","sig":null,"attributes":[{"value":"/ Intermediate type used during collection process","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8301350,"byte_end":8301402,"line_start":232,"line_end":232,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4463},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8301478,"byte_end":8301488,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"initialize","qualname":"::stream::collect::sealed::FromStreamPriv::initialize","value":"pub fn initialize(usize, Option<usize>) -> Self::Collection","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" Initialize the collection\n","sig":null,"attributes":[{"value":"/ Initialize the collection","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8301437,"byte_end":8301466,"line_start":235,"line_end":235,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4464},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8301705,"byte_end":8301711,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"extend","qualname":"::stream::collect::sealed::FromStreamPriv::extend","value":"pub fn extend(&mut Self::Collection, T) -> bool","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" Extend the collection with the received item","sig":null,"attributes":[{"value":"/ Extend the collection with the received item","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8301555,"byte_end":8301603,"line_start":238,"line_end":238,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8301612,"byte_end":8301615,"line_start":239,"line_end":239,"column_start":9,"column_end":12}},{"value":"/ Return `true` to continue streaming, `false` complete collection.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8301624,"byte_end":8301693,"line_start":240,"line_end":240,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4465},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8301827,"byte_end":8301835,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"finalize","qualname":"::stream::collect::sealed::FromStreamPriv::finalize","value":"pub fn finalize(&mut Self::Collection) -> Self","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" Finalize collection into target type.\n","sig":null,"attributes":[{"value":"/ Finalize collection into target type.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8301774,"byte_end":8301815,"line_start":243,"line_end":243,"column_start":9,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":4921},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302128,"byte_end":8302133,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`empty`](fn@empty) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`](fn@empty) function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302002,"byte_end":8302050,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302068,"byte_end":8302116,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4481},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302723,"byte_end":8302728,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"name":"empty","qualname":"::stream::empty::empty","value":"pub const fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields nothing.","sig":null,"attributes":[{"value":"/ Creates a stream that yields nothing.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302258,"byte_end":8302299,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302300,"byte_end":8302303,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and returns `None`. Use","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302304,"byte_end":8302372,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ [`stream::pending()`](super::pending()) to obtain a stream that is never","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302373,"byte_end":8302449,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302450,"byte_end":8302460,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302461,"byte_end":8302464,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302465,"byte_end":8302479,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302480,"byte_end":8302483,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302484,"byte_end":8302500,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302501,"byte_end":8302504,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302505,"byte_end":8302512,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302513,"byte_end":8302554,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302555,"byte_end":8302558,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302559,"byte_end":8302577,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302578,"byte_end":8302599,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let mut none = stream::empty::<i32>();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302600,"byte_end":8302646,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302647,"byte_end":8302650,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(None, none.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302651,"byte_end":8302695,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302696,"byte_end":8302701,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302702,"byte_end":8302709,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7685},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8303311,"byte_end":8303317,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":7688},{"krate":0,"index":7689}],"decl_id":null,"docs":" Stream returned by the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":7657717,"byte_end":7657726,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7640},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8304749,"byte_end":8304758,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":7643},{"krate":0,"index":7644}],"decl_id":null,"docs":" Stream returned by the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":7657717,"byte_end":7657726,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7612},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":8306175,"byte_end":8306185,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":7616},{"krate":0,"index":7617},{"krate":0,"index":7618}],"decl_id":null,"docs":" Future returned by the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7564},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":8307341,"byte_end":8307345,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7566}],"decl_id":null,"docs":" Stream returned by [`fuse()`][super::StreamExt::fuse].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4928},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308477,"byte_end":8308481,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4930}],"decl_id":null,"docs":" Stream for the [`iter`](fn@iter) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`](fn@iter) function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308353,"byte_end":8308399,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308417,"byte_end":8308465,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4582},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8309055,"byte_end":8309059,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308533,"byte_end":8308597,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308598,"byte_end":8308626,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308627,"byte_end":8308630,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308631,"byte_end":8308704,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308705,"byte_end":8308760,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308761,"byte_end":8308764,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308765,"byte_end":8308772,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308773,"byte_end":8308795,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308796,"byte_end":8308837,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308838,"byte_end":8308841,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![17, 19]);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308842,"byte_end":8308890,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308891,"byte_end":8308894,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.next().await, Some(17));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308895,"byte_end":8308941,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, Some(19));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308942,"byte_end":8308988,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308989,"byte_end":8309031,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8309032,"byte_end":8309039,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8309040,"byte_end":8309047,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7497},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8309839,"byte_end":8309842,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7500},{"krate":0,"index":7501}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":7657717,"byte_end":7657726,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7448},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":8310912,"byte_end":8310917,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":7451},{"krate":0,"index":7452},{"krate":0,"index":7453}],"decl_id":null,"docs":" Stream returned by the [`merge`](super::StreamExt::merge) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4934},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8312792,"byte_end":8312796,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":4937}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8312636,"byte_end":8312695,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8312713,"byte_end":8312780,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4942},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313492,"byte_end":8313496,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":4944}],"decl_id":null,"docs":" Stream for the [`once`](fn@once) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`once`](fn@once) function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313368,"byte_end":8313414,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313432,"byte_end":8313480,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4672},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8314068,"byte_end":8314072,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that emits an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a stream that emits an element exactly once.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313572,"byte_end":8313628,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313629,"byte_end":8313632,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and emits the provided value once.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313633,"byte_end":8313712,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313713,"byte_end":8313716,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313717,"byte_end":8313731,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313732,"byte_end":8313735,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313736,"byte_end":8313743,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313744,"byte_end":8313785,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313786,"byte_end":8313789,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313790,"byte_end":8313808,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313809,"byte_end":8313830,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     // one is the loneliest number","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313831,"byte_end":8313869,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/     let mut one = stream::once(1);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313870,"byte_end":8313908,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313909,"byte_end":8313912,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(Some(1), one.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313913,"byte_end":8313959,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313960,"byte_end":8313963,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     // just one, that's all we get","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313964,"byte_end":8314002,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(None, one.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8314003,"byte_end":8314046,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8314047,"byte_end":8314052,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8314053,"byte_end":8314060,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4948},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8314695,"byte_end":8314702,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`pending`](fn@pending) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending`](fn@pending) function.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8314565,"byte_end":8314617,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8314635,"byte_end":8314683,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4695},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315442,"byte_end":8315449,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"name":"pending","qualname":"::stream::pending::pending","value":"pub const fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that is never ready","sig":null,"attributes":[{"value":"/ Creates a stream that is never ready","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8314833,"byte_end":8314873,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8314874,"byte_end":8314877,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is never ready. Attempting to call","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8314878,"byte_end":8314936,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ [`next()`](crate::stream::StreamExt::next) will never complete. Use","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8314937,"byte_end":8315008,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`stream::empty()`](super::empty()) to obtain a stream that is is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315009,"byte_end":8315078,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ immediately empty but returns no values.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315079,"byte_end":8315123,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315124,"byte_end":8315127,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315128,"byte_end":8315142,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315143,"byte_end":8315146,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315147,"byte_end":8315163,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315164,"byte_end":8315167,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315168,"byte_end":8315181,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315182,"byte_end":8315223,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315224,"byte_end":8315227,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315228,"byte_end":8315246,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315247,"byte_end":8315268,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let mut never = stream::pending::<i32>();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315269,"byte_end":8315318,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315319,"byte_end":8315322,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // This will never complete","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315323,"byte_end":8315358,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/     never.next().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315359,"byte_end":8315386,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315387,"byte_end":8315390,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     unreachable!();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315391,"byte_end":8315414,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315415,"byte_end":8315420,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315421,"byte_end":8315428,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4955},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321098,"byte_end":8321107,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::stream::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":4958}],"decl_id":null,"docs":" Combine many streams into one, indexing each source stream with a unique\n key.","sig":null,"attributes":[{"value":"/ Combine many streams into one, indexing each source stream with a unique","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8315866,"byte_end":8315942,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ key.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8315943,"byte_end":8315951,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8315952,"byte_end":8315955,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is similar to [`StreamExt::merge`] in that it combines source","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8315956,"byte_end":8316033,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ streams into a single merged stream that yields values in the order that","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316034,"byte_end":8316110,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ they arrive from the source streams. However, `StreamMap` has a lot more","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316111,"byte_end":8316187,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ flexibility in usage patterns.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316188,"byte_end":8316222,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316223,"byte_end":8316226,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` can:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316227,"byte_end":8316247,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316248,"byte_end":8316251,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * Merge an arbitrary number of streams.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316252,"byte_end":8316295,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ * Track which source stream the value was received from.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316296,"byte_end":8316356,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ * Handle inserting and removing streams from the set of managed streams at","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316357,"byte_end":8316435,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   any point during iteration.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316436,"byte_end":8316469,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316470,"byte_end":8316473,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All source streams held by `StreamMap` are indexed using a key. This key is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316474,"byte_end":8316553,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ included with the value when a source stream yields a value. The key is also","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316554,"byte_end":8316634,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ used to remove the stream from the `StreamMap` before the stream has","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316635,"byte_end":8316707,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ completed streaming.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316708,"byte_end":8316732,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316733,"byte_end":8316736,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # `Unpin`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316737,"byte_end":8316750,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316751,"byte_end":8316754,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because the `StreamMap` API moves streams during runtime, both streams and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316755,"byte_end":8316833,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ keys must be `Unpin`. In order to insert a `!Unpin` stream into a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316834,"byte_end":8316903,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `StreamMap`, use [`pin!`] to pin the stream to the stack or [`Box::pin`] to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316904,"byte_end":8316983,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ pin the stream in the heap.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8316984,"byte_end":8317015,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317016,"byte_end":8317019,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317020,"byte_end":8317040,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317041,"byte_end":8317044,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is backed by a `Vec<(K, V)>`. There is no guarantee that this","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317045,"byte_end":8317122,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ internal implementation detail will persist in future versions, but it is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317123,"byte_end":8317200,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ important to know the runtime implications. In general, `StreamMap` works","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317201,"byte_end":8317278,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ best with a \"smallish\" number of streams as all entries are scanned on","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317279,"byte_end":8317353,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ insert, remove, and polling. In cases where a large number of streams need","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317354,"byte_end":8317432,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ to be merged, it may be advisable to use tasks sending values on a shared","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317433,"byte_end":8317510,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`mpsc`] channel.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317511,"byte_end":8317532,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317533,"byte_end":8317536,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`StreamExt::merge`]: crate::stream::StreamExt::merge","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317537,"byte_end":8317594,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317595,"byte_end":8317626,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ [`pin!`]: macro@pin","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317627,"byte_end":8317650,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ [`Box::pin`]: std::boxed::Box::pin","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317651,"byte_end":8317689,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317690,"byte_end":8317693,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317694,"byte_end":8317708,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317709,"byte_end":8317712,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Merging two streams, then remove them after receiving the first value","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317713,"byte_end":8317786,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317787,"byte_end":8317790,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317791,"byte_end":8317798,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{StreamExt, StreamMap};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317799,"byte_end":8317845,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317846,"byte_end":8317872,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317873,"byte_end":8317876,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317877,"byte_end":8317895,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317896,"byte_end":8317917,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317918,"byte_end":8317965,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8317966,"byte_end":8318013,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318014,"byte_end":8318017,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318018,"byte_end":8318051,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318052,"byte_end":8318091,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318092,"byte_end":8318095,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         // This value will never be received. The send may or may not return","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318096,"byte_end":8318176,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/         // `Err` depending on if the remote end closed first or not.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318177,"byte_end":8318249,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/         let _ = tx1.send(2).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318250,"byte_end":8318288,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318289,"byte_end":8318300,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318301,"byte_end":8318304,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318305,"byte_end":8318338,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318339,"byte_end":8318378,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/         let _ = tx2.send(4).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318379,"byte_end":8318417,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318418,"byte_end":8318429,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318430,"byte_end":8318433,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut map = StreamMap::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318434,"byte_end":8318473,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318474,"byte_end":8318477,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // Insert both streams","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318478,"byte_end":8318508,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     map.insert(\"one\", rx1);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318509,"byte_end":8318540,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/     map.insert(\"two\", rx2);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318541,"byte_end":8318572,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318573,"byte_end":8318576,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     // Read twice","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318577,"byte_end":8318598,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     for _ in 0..2 {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318599,"byte_end":8318622,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/         let (key, val) = map.next().await.unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318623,"byte_end":8318678,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318679,"byte_end":8318682,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/         if key == \"one\" {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318683,"byte_end":8318712,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/             assert_eq!(val, 1);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318713,"byte_end":8318748,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318749,"byte_end":8318769,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/             assert_eq!(val, 3);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318770,"byte_end":8318805,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318806,"byte_end":8318819,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318820,"byte_end":8318823,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         // Remove the stream to prevent reading the next value","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318824,"byte_end":8318890,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/         map.remove(key);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318891,"byte_end":8318919,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318920,"byte_end":8318929,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318930,"byte_end":8318935,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318936,"byte_end":8318943,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318944,"byte_end":8318947,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This example models a read-only client to a chat system with channels. The","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8318948,"byte_end":8319026,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ client sends commands to join and leave channels. `StreamMap` is used to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319027,"byte_end":8319103,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ manage active channel subscriptions.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319104,"byte_end":8319144,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319145,"byte_end":8319148,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For simplicity, messages are displayed with `println!`, but they could be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319149,"byte_end":8319226,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ sent to the client over a socket.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319227,"byte_end":8319264,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319265,"byte_end":8319268,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319269,"byte_end":8319282,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{Stream, StreamExt, StreamMap};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319283,"byte_end":8319337,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319338,"byte_end":8319341,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319342,"byte_end":8319360,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/     Join(String),","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319361,"byte_end":8319382,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/     Leave(String),","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319383,"byte_end":8319405,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319406,"byte_end":8319411,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319412,"byte_end":8319415,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn commands() -> impl Stream<Item = Command> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319416,"byte_end":8319466,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"/     // Streams in user commands by parsing `stdin`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319467,"byte_end":8319522,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319523,"byte_end":8319553,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319554,"byte_end":8319559,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319560,"byte_end":8319563,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // Join a channel, returns a stream of messages received on the channel.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319564,"byte_end":8319640,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ fn join(channel: &str) -> impl Stream<Item = String> + Unpin {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319641,"byte_end":8319707,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // left as an exercise to the reader","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319708,"byte_end":8319752,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319753,"byte_end":8319783,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319784,"byte_end":8319789,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319790,"byte_end":8319793,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319794,"byte_end":8319812,"line_start":124,"line_end":124,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319813,"byte_end":8319834,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/     let mut channels = StreamMap::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319835,"byte_end":8319879,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319880,"byte_end":8319883,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // Input commands (join / leave channels).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319884,"byte_end":8319934,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/     let cmds = commands();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319935,"byte_end":8319965,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/     tokio::pin!(cmds);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319966,"byte_end":8319992,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319993,"byte_end":8319996,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8319997,"byte_end":8320011,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320012,"byte_end":8320040,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/             Some(cmd) = cmds.next() => {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320041,"byte_end":8320085,"line_start":134,"line_end":134,"column_start":1,"column_end":45}},{"value":"/                 match cmd {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320086,"byte_end":8320117,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/                     Command::Join(chan) => {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320118,"byte_end":8320166,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/                         // Join the channel and add it to the `channels`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320167,"byte_end":8320243,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/                         // stream map","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320244,"byte_end":8320285,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/                         let msgs = join(&chan);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320286,"byte_end":8320337,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/                         channels.insert(chan, msgs);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320338,"byte_end":8320394,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/                     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320395,"byte_end":8320420,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/                     Command::Leave(chan) => {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320421,"byte_end":8320470,"line_start":142,"line_end":142,"column_start":1,"column_end":50}},{"value":"/                         channels.remove(&chan);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320471,"byte_end":8320522,"line_start":143,"line_end":143,"column_start":1,"column_end":52}},{"value":"/                     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320523,"byte_end":8320548,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320549,"byte_end":8320570,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320571,"byte_end":8320588,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/             Some((chan, msg)) = channels.next() => {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320589,"byte_end":8320645,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"/                 // Received a message, display it on stdout with the channel","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320646,"byte_end":8320726,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/                 // it originated from.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320727,"byte_end":8320769,"line_start":149,"line_end":149,"column_start":1,"column_end":43}},{"value":"/                 println!(\"{}: {}\", chan, msg);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320770,"byte_end":8320820,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320821,"byte_end":8320838,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/             // Both the `commands` stream and the `channels` stream are","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320839,"byte_end":8320914,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/             // complete. There is no more work to do, so leave the loop.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320915,"byte_end":8320991,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/             else => break,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8320992,"byte_end":8321022,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321023,"byte_end":8321036,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321037,"byte_end":8321046,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321047,"byte_end":8321052,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321053,"byte_end":8321060,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4716},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321580,"byte_end":8321583,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamMap<K, V>>::new","value":"pub fn new() -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321212,"byte_end":8321245,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321250,"byte_end":8321253,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The stream map is initially created with a capacity of `0`, so it will","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321258,"byte_end":8321332,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ not allocate until it is first inserted into.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321337,"byte_end":8321386,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321391,"byte_end":8321394,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321399,"byte_end":8321413,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321418,"byte_end":8321421,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321426,"byte_end":8321433,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321438,"byte_end":8321482,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321487,"byte_end":8321490,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321495,"byte_end":8321556,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321561,"byte_end":8321568,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4717},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322088,"byte_end":8322101,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StreamMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap` with the specified capacity.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321656,"byte_end":8321717,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321722,"byte_end":8321725,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The stream map will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321730,"byte_end":8321806,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ reallocating. If `capacity` is 0, the stream map will not allocate.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321811,"byte_end":8321882,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321887,"byte_end":8321890,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321895,"byte_end":8321909,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321914,"byte_end":8321917,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321922,"byte_end":8321929,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321934,"byte_end":8321978,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321983,"byte_end":8321986,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::with_capacity(10);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321991,"byte_end":8322064,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322069,"byte_end":8322076,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4718},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322719,"byte_end":8322723,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"keys","qualname":"<StreamMap<K, V>>::keys","value":"pub fn keys(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all keys in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all keys in arbitrary order.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322232,"byte_end":8322293,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322298,"byte_end":8322301,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a K.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322306,"byte_end":8322345,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322350,"byte_end":8322353,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322358,"byte_end":8322372,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322377,"byte_end":8322380,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322385,"byte_end":8322392,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322397,"byte_end":8322441,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322446,"byte_end":8322449,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322454,"byte_end":8322489,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322494,"byte_end":8322497,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322502,"byte_end":8322540,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322545,"byte_end":8322576,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322581,"byte_end":8322612,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322617,"byte_end":8322620,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322625,"byte_end":8322652,"line_start":215,"line_end":215,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322657,"byte_end":8322685,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322690,"byte_end":8322695,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322700,"byte_end":8322707,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4721},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323307,"byte_end":8323313,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"values","qualname":"<StreamMap<K, V>>::values","value":"pub fn values(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322816,"byte_end":8322871,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322876,"byte_end":8322879,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a V.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322884,"byte_end":8322923,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322928,"byte_end":8322931,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322936,"byte_end":8322950,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322955,"byte_end":8322958,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322963,"byte_end":8322970,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8322975,"byte_end":8323019,"line_start":230,"line_end":230,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323024,"byte_end":8323027,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323032,"byte_end":8323067,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323072,"byte_end":8323075,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323080,"byte_end":8323118,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323123,"byte_end":8323154,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323159,"byte_end":8323190,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323195,"byte_end":8323198,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323203,"byte_end":8323235,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323240,"byte_end":8323273,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323278,"byte_end":8323283,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323288,"byte_end":8323295,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4724},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323913,"byte_end":8323923,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<StreamMap<K, V>>::values_mut","value":"pub fn values_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323406,"byte_end":8323469,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323474,"byte_end":8323477,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a mut V.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323482,"byte_end":8323525,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323530,"byte_end":8323533,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323538,"byte_end":8323552,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323557,"byte_end":8323560,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323565,"byte_end":8323572,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323577,"byte_end":8323621,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323626,"byte_end":8323629,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323634,"byte_end":8323669,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323674,"byte_end":8323677,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323682,"byte_end":8323720,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323725,"byte_end":8323756,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323761,"byte_end":8323792,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323797,"byte_end":8323800,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values_mut() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323805,"byte_end":8323841,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323846,"byte_end":8323879,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323884,"byte_end":8323889,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8323894,"byte_end":8323901,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4727},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324501,"byte_end":8324509,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StreamMap<K, V>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of streams the map can hold without reallocating.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324028,"byte_end":8324100,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324105,"byte_end":8324108,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `StreamMap` might be able to hold","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324113,"byte_end":8324184,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324189,"byte_end":8324255,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324260,"byte_end":8324263,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324268,"byte_end":8324282,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324287,"byte_end":8324290,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324295,"byte_end":8324302,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324307,"byte_end":8324351,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324356,"byte_end":8324359,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<i32, Pending<()>> = StreamMap::with_capacity(100);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324364,"byte_end":8324437,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324442,"byte_end":8324477,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324482,"byte_end":8324489,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4728},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324885,"byte_end":8324888,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams in the map.","sig":null,"attributes":[{"value":"/ Returns the number of streams in the map.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324571,"byte_end":8324616,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324621,"byte_end":8324624,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324629,"byte_end":8324643,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324648,"byte_end":8324651,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324656,"byte_end":8324663,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324668,"byte_end":8324712,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324717,"byte_end":8324720,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324725,"byte_end":8324758,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324763,"byte_end":8324790,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324795,"byte_end":8324829,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324834,"byte_end":8324861,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324866,"byte_end":8324873,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4729},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325239,"byte_end":8325247,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8324945,"byte_end":8324996,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325001,"byte_end":8325004,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325009,"byte_end":8325023,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325028,"byte_end":8325031,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325036,"byte_end":8325043,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325048,"byte_end":8325082,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325087,"byte_end":8325090,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325095,"byte_end":8325126,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325131,"byte_end":8325157,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325162,"byte_end":8325183,"line_start":311,"line_end":311,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325188,"byte_end":8325215,"line_start":312,"line_end":312,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325220,"byte_end":8325227,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4730},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325659,"byte_end":8325664,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"clear","qualname":"<StreamMap<K, V>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-stream pairs. Keeps the allocated\n memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-stream pairs. Keeps the allocated","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325308,"byte_end":8325378,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ memory for reuse.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325383,"byte_end":8325404,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325409,"byte_end":8325412,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325417,"byte_end":8325431,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325436,"byte_end":8325439,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325444,"byte_end":8325451,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325456,"byte_end":8325500,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325505,"byte_end":8325508,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325513,"byte_end":8325546,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325551,"byte_end":8325585,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ a.clear();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325590,"byte_end":8325604,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325609,"byte_end":8325635,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325640,"byte_end":8325647,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4731},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326339,"byte_end":8326345,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"insert","qualname":"<StreamMap<K, V>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V> where K: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-stream pair into the map.","sig":null,"attributes":[{"value":"/ Insert a key-stream pair into the map.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325719,"byte_end":8325761,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325766,"byte_end":8325769,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325774,"byte_end":8325839,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325844,"byte_end":8325847,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new `stream` replaces the old","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325852,"byte_end":8325927,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ one and the old stream is returned.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325932,"byte_end":8325971,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325976,"byte_end":8325979,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8325984,"byte_end":8325998,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326003,"byte_end":8326006,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326011,"byte_end":8326018,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326023,"byte_end":8326067,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326072,"byte_end":8326075,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326080,"byte_end":8326115,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326120,"byte_end":8326123,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(map.insert(37, pending::<i32>()).is_none());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326128,"byte_end":8326184,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326189,"byte_end":8326218,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326223,"byte_end":8326226,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, pending());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326231,"byte_end":8326261,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ assert!(map.insert(37, pending()).is_some());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326266,"byte_end":8326315,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326320,"byte_end":8326327,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4732},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327076,"byte_end":8327082,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"remove","qualname":"<StreamMap<K, V>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stream at the key if the key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stream at the key if the key was previously in the map.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326524,"byte_end":8326625,"line_start":365,"line_end":365,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326630,"byte_end":8326633,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326638,"byte_end":8326712,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326717,"byte_end":8326781,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326786,"byte_end":8326789,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326794,"byte_end":8326808,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326813,"byte_end":8326816,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326821,"byte_end":8326828,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326833,"byte_end":8326877,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326882,"byte_end":8326885,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326890,"byte_end":8326925,"line_start":375,"line_end":375,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326930,"byte_end":8326966,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/ assert!(map.remove(&1).is_some());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8326971,"byte_end":8327009,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ assert!(map.remove(&1).is_none());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327014,"byte_end":8327052,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327057,"byte_end":8327064,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4734},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327916,"byte_end":8327928,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamMap<K, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a stream for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a stream for the specified key.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327384,"byte_end":8327454,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327459,"byte_end":8327462,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327467,"byte_end":8327541,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327546,"byte_end":8327610,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327615,"byte_end":8327618,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327623,"byte_end":8327637,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327642,"byte_end":8327645,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327650,"byte_end":8327657,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327662,"byte_end":8327706,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327711,"byte_end":8327714,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327719,"byte_end":8327754,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327759,"byte_end":8327795,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327800,"byte_end":8327843,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327848,"byte_end":8327892,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8327897,"byte_end":8327904,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7411},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8330868,"byte_end":8330872,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":7413},{"krate":0,"index":7414}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":7657717,"byte_end":7657726,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7366},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8332434,"byte_end":8332443,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7369},{"krate":0,"index":7370}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":7657717,"byte_end":7657726,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4967},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8334247,"byte_end":8334254,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":4970}],"decl_id":null,"docs":" Future for the [`try_next`](super::StreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::StreamExt::try_next) method.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8334083,"byte_end":8334150,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8334168,"byte_end":8334235,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7329},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8335103,"byte_end":8335107,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7331},{"krate":0,"index":7332}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":7657717,"byte_end":7657726,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7280},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8336950,"byte_end":8336959,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":7283},{"krate":0,"index":7284},{"krate":0,"index":7285}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":7657717,"byte_end":7657726,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7257},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":8368627,"byte_end":8368634,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":7259},{"krate":0,"index":7260},{"krate":0,"index":7261},{"krate":0,"index":7262}],"decl_id":null,"docs":" Stream returned by the [`timeout`](super::StreamExt::timeout) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":7657717,"byte_end":7657726,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":4862},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267632,"byte_end":8267641,"line_start":81,"line_end":81,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":4863},{"krate":0,"index":4864},{"krate":0,"index":4867},{"krate":0,"index":4870},{"krate":0,"index":4872},{"krate":0,"index":4874},{"krate":0,"index":4877},{"krate":0,"index":4878},{"krate":0,"index":4879},{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4884},{"krate":0,"index":4886},{"krate":0,"index":4888},{"krate":0,"index":4890},{"krate":0,"index":4893},{"krate":0,"index":4895}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267521,"byte_end":8267595,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267596,"byte_end":8267621,"line_start":80,"line_end":80,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4863},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268711,"byte_end":8268715,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Consumes and returns the next value in the stream or `None` if the\n stream is finished.","sig":null,"attributes":[{"value":"/ Consumes and returns the next value in the stream or `None` if the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267656,"byte_end":8267726,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ stream is finished.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267731,"byte_end":8267754,"line_start":83,"line_end":83,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267759,"byte_end":8267762,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267767,"byte_end":8267785,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267790,"byte_end":8267793,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267798,"byte_end":8267811,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ async fn next(&mut self) -> Option<Self::Item>;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267816,"byte_end":8267867,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267872,"byte_end":8267879,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267884,"byte_end":8267887,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267892,"byte_end":8267960,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267965,"byte_end":8268040,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268045,"byte_end":8268120,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268125,"byte_end":8268179,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268184,"byte_end":8268259,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268264,"byte_end":8268274,"line_start":96,"line_end":96,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268279,"byte_end":8268282,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268287,"byte_end":8268301,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268306,"byte_end":8268309,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268314,"byte_end":8268321,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268326,"byte_end":8268346,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268351,"byte_end":8268374,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268379,"byte_end":8268420,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268425,"byte_end":8268428,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268433,"byte_end":8268474,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268479,"byte_end":8268482,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268487,"byte_end":8268532,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268537,"byte_end":8268582,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268587,"byte_end":8268632,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268637,"byte_end":8268679,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268684,"byte_end":8268691,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268696,"byte_end":8268703,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4864},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269786,"byte_end":8269794,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::StreamExt::try_next","value":"pub fn try_next<T, E>(&mut Self) -> TryNext<, Self> where Self: Stream<Item =\nResult<T, E>> + Unpin","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Consumes and returns the next item in the stream. If an error is\n encountered before the next item, the error is returned instead.","sig":null,"attributes":[{"value":"/ Consumes and returns the next item in the stream. If an error is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268817,"byte_end":8268885,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ encountered before the next item, the error is returned instead.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268890,"byte_end":8268958,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268963,"byte_end":8268966,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268971,"byte_end":8268989,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8268994,"byte_end":8268997,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269002,"byte_end":8269015,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ async fn try_next(&mut self) -> Result<Option<T>, E>;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269020,"byte_end":8269077,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269082,"byte_end":8269089,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269094,"byte_end":8269097,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`](StreamExt::next) combinator,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269102,"byte_end":8269166,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ but returns a [`Result<Option<T>, E>`](Result) rather than","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269171,"byte_end":8269233,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ an [`Option<Result<T, E>>`](Option), making for easy use","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269238,"byte_end":8269298,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ with the [`?`](std::ops::Try) operator.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269303,"byte_end":8269346,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269351,"byte_end":8269354,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269359,"byte_end":8269373,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269378,"byte_end":8269381,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269386,"byte_end":8269393,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269398,"byte_end":8269418,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269423,"byte_end":8269446,"line_start":138,"line_end":138,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269451,"byte_end":8269492,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269497,"byte_end":8269500,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(1), Ok(2), Err(\"nope\")]);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269505,"byte_end":8269572,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269577,"byte_end":8269580,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269585,"byte_end":8269638,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269643,"byte_end":8269696,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(\"nope\"));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269701,"byte_end":8269754,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269759,"byte_end":8269766,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269771,"byte_end":8269778,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4867},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270862,"byte_end":8270865,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8269938,"byte_end":8270013,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270018,"byte_end":8270041,"line_start":156,"line_end":156,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270046,"byte_end":8270049,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270054,"byte_end":8270126,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270131,"byte_end":8270195,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270200,"byte_end":8270237,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270242,"byte_end":8270245,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270250,"byte_end":8270326,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270331,"byte_end":8270402,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270407,"byte_end":8270428,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270433,"byte_end":8270436,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270441,"byte_end":8270455,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270460,"byte_end":8270463,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270468,"byte_end":8270475,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270480,"byte_end":8270500,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270505,"byte_end":8270528,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270533,"byte_end":8270574,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270579,"byte_end":8270582,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270587,"byte_end":8270624,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/ let mut stream = stream.map(|x| x + 3);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270629,"byte_end":8270672,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270677,"byte_end":8270680,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270685,"byte_end":8270730,"line_start":176,"line_end":176,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270735,"byte_end":8270780,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270785,"byte_end":8270830,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270835,"byte_end":8270842,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8270847,"byte_end":8270854,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4870},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273475,"byte_end":8273480,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::StreamExt::merge","value":"pub fn merge<U>(Self, U) -> Merge<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Combine two streams into one by interleaving the output of both as it\n is produced.","sig":null,"attributes":[{"value":"/ Combine two streams into one by interleaving the output of both as it","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271009,"byte_end":8271082,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ is produced.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271087,"byte_end":8271103,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271108,"byte_end":8271111,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Values are produced from the merged stream in the order they arrive from","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271116,"byte_end":8271192,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ the two source streams. If both source streams provide values","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271197,"byte_end":8271262,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ simultaneously, the merge stream alternates between them. This provides","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271267,"byte_end":8271342,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ some level of fairness. You should not chain calls to `merge`, as this","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271347,"byte_end":8271421,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ will break the fairness of the merging.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271426,"byte_end":8271469,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271474,"byte_end":8271477,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The merged stream completes once **both** source streams complete. When","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271482,"byte_end":8271557,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ one source stream completes before the other, the merge stream","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271562,"byte_end":8271628,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/ exclusively polls the remaining stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271633,"byte_end":8271676,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271681,"byte_end":8271684,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ For merging multiple streams, consider using [`StreamMap`] instead.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271689,"byte_end":8271760,"line_start":202,"line_end":202,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271765,"byte_end":8271768,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`StreamMap`]: crate::stream::StreamMap","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271773,"byte_end":8271816,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271821,"byte_end":8271824,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271829,"byte_end":8271843,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271848,"byte_end":8271851,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271856,"byte_end":8271863,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271868,"byte_end":8271901,"line_start":209,"line_end":209,"column_start":5,"column_end":38}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271906,"byte_end":8271932,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271937,"byte_end":8271957,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271962,"byte_end":8271965,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8271970,"byte_end":8271998,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272003,"byte_end":8272006,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # /*","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272011,"byte_end":8272019,"line_start":215,"line_end":215,"column_start":5,"column_end":13}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272024,"byte_end":8272042,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ # */","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272047,"byte_end":8272055,"line_start":217,"line_end":217,"column_start":5,"column_end":13}},{"value":"/ # #[tokio::main(basic_scheduler)]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272060,"byte_end":8272097,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272102,"byte_end":8272123,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/ # time::pause();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272128,"byte_end":8272148,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272153,"byte_end":8272200,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272205,"byte_end":8272252,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272257,"byte_end":8272260,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/     let mut rx = rx1.merge(rx2);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272265,"byte_end":8272301,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272306,"byte_end":8272309,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272314,"byte_end":8272347,"line_start":226,"line_end":226,"column_start":5,"column_end":38}},{"value":"/         // Send some values immediately","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272352,"byte_end":8272395,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272400,"byte_end":8272439,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272444,"byte_end":8272483,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272488,"byte_end":8272491,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/         // Let the other task send values","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272496,"byte_end":8272541,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/         time::delay_for(Duration::from_millis(20)).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272546,"byte_end":8272607,"line_start":232,"line_end":232,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272612,"byte_end":8272615,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/         tx1.send(4).await.unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272620,"byte_end":8272659,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272664,"byte_end":8272675,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272680,"byte_end":8272683,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272688,"byte_end":8272721,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/         // Wait for the first task to send values","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272726,"byte_end":8272779,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         time::delay_for(Duration::from_millis(5)).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272784,"byte_end":8272844,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272849,"byte_end":8272852,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272857,"byte_end":8272896,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272901,"byte_end":8272904,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/         time::delay_for(Duration::from_millis(25)).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272909,"byte_end":8272970,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272975,"byte_end":8272978,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Send the final value","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8272983,"byte_end":8273018,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/         tx2.send(5).await.unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273023,"byte_end":8273062,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273067,"byte_end":8273078,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273083,"byte_end":8273086,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(1, rx.next().await.unwrap());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273091,"byte_end":8273138,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(2, rx.next().await.unwrap());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273143,"byte_end":8273190,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(3, rx.next().await.unwrap());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273195,"byte_end":8273242,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(4, rx.next().await.unwrap());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273247,"byte_end":8273294,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(5, rx.next().await.unwrap());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273299,"byte_end":8273346,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273351,"byte_end":8273354,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/    // The merged stream is consumed","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273359,"byte_end":8273398,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/    assert!(rx.next().await.is_none());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273403,"byte_end":8273445,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273450,"byte_end":8273455,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273460,"byte_end":8273467,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4872},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274785,"byte_end":8274791,"line_start":297,"line_end":297,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::StreamExt::filter","value":"pub fn filter<F>(Self, F) -> Filter<Self, F> where F: FnMut(&Self::Item) ->\nbool, Self: Sized","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273636,"byte_end":8273708,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273713,"byte_end":8273727,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273732,"byte_end":8273735,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273740,"byte_end":8273815,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273820,"byte_end":8273866,"line_start":271,"line_end":271,"column_start":5,"column_end":51}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273871,"byte_end":8273943,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ predicate resolves to `false`, then the value","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8273948,"byte_end":8273997,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274002,"byte_end":8274060,"line_start":274,"line_end":274,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274065,"byte_end":8274068,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274073,"byte_end":8274149,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter`] method in the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274154,"byte_end":8274226,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ standard library.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274231,"byte_end":8274252,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274257,"byte_end":8274260,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274265,"byte_end":8274279,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274284,"byte_end":8274287,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274292,"byte_end":8274299,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274304,"byte_end":8274324,"line_start":283,"line_end":283,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274329,"byte_end":8274352,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274357,"byte_end":8274398,"line_start":285,"line_end":285,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274403,"byte_end":8274406,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274411,"byte_end":8274448,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter(|x| x % 2 == 0);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274453,"byte_end":8274503,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274508,"byte_end":8274511,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(2), evens.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274516,"byte_end":8274560,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(4), evens.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274565,"byte_end":8274609,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(6), evens.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274614,"byte_end":8274658,"line_start":292,"line_end":292,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(8), evens.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274663,"byte_end":8274707,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274712,"byte_end":8274753,"line_start":294,"line_end":294,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274758,"byte_end":8274765,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274770,"byte_end":8274777,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4874},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276158,"byte_end":8276168,"line_start":335,"line_end":335,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::StreamExt::filter_map","value":"pub fn filter_map<T, F>(Self, F) -> FilterMap<Self, F> where\nF: FnMut(Self::Item) -> Option<T>, Self: Sized","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8274942,"byte_end":8275017,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided closure.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275022,"byte_end":8275085,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275090,"byte_end":8275093,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275098,"byte_end":8275173,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate `f` resolves to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275178,"byte_end":8275230,"line_start":309,"line_end":309,"column_start":5,"column_end":57}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275235,"byte_end":8275311,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`], then the value will be skipped.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275316,"byte_end":8275376,"line_start":311,"line_end":311,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275381,"byte_end":8275384,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275389,"byte_end":8275465,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter_map`] method in the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275470,"byte_end":8275546,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275551,"byte_end":8275572,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275577,"byte_end":8275580,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275585,"byte_end":8275599,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275604,"byte_end":8275611,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275616,"byte_end":8275636,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275641,"byte_end":8275664,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275669,"byte_end":8275710,"line_start":321,"line_end":321,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275715,"byte_end":8275718,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275723,"byte_end":8275760,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter_map(|x| {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275765,"byte_end":8275808,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275813,"byte_end":8275864,"line_start":325,"line_end":325,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275869,"byte_end":8275876,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275881,"byte_end":8275884,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), evens.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275889,"byte_end":8275933,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(5), evens.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275938,"byte_end":8275982,"line_start":329,"line_end":329,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(7), evens.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8275987,"byte_end":8276031,"line_start":330,"line_end":330,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(9), evens.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276036,"byte_end":8276080,"line_start":331,"line_end":331,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276085,"byte_end":8276126,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276131,"byte_end":8276138,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276143,"byte_end":8276150,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4877},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278300,"byte_end":8278304,"line_start":401,"line_end":401,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Creates a stream which ends after the first `None`.","sig":null,"attributes":[{"value":"/ Creates a stream which ends after the first `None`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276332,"byte_end":8276387,"line_start":343,"line_end":343,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276392,"byte_end":8276395,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ After a stream returns `None`, behavior is undefined. Future calls to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276400,"byte_end":8276473,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ `poll_next` may or may not return `Some(T)` again or they may panic.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276478,"byte_end":8276550,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ `fuse()` adapts a stream, ensuring that after `None` is given, it will","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276555,"byte_end":8276629,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ return `None` forever.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276634,"byte_end":8276660,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276665,"byte_end":8276668,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276673,"byte_end":8276687,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276692,"byte_end":8276695,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276700,"byte_end":8276707,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{Stream, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276712,"byte_end":8276755,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276760,"byte_end":8276763,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276768,"byte_end":8276790,"line_start":355,"line_end":355,"column_start":5,"column_end":27}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276795,"byte_end":8276830,"line_start":356,"line_end":356,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276835,"byte_end":8276838,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ // a stream which alternates between Some and None","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276843,"byte_end":8276897,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/ struct Alternate {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276902,"byte_end":8276924,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/     state: i32,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276929,"byte_end":8276948,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276953,"byte_end":8276958,"line_start":361,"line_end":361,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276963,"byte_end":8276966,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ impl Stream for Alternate {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8276971,"byte_end":8277002,"line_start":363,"line_end":363,"column_start":5,"column_end":36}},{"value":"/     type Item = i32;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277007,"byte_end":8277031,"line_start":364,"line_end":364,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277036,"byte_end":8277039,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<i32>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277044,"byte_end":8277136,"line_start":366,"line_end":366,"column_start":5,"column_end":97}},{"value":"/         let val = self.state;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277141,"byte_end":8277174,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/         self.state = self.state + 1;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277179,"byte_end":8277219,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277224,"byte_end":8277227,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/         // if it's even, Some(i32), else None","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277232,"byte_end":8277281,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/         if val % 2 == 0 {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277286,"byte_end":8277315,"line_start":371,"line_end":371,"column_start":5,"column_end":34}},{"value":"/             Poll::Ready(Some(val))","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277320,"byte_end":8277358,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/         } else {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277363,"byte_end":8277383,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/             Poll::Ready(None)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277388,"byte_end":8277421,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277426,"byte_end":8277439,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277444,"byte_end":8277453,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277458,"byte_end":8277463,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277468,"byte_end":8277471,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277476,"byte_end":8277494,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277499,"byte_end":8277520,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/     let mut stream = Alternate { state: 0 };","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277525,"byte_end":8277573,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277578,"byte_end":8277581,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/     // the stream goes back and forth","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277586,"byte_end":8277627,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(stream.next().await, Some(0));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277632,"byte_end":8277681,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277686,"byte_end":8277732,"line_start":385,"line_end":385,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277737,"byte_end":8277786,"line_start":386,"line_end":386,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277791,"byte_end":8277837,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277842,"byte_end":8277845,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     // however, once it is fused","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277850,"byte_end":8277886,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/     let mut stream = stream.fuse();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277891,"byte_end":8277930,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277935,"byte_end":8277938,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277943,"byte_end":8277992,"line_start":392,"line_end":392,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8277997,"byte_end":8278043,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278048,"byte_end":8278051,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     // it will always return `None` after the first time.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278056,"byte_end":8278117,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278122,"byte_end":8278168,"line_start":396,"line_end":396,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278173,"byte_end":8278219,"line_start":397,"line_end":397,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278224,"byte_end":8278270,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278275,"byte_end":8278280,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278285,"byte_end":8278292,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4878},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279040,"byte_end":8279044,"line_start":428,"line_end":428,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278397,"byte_end":8278468,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278473,"byte_end":8278476,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278481,"byte_end":8278554,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278559,"byte_end":8278594,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278599,"byte_end":8278602,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278607,"byte_end":8278621,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278626,"byte_end":8278629,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278634,"byte_end":8278641,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278646,"byte_end":8278666,"line_start":416,"line_end":416,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278671,"byte_end":8278694,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278699,"byte_end":8278740,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278745,"byte_end":8278748,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take(3);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278753,"byte_end":8278803,"line_start":420,"line_end":420,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278808,"byte_end":8278811,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278816,"byte_end":8278861,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278866,"byte_end":8278911,"line_start":423,"line_end":423,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278916,"byte_end":8278961,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8278966,"byte_end":8279008,"line_start":425,"line_end":425,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279013,"byte_end":8279020,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279025,"byte_end":8279032,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4879},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279937,"byte_end":8279947,"line_start":457,"line_end":457,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::StreamExt::take_while","value":"pub fn take_while<F>(Self, F) -> TakeWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided predicate","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279150,"byte_end":8279213,"line_start":435,"line_end":435,"column_start":5,"column_end":68}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279218,"byte_end":8279241,"line_start":436,"line_end":436,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279246,"byte_end":8279249,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279254,"byte_end":8279329,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279334,"byte_end":8279406,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279411,"byte_end":8279475,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279480,"byte_end":8279483,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279488,"byte_end":8279502,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279507,"byte_end":8279510,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279515,"byte_end":8279522,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279527,"byte_end":8279547,"line_start":445,"line_end":445,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279552,"byte_end":8279575,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279580,"byte_end":8279621,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279626,"byte_end":8279629,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take_while(|x| *x <= 3);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279634,"byte_end":8279700,"line_start":449,"line_end":449,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279705,"byte_end":8279708,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279713,"byte_end":8279758,"line_start":451,"line_end":451,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279763,"byte_end":8279808,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279813,"byte_end":8279858,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279863,"byte_end":8279905,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279910,"byte_end":8279917,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8279922,"byte_end":8279929,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4881},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280644,"byte_end":8280648,"line_start":483,"line_end":483,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Creates a new stream that will skip the `n` first items of the\n underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream that will skip the `n` first items of the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280104,"byte_end":8280170,"line_start":465,"line_end":465,"column_start":5,"column_end":71}},{"value":"/ underlying stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280175,"byte_end":8280197,"line_start":466,"line_end":466,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280202,"byte_end":8280205,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280210,"byte_end":8280224,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280229,"byte_end":8280232,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280237,"byte_end":8280244,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280249,"byte_end":8280269,"line_start":471,"line_end":471,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280274,"byte_end":8280297,"line_start":472,"line_end":472,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280302,"byte_end":8280343,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280348,"byte_end":8280351,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).skip(7);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280356,"byte_end":8280406,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280411,"byte_end":8280414,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(8), stream.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280419,"byte_end":8280464,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(9), stream.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280469,"byte_end":8280514,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(10), stream.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280519,"byte_end":8280565,"line_start":479,"line_end":479,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280570,"byte_end":8280612,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280617,"byte_end":8280624,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280629,"byte_end":8280636,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4882},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281626,"byte_end":8281636,"line_start":513,"line_end":513,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::StreamExt::skip_while","value":"pub fn skip_while<F>(Self, F) -> SkipWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Skip elements from the underlying stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements from the underlying stream while the provided predicate","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280754,"byte_end":8280827,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280832,"byte_end":8280855,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280860,"byte_end":8280863,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This function, like [`Iterator::skip_while`], will ignore elemets from the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280868,"byte_end":8280946,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8280951,"byte_end":8281023,"line_start":494,"line_end":494,"column_start":5,"column_end":77}},{"value":"/ returns false, the rest of the elements will be yielded.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281028,"byte_end":8281088,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281093,"byte_end":8281096,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`Iterator::skip_while`]: std::iter::Iterator::skip_while()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281101,"byte_end":8281164,"line_start":497,"line_end":497,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281169,"byte_end":8281172,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281177,"byte_end":8281191,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281196,"byte_end":8281199,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281204,"byte_end":8281211,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281216,"byte_end":8281236,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281241,"byte_end":8281264,"line_start":503,"line_end":503,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281269,"byte_end":8281310,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"/ let mut stream = stream::iter(vec![1,2,3,4,1]).skip_while(|x| *x < 3);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281315,"byte_end":8281389,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281394,"byte_end":8281397,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281402,"byte_end":8281447,"line_start":507,"line_end":507,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(4), stream.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281452,"byte_end":8281497,"line_start":508,"line_end":508,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281502,"byte_end":8281547,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281552,"byte_end":8281594,"line_start":510,"line_end":510,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281599,"byte_end":8281606,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281611,"byte_end":8281618,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4884},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283215,"byte_end":8283218,"line_start":568,"line_end":568,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if every element of the stream matches a predicate.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281793,"byte_end":8281854,"line_start":521,"line_end":521,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281859,"byte_end":8281862,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ `all()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281867,"byte_end":8281937,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if they all return","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8281942,"byte_end":8282012,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/ `true`, then so does `all`. If any of them return `false`, it","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282017,"byte_end":8282082,"line_start":525,"line_end":525,"column_start":5,"column_end":70}},{"value":"/ returns `false`. An empty stream returns `true`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282087,"byte_end":8282139,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282144,"byte_end":8282147,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ `all()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282152,"byte_end":8282224,"line_start":528,"line_end":528,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `false`, given that no matter what else happens,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282229,"byte_end":8282303,"line_start":529,"line_end":529,"column_start":5,"column_end":79}},{"value":"/ the result will also be `false`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282308,"byte_end":8282344,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282349,"byte_end":8282352,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `true`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282357,"byte_end":8282392,"line_start":532,"line_end":532,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282397,"byte_end":8282400,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282405,"byte_end":8282419,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282424,"byte_end":8282427,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282432,"byte_end":8282448,"line_start":536,"line_end":536,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282453,"byte_end":8282456,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282461,"byte_end":8282468,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282473,"byte_end":8282493,"line_start":539,"line_end":539,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282498,"byte_end":8282521,"line_start":540,"line_end":540,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282526,"byte_end":8282567,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282572,"byte_end":8282575,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282580,"byte_end":8282602,"line_start":543,"line_end":543,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282607,"byte_end":8282610,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).all(|&x| x > 0).await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282615,"byte_end":8282667,"line_start":545,"line_end":545,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282672,"byte_end":8282675,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).all(|&x| x > 2).await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282680,"byte_end":8282733,"line_start":547,"line_end":547,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282738,"byte_end":8282745,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282750,"byte_end":8282757,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282762,"byte_end":8282765,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `false`:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282770,"byte_end":8282804,"line_start":551,"line_end":551,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282809,"byte_end":8282812,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282817,"byte_end":8282824,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282829,"byte_end":8282849,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282854,"byte_end":8282877,"line_start":555,"line_end":555,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282882,"byte_end":8282923,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282928,"byte_end":8282931,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282936,"byte_end":8282958,"line_start":558,"line_end":558,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282963,"byte_end":8282966,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8282971,"byte_end":8283007,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283012,"byte_end":8283015,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ assert!(!iter.all(|&x| x != 2).await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283020,"byte_end":8283062,"line_start":562,"line_end":562,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283067,"byte_end":8283070,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283075,"byte_end":8283134,"line_start":564,"line_end":564,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&3));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283139,"byte_end":8283183,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283188,"byte_end":8283195,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283200,"byte_end":8283207,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4886},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284743,"byte_end":8284746,"line_start":621,"line_end":621,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if any element of the stream matches a predicate.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283383,"byte_end":8283442,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283447,"byte_end":8283450,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `any()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283455,"byte_end":8283525,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if any of them return","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283530,"byte_end":8283603,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ `true`, then so does `any()`. If they all return `false`, it","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283608,"byte_end":8283672,"line_start":580,"line_end":580,"column_start":5,"column_end":69}},{"value":"/ returns `false`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283677,"byte_end":8283697,"line_start":581,"line_end":581,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283702,"byte_end":8283705,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ `any()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283710,"byte_end":8283782,"line_start":583,"line_end":583,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `true`, given that no matter what else happens,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283787,"byte_end":8283860,"line_start":584,"line_end":584,"column_start":5,"column_end":78}},{"value":"/ the result will also be `true`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283865,"byte_end":8283900,"line_start":585,"line_end":585,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283905,"byte_end":8283908,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `false`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283913,"byte_end":8283949,"line_start":587,"line_end":587,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283954,"byte_end":8283957,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283962,"byte_end":8283978,"line_start":589,"line_end":589,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283983,"byte_end":8283986,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8283991,"byte_end":8283998,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284003,"byte_end":8284023,"line_start":592,"line_end":592,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284028,"byte_end":8284051,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284056,"byte_end":8284097,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284102,"byte_end":8284105,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284110,"byte_end":8284132,"line_start":596,"line_end":596,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284137,"byte_end":8284140,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).any(|&x| x > 0).await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284145,"byte_end":8284197,"line_start":598,"line_end":598,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284202,"byte_end":8284205,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).any(|&x| x > 5).await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284210,"byte_end":8284263,"line_start":600,"line_end":600,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284268,"byte_end":8284275,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284280,"byte_end":8284287,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284292,"byte_end":8284295,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `true`:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284300,"byte_end":8284333,"line_start":604,"line_end":604,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284338,"byte_end":8284341,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284346,"byte_end":8284353,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284358,"byte_end":8284378,"line_start":607,"line_end":607,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284383,"byte_end":8284406,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284411,"byte_end":8284452,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284457,"byte_end":8284460,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284465,"byte_end":8284487,"line_start":611,"line_end":611,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284492,"byte_end":8284495,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284500,"byte_end":8284536,"line_start":613,"line_end":613,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284541,"byte_end":8284544,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert!(iter.any(|&x| x != 2).await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284549,"byte_end":8284590,"line_start":615,"line_end":615,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284595,"byte_end":8284598,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284603,"byte_end":8284662,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&2));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284667,"byte_end":8284711,"line_start":618,"line_end":618,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284716,"byte_end":8284723,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284728,"byte_end":8284735,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4888},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285889,"byte_end":8285894,"line_start":656,"line_end":656,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Combine two streams into one by first returning all values from the\n first stream then all values from the second stream.","sig":null,"attributes":[{"value":"/ Combine two streams into one by first returning all values from the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284911,"byte_end":8284982,"line_start":629,"line_end":629,"column_start":5,"column_end":76}},{"value":"/ first stream then all values from the second stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8284987,"byte_end":8285043,"line_start":630,"line_end":630,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285048,"byte_end":8285051,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ As long as `self` still has values to emit, no values from `other` are","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285056,"byte_end":8285130,"line_start":632,"line_end":632,"column_start":5,"column_end":79}},{"value":"/ emitted, even if some are ready.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285135,"byte_end":8285171,"line_start":633,"line_end":633,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285176,"byte_end":8285179,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285184,"byte_end":8285198,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285203,"byte_end":8285206,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285211,"byte_end":8285218,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285223,"byte_end":8285264,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285269,"byte_end":8285272,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285277,"byte_end":8285295,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285300,"byte_end":8285321,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/     let one = stream::iter(vec![1, 2, 3]);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285326,"byte_end":8285372,"line_start":642,"line_end":642,"column_start":5,"column_end":51}},{"value":"/     let two = stream::iter(vec![4, 5, 6]);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285377,"byte_end":8285423,"line_start":643,"line_end":643,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285428,"byte_end":8285431,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/     let mut stream = one.chain(two);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285436,"byte_end":8285476,"line_start":645,"line_end":645,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285481,"byte_end":8285484,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285489,"byte_end":8285538,"line_start":647,"line_end":647,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285543,"byte_end":8285592,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285597,"byte_end":8285646,"line_start":649,"line_end":649,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285651,"byte_end":8285700,"line_start":650,"line_end":650,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285705,"byte_end":8285754,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285759,"byte_end":8285808,"line_start":652,"line_end":652,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285813,"byte_end":8285859,"line_start":653,"line_end":653,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285864,"byte_end":8285869,"line_start":654,"line_end":654,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8285874,"byte_end":8285881,"line_start":655,"line_end":655,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4890},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286487,"byte_end":8286491,"line_start":680,"line_end":680,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, B, F> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" A combinator that applies a function to every element in a stream\n producing a single, final value.","sig":null,"attributes":[{"value":"/ A combinator that applies a function to every element in a stream","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286050,"byte_end":8286119,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ producing a single, final value.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286124,"byte_end":8286160,"line_start":665,"line_end":665,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286165,"byte_end":8286168,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286173,"byte_end":8286187,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/ Basic usage:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286192,"byte_end":8286208,"line_start":668,"line_end":668,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286213,"byte_end":8286220,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286225,"byte_end":8286245,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286250,"byte_end":8286273,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, *};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286278,"byte_end":8286311,"line_start":672,"line_end":672,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286316,"byte_end":8286319,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let s = stream::iter(vec![1u8, 2, 3]);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286324,"byte_end":8286366,"line_start":674,"line_end":674,"column_start":5,"column_end":47}},{"value":"/ let sum = s.fold(0, |acc, x| acc + x).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286371,"byte_end":8286419,"line_start":675,"line_end":675,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286424,"byte_end":8286427,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 6);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286432,"byte_end":8286455,"line_start":677,"line_end":677,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286460,"byte_end":8286467,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286472,"byte_end":8286479,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4893},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288804,"byte_end":8288811,"line_start":752,"line_end":752,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::StreamExt::collect","value":"pub fn collect<T>(Self) -> Collect<Self, T> where T: FromStream<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Drain stream pushing all emitted values into a collection.","sig":null,"attributes":[{"value":"/ Drain stream pushing all emitted values into a collection.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286670,"byte_end":8286732,"line_start":688,"line_end":688,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286737,"byte_end":8286740,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ `collect` streams all values, awaiting as needed. Values are pushed into","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286745,"byte_end":8286821,"line_start":690,"line_end":690,"column_start":5,"column_end":81}},{"value":"/ a collection. A number of different target collection types are","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286826,"byte_end":8286893,"line_start":691,"line_end":691,"column_start":5,"column_end":72}},{"value":"/ supported, including [`Vec`](std::vec::Vec),","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286898,"byte_end":8286946,"line_start":692,"line_end":692,"column_start":5,"column_end":53}},{"value":"/ [`String`](std::string::String), and [`Bytes`](bytes::Bytes).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8286951,"byte_end":8287016,"line_start":693,"line_end":693,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287021,"byte_end":8287024,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # `Result`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287029,"byte_end":8287043,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287048,"byte_end":8287051,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ `collect()` can also be used with streams of type `Result<T, E>` where","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287056,"byte_end":8287130,"line_start":697,"line_end":697,"column_start":5,"column_end":79}},{"value":"/ `T: FromStream<_>`. In this case, `collect()` will stream as long as","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287135,"byte_end":8287207,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/ values yielded from the stream are `Ok(_)`. If `Err(_)` is encountered,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287212,"byte_end":8287287,"line_start":699,"line_end":699,"column_start":5,"column_end":80}},{"value":"/ streaming is terminated and `collect()` returns the `Err`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287292,"byte_end":8287354,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287359,"byte_end":8287362,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287367,"byte_end":8287378,"line_start":702,"line_end":702,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287383,"byte_end":8287386,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ `FromStream` is currently a sealed trait. Stabilization is pending","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287391,"byte_end":8287461,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287466,"byte_end":8287504,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287509,"byte_end":8287512,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287517,"byte_end":8287531,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287536,"byte_end":8287539,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287544,"byte_end":8287560,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287565,"byte_end":8287568,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287573,"byte_end":8287580,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287585,"byte_end":8287626,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287631,"byte_end":8287634,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287639,"byte_end":8287657,"line_start":714,"line_end":714,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287662,"byte_end":8287683,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/     let doubled: Vec<i32> =","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287688,"byte_end":8287719,"line_start":716,"line_end":716,"column_start":5,"column_end":36}},{"value":"/         stream::iter(vec![1, 2, 3])","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287724,"byte_end":8287763,"line_start":717,"line_end":717,"column_start":5,"column_end":44}},{"value":"/             .map(|x| x * 2)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287768,"byte_end":8287799,"line_start":718,"line_end":718,"column_start":5,"column_end":36}},{"value":"/             .collect()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287804,"byte_end":8287830,"line_start":719,"line_end":719,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287835,"byte_end":8287858,"line_start":720,"line_end":720,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287863,"byte_end":8287866,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(vec![2, 4, 6], doubled);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287871,"byte_end":8287914,"line_start":722,"line_end":722,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287919,"byte_end":8287924,"line_start":723,"line_end":723,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287929,"byte_end":8287936,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287941,"byte_end":8287944,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Collecting a stream of `Result` values","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287949,"byte_end":8287991,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8287996,"byte_end":8287999,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288004,"byte_end":8288011,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288016,"byte_end":8288057,"line_start":729,"line_end":729,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288062,"byte_end":8288065,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288070,"byte_end":8288088,"line_start":731,"line_end":731,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288093,"byte_end":8288114,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/     // A stream containing only `Ok` values will be collected","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288119,"byte_end":8288184,"line_start":733,"line_end":733,"column_start":5,"column_end":70}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288189,"byte_end":8288233,"line_start":734,"line_end":734,"column_start":5,"column_end":49}},{"value":"/         stream::iter(vec![Ok(1), Ok(2), Ok(3)])","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288238,"byte_end":8288289,"line_start":735,"line_end":735,"column_start":5,"column_end":56}},{"value":"/             .collect()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288294,"byte_end":8288320,"line_start":736,"line_end":736,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288325,"byte_end":8288348,"line_start":737,"line_end":737,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288353,"byte_end":8288356,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(vec![1, 2, 3]), values);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288361,"byte_end":8288407,"line_start":739,"line_end":739,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288412,"byte_end":8288415,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/     // A stream containing `Err` values will return the first error.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288420,"byte_end":8288492,"line_start":741,"line_end":741,"column_start":5,"column_end":77}},{"value":"/     let results = vec![Ok(1), Err(\"no\"), Ok(2), Ok(3), Err(\"nein\")];","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288497,"byte_end":8288569,"line_start":742,"line_end":742,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288574,"byte_end":8288577,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288582,"byte_end":8288626,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/         stream::iter(results)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288631,"byte_end":8288664,"line_start":745,"line_end":745,"column_start":5,"column_end":38}},{"value":"/             .collect()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288669,"byte_end":8288695,"line_start":746,"line_end":746,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288700,"byte_end":8288723,"line_start":747,"line_end":747,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288728,"byte_end":8288731,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Err(\"no\"), values);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288736,"byte_end":8288774,"line_start":749,"line_end":749,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288779,"byte_end":8288784,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288789,"byte_end":8288796,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4895},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8291466,"byte_end":8291473,"line_start":816,"line_end":816,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Applies a per-item timeout to the passed stream.","sig":null,"attributes":[{"value":"/ Applies a per-item timeout to the passed stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8288951,"byte_end":8289003,"line_start":760,"line_end":760,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289008,"byte_end":8289011,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ `timeout()` takes a `Duration` that represents the maximum amount of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289016,"byte_end":8289088,"line_start":762,"line_end":762,"column_start":5,"column_end":77}},{"value":"/ time each element of the stream has to complete before timing out.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289093,"byte_end":8289163,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289168,"byte_end":8289171,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ If the wrapped stream yields a value before the deadline is reached, the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289176,"byte_end":8289252,"line_start":765,"line_end":765,"column_start":5,"column_end":81}},{"value":"/ value is returned. Otherwise, an error is returned. The caller may decide","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289257,"byte_end":8289334,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/ to continue consuming the stream and will eventually get the next source","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289339,"byte_end":8289415,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ stream value once it becomes available.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289420,"byte_end":8289463,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289468,"byte_end":8289471,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289476,"byte_end":8289487,"line_start":770,"line_end":770,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289492,"byte_end":8289495,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This function consumes the stream passed into it and returns a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289500,"byte_end":8289566,"line_start":772,"line_end":772,"column_start":5,"column_end":71}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289571,"byte_end":8289597,"line_start":773,"line_end":773,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289602,"byte_end":8289605,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Polling the returned stream will continue to poll the inner stream even","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289610,"byte_end":8289685,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ if one or more items time out.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289690,"byte_end":8289724,"line_start":776,"line_end":776,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289729,"byte_end":8289732,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289737,"byte_end":8289751,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289756,"byte_end":8289759,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Suppose we have a stream `int_stream` that yields 3 numbers (1, 2, 3):","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289764,"byte_end":8289838,"line_start":780,"line_end":780,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289843,"byte_end":8289846,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289851,"byte_end":8289858,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289863,"byte_end":8289883,"line_start":783,"line_end":783,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289888,"byte_end":8289911,"line_start":784,"line_end":784,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289916,"byte_end":8289957,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289962,"byte_end":8289990,"line_start":786,"line_end":786,"column_start":5,"column_end":33}},{"value":"/ # let int_stream = stream::iter(1..=3);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8289995,"byte_end":8290038,"line_start":787,"line_end":787,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290043,"byte_end":8290046,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ let mut int_stream = int_stream.timeout(Duration::from_secs(1));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290051,"byte_end":8290119,"line_start":789,"line_end":789,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290124,"byte_end":8290127,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ // When no items time out, we get the 3 elements in succession:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290132,"byte_end":8290199,"line_start":791,"line_end":791,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290204,"byte_end":8290261,"line_start":792,"line_end":792,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290266,"byte_end":8290323,"line_start":793,"line_end":793,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290328,"byte_end":8290385,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290390,"byte_end":8290444,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290449,"byte_end":8290452,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ // If the second item times out, we get an error and continue polling the stream:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290457,"byte_end":8290542,"line_start":797,"line_end":797,"column_start":5,"column_end":90}},{"value":"/ # let mut int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290547,"byte_end":8290623,"line_start":798,"line_end":798,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290628,"byte_end":8290685,"line_start":799,"line_end":799,"column_start":5,"column_end":62}},{"value":"/ assert!(int_stream.try_next().await.is_err());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290690,"byte_end":8290740,"line_start":800,"line_end":800,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290745,"byte_end":8290802,"line_start":801,"line_end":801,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290807,"byte_end":8290864,"line_start":802,"line_end":802,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290869,"byte_end":8290923,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290928,"byte_end":8290931,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ // If we want to stop consuming the source stream the first time an","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8290936,"byte_end":8291007,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ // element times out, we can use the `take_while` operator:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8291012,"byte_end":8291075,"line_start":806,"line_end":806,"column_start":5,"column_end":68}},{"value":"/ # let int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8291080,"byte_end":8291152,"line_start":807,"line_end":807,"column_start":5,"column_end":77}},{"value":"/ let mut int_stream = int_stream.take_while(Result::is_ok);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8291157,"byte_end":8291219,"line_start":808,"line_end":808,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8291224,"byte_end":8291227,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8291232,"byte_end":8291289,"line_start":810,"line_end":810,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8291294,"byte_end":8291348,"line_start":811,"line_end":811,"column_start":5,"column_end":59}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8291353,"byte_end":8291360,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8291365,"byte_end":8291372,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"time\"))","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8291377,"byte_end":8291406,"line_start":814,"line_end":814,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":5393},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8456895,"byte_end":8456901,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5898},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":5900},{"krate":0,"index":5901},{"krate":0,"index":5902},{"krate":0,"index":5903},{"krate":0,"index":5907},{"krate":0,"index":5908},{"krate":0,"index":5914},{"krate":0,"index":5925},{"krate":0,"index":6003},{"krate":0,"index":6004},{"krate":0,"index":6005},{"krate":0,"index":6006},{"krate":0,"index":6067}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21559,"byte_end":21586,"line_start":247,"line_end":247,"column_start":13,"column_end":40}},{"value":"! Asynchronous green-threads.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8529183,"byte_end":8529214,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8529215,"byte_end":8529218,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! ## What are Tasks?","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8529219,"byte_end":8529241,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8529242,"byte_end":8529245,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8529246,"byte_end":8529327,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"! to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8529328,"byte_end":8529408,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8529409,"byte_end":8529489,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"! [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8529490,"byte_end":8529564,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"! coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8529565,"byte_end":8529640,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"! something similar.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8529641,"byte_end":8529663,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8529664,"byte_end":8529667,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Key points about tasks include:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8529668,"byte_end":8529703,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8529704,"byte_end":8529707,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8529708,"byte_end":8529782,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"!   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8529783,"byte_end":8529862,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"!   between tasks does not require a context switch and has fairly low","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8529863,"byte_end":8529935,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"!   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8529936,"byte_end":8530011,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"!   quite cheap, especially compared to OS threads.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8530012,"byte_end":8530065,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8530066,"byte_end":8530069,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8530070,"byte_end":8530147,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"!   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8530148,"byte_end":8530221,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"!   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8530222,"byte_end":8530301,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"!   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8530302,"byte_end":8530380,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"!   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8530381,"byte_end":8530453,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"!   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8530454,"byte_end":8530529,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"!   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8530530,"byte_end":8530604,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"!   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8530605,"byte_end":8530680,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"!   executing the next task.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8530681,"byte_end":8530711,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8530712,"byte_end":8530715,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8530716,"byte_end":8530794,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"!   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8530795,"byte_end":8530870,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"!   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8530871,"byte_end":8530948,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"!   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8530949,"byte_end":8531028,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"!   should generally not perform system calls or other operations that could","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531029,"byte_end":8531107,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"!   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531108,"byte_end":8531183,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"!   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531184,"byte_end":8531259,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"!   running blocking operations in an asynchronous context.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531260,"byte_end":8531321,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531322,"byte_end":8531325,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! [rt]: crate::runtime","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531326,"byte_end":8531350,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"! [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531351,"byte_end":8531415,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"! [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531416,"byte_end":8531476,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"! [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531477,"byte_end":8531566,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"! [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531567,"byte_end":8531655,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531656,"byte_end":8531659,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! ## Working with Tasks","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531660,"byte_end":8531685,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531686,"byte_end":8531689,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! This module provides the following APIs for working with tasks:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531690,"byte_end":8531757,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531758,"byte_end":8531761,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! ### Spawning","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531762,"byte_end":8531778,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531779,"byte_end":8531782,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531783,"byte_end":8531862,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"! function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531863,"byte_end":8531942,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"! [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8531943,"byte_end":8532022,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"! [future], and creates a new task to run that work concurrently:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532023,"byte_end":8532090,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532091,"byte_end":8532094,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532095,"byte_end":8532102,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532103,"byte_end":8532123,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532124,"byte_end":8532127,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! # async fn doc() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532128,"byte_end":8532150,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"! task::spawn(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532151,"byte_end":8532174,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"!     // perform some work here...","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532175,"byte_end":8532211,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"! });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532212,"byte_end":8532219,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532220,"byte_end":8532227,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532228,"byte_end":8532235,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532236,"byte_end":8532239,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532240,"byte_end":8532319,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"! A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532320,"byte_end":8532398,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"! the spawned task. For example:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532399,"byte_end":8532433,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532434,"byte_end":8532437,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532438,"byte_end":8532445,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532446,"byte_end":8532466,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532467,"byte_end":8532470,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532471,"byte_end":8532551,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"! let join = task::spawn(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532552,"byte_end":8532586,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"!     // ...","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532587,"byte_end":8532601,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"!     \"hello world!\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532602,"byte_end":8532624,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"! });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532625,"byte_end":8532632,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532633,"byte_end":8532636,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! // ...","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532637,"byte_end":8532647,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532648,"byte_end":8532651,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! // Await the result of the spawned task.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532652,"byte_end":8532696,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"! let result = join.await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532697,"byte_end":8532726,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"hello world!\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532727,"byte_end":8532766,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"! # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532767,"byte_end":8532779,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532780,"byte_end":8532787,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532788,"byte_end":8532795,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532796,"byte_end":8532799,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532800,"byte_end":8532880,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"! task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532881,"byte_end":8532957,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"! example:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532958,"byte_end":8532970,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532971,"byte_end":8532974,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532975,"byte_end":8532982,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8532983,"byte_end":8533003,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533004,"byte_end":8533007,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533008,"byte_end":8533046,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"! let join = task::spawn(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533047,"byte_end":8533081,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"!     panic!(\"something bad happened!\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533082,"byte_end":8533123,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"! });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533124,"byte_end":8533131,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533132,"byte_end":8533135,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! // The returned result indicates that the task failed.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533136,"byte_end":8533194,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"! assert!(join.await.is_err());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533195,"byte_end":8533228,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"! # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533229,"byte_end":8533236,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533237,"byte_end":8533244,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533245,"byte_end":8533248,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533249,"byte_end":8533322,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"! feature flag is enabled.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533323,"byte_end":8533351,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533352,"byte_end":8533355,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533356,"byte_end":8533397,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"! [future]: std::future::Future","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533398,"byte_end":8533431,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"! [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533432,"byte_end":8533478,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533479,"byte_end":8533522,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"! [thread_join]: std::thread::JoinHandle","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533523,"byte_end":8533565,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"! [`JoinError`]: crate::task::JoinError","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533566,"byte_end":8533607,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533608,"byte_end":8533611,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ### Blocking and Yielding","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533612,"byte_end":8533641,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533642,"byte_end":8533645,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533646,"byte_end":8533726,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"! operations that can block. A blocking operation performed in a task running","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533727,"byte_end":8533806,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"! on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533807,"byte_end":8533886,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"! preventing other tasks from running.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533887,"byte_end":8533927,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533928,"byte_end":8533931,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8533932,"byte_end":8534006,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"! asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534007,"byte_end":8534087,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534088,"byte_end":8534091,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! #### spawn_blocking","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534092,"byte_end":8534115,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534116,"byte_end":8534119,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534120,"byte_end":8534200,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"! discussed in the previous section, but rather than spawning an","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534201,"byte_end":8534267,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"! _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534268,"byte_end":8534335,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"! _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534336,"byte_end":8534410,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"! example:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534411,"byte_end":8534423,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534424,"byte_end":8534427,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534428,"byte_end":8534435,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534436,"byte_end":8534456,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534457,"byte_end":8534460,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534461,"byte_end":8534484,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"! task::spawn_blocking(|| {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534485,"byte_end":8534514,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534515,"byte_end":8534577,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"! });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534578,"byte_end":8534585,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534586,"byte_end":8534593,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534594,"byte_end":8534601,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534602,"byte_end":8534605,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534606,"byte_end":8534680,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"! which we can use to await the result of the blocking operation:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534681,"byte_end":8534748,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534749,"byte_end":8534752,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534753,"byte_end":8534764,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"! # use tokio::task;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534765,"byte_end":8534787,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"! # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534788,"byte_end":8534852,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"! let join = task::spawn_blocking(|| {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534853,"byte_end":8534893,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534894,"byte_end":8534956,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534957,"byte_end":8534985,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534986,"byte_end":8534993,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534994,"byte_end":8534997,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! let result = join.await?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8534998,"byte_end":8535027,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535028,"byte_end":8535073,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"! # Ok(())","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535074,"byte_end":8535086,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535087,"byte_end":8535094,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535095,"byte_end":8535102,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535103,"byte_end":8535106,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"! #### block_in_place","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535107,"byte_end":8535130,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535131,"byte_end":8535134,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"! When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535135,"byte_end":8535215,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"! function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535216,"byte_end":8535290,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"! allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535291,"byte_end":8535367,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"! `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535368,"byte_end":8535442,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"! _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535443,"byte_end":8535522,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"! that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535523,"byte_end":8535605,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"! context switches.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535606,"byte_end":8535627,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535628,"byte_end":8535631,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! For example:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535632,"byte_end":8535648,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535649,"byte_end":8535652,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535653,"byte_end":8535660,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535661,"byte_end":8535681,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535682,"byte_end":8535685,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535686,"byte_end":8535709,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"! let result = task::block_in_place(|| {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535710,"byte_end":8535752,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535753,"byte_end":8535815,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535816,"byte_end":8535844,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535845,"byte_end":8535852,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535853,"byte_end":8535856,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535857,"byte_end":8535902,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"! # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535903,"byte_end":8535910,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535911,"byte_end":8535918,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535919,"byte_end":8535922,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"! #### yield_now","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535923,"byte_end":8535941,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535942,"byte_end":8535945,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"! In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8535946,"byte_end":8536020,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"! that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536021,"byte_end":8536099,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"! and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536100,"byte_end":8536176,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"! Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536177,"byte_end":8536234,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"! scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536235,"byte_end":8536313,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"! to execute. For example:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536314,"byte_end":8536342,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536343,"byte_end":8536346,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536347,"byte_end":8536358,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"! use tokio::task;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536359,"byte_end":8536379,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536380,"byte_end":8536383,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536384,"byte_end":8536422,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"! async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536423,"byte_end":8536434,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"!     task::spawn(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536435,"byte_end":8536462,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"!         // ...","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536463,"byte_end":8536481,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"!         println!(\"spawned task done!\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536482,"byte_end":8536524,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"!     });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536525,"byte_end":8536536,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536537,"byte_end":8536540,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"!     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536541,"byte_end":8536608,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"!     task::yield_now().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536609,"byte_end":8536641,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"!     println!(\"main task done!\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536642,"byte_end":8536678,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536679,"byte_end":8536684,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"! # .await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536685,"byte_end":8536698,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"! # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536699,"byte_end":8536706,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536707,"byte_end":8536714,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536715,"byte_end":8536718,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"! [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536719,"byte_end":8536776,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"! [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536777,"byte_end":8536834,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"! [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536835,"byte_end":8536894,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"! [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536895,"byte_end":8536944,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"! [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":8536945,"byte_end":8536994,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":5915},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/spawn.rs","byte_start":8541077,"byte_end":8541082,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":5917},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":8542155,"byte_end":8542164,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":8542074,"byte_end":8542137,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6068},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8546562,"byte_end":8546570,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":6069},{"krate":0,"index":6070},{"krate":0,"index":6071}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22242,"byte_end":22269,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":6077},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8548582,"byte_end":8548593,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22242,"byte_end":22269,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5958},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8549490,"byte_end":8549493,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8549445,"byte_end":8549478,"line_start":222,"line_end":222,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5959},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8551198,"byte_end":8551209,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550035,"byte_end":8550085,"line_start":240,"line_end":240,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550090,"byte_end":8550093,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550098,"byte_end":8550158,"line_start":242,"line_end":242,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550163,"byte_end":8550166,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550171,"byte_end":8550243,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550248,"byte_end":8550318,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550323,"byte_end":8550334,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550339,"byte_end":8550359,"line_start":247,"line_end":247,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550364,"byte_end":8550367,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550372,"byte_end":8550390,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550395,"byte_end":8550416,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550421,"byte_end":8550463,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550468,"byte_end":8550471,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550476,"byte_end":8550548,"line_start":253,"line_end":253,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550553,"byte_end":8550606,"line_start":254,"line_end":254,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550611,"byte_end":8550644,"line_start":255,"line_end":255,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550649,"byte_end":8550666,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550671,"byte_end":8550682,"line_start":257,"line_end":257,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550687,"byte_end":8550690,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550695,"byte_end":8550729,"line_start":259,"line_end":259,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550734,"byte_end":8550770,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550775,"byte_end":8550793,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550798,"byte_end":8550815,"line_start":262,"line_end":262,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550820,"byte_end":8550823,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550828,"byte_end":8550899,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550904,"byte_end":8550954,"line_start":265,"line_end":265,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550959,"byte_end":8550992,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8550997,"byte_end":8551014,"line_start":267,"line_end":267,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8551019,"byte_end":8551030,"line_start":268,"line_end":268,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8551035,"byte_end":8551038,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8551043,"byte_end":8551079,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8551084,"byte_end":8551102,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8551107,"byte_end":8551124,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8551129,"byte_end":8551134,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8551139,"byte_end":8551146,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8551151,"byte_end":8551186,"line_start":275,"line_end":275,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5961},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553944,"byte_end":8553952,"line_start":349,"line_end":349,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &mut crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8551552,"byte_end":8551626,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8551631,"byte_end":8551690,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8551695,"byte_end":8551698,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8551703,"byte_end":8551770,"line_start":290,"line_end":290,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8551775,"byte_end":8551848,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8551853,"byte_end":8551929,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8551934,"byte_end":8552014,"line_start":293,"line_end":293,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552019,"byte_end":8552038,"line_start":294,"line_end":294,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552043,"byte_end":8552046,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552051,"byte_end":8552117,"line_start":296,"line_end":296,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552122,"byte_end":8552125,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552130,"byte_end":8552142,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552147,"byte_end":8552150,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552155,"byte_end":8552227,"line_start":300,"line_end":300,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552232,"byte_end":8552305,"line_start":301,"line_end":301,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552310,"byte_end":8552313,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552318,"byte_end":8552329,"line_start":303,"line_end":303,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552334,"byte_end":8552337,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552342,"byte_end":8552416,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552421,"byte_end":8552496,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552501,"byte_end":8552576,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552581,"byte_end":8552658,"line_start":308,"line_end":308,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552663,"byte_end":8552666,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552671,"byte_end":8552704,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552709,"byte_end":8552728,"line_start":311,"line_end":311,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552733,"byte_end":8552765,"line_start":312,"line_end":312,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552770,"byte_end":8552790,"line_start":313,"line_end":313,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552795,"byte_end":8552798,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552803,"byte_end":8552844,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552849,"byte_end":8552887,"line_start":316,"line_end":316,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552892,"byte_end":8552927,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552932,"byte_end":8552976,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8552981,"byte_end":8553040,"line_start":319,"line_end":319,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553045,"byte_end":8553067,"line_start":320,"line_end":320,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553072,"byte_end":8553087,"line_start":321,"line_end":321,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553092,"byte_end":8553110,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553115,"byte_end":8553126,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553131,"byte_end":8553159,"line_start":324,"line_end":324,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553164,"byte_end":8553170,"line_start":325,"line_end":325,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553175,"byte_end":8553182,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553187,"byte_end":8553221,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553226,"byte_end":8553233,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553238,"byte_end":8553270,"line_start":329,"line_end":329,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553275,"byte_end":8553295,"line_start":330,"line_end":330,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553300,"byte_end":8553303,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553308,"byte_end":8553349,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553354,"byte_end":8553392,"line_start":333,"line_end":333,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553397,"byte_end":8553432,"line_start":334,"line_end":334,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553437,"byte_end":8553481,"line_start":335,"line_end":335,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553486,"byte_end":8553545,"line_start":336,"line_end":336,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553550,"byte_end":8553572,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553577,"byte_end":8553598,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553603,"byte_end":8553621,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553626,"byte_end":8553637,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553642,"byte_end":8553670,"line_start":341,"line_end":341,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553675,"byte_end":8553681,"line_start":342,"line_end":342,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553686,"byte_end":8553693,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553698,"byte_end":8553701,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553706,"byte_end":8553741,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553746,"byte_end":8553813,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553818,"byte_end":8553873,"line_start":347,"line_end":347,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8553878,"byte_end":8553932,"line_start":348,"line_end":348,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5963},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8555203,"byte_end":8555212,"line_start":384,"line_end":384,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<'_, F>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554111,"byte_end":8554181,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554186,"byte_end":8554189,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554194,"byte_end":8554264,"line_start":358,"line_end":358,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554269,"byte_end":8554345,"line_start":359,"line_end":359,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554350,"byte_end":8554418,"line_start":360,"line_end":360,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554423,"byte_end":8554503,"line_start":361,"line_end":361,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554508,"byte_end":8554580,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554585,"byte_end":8554660,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554665,"byte_end":8554721,"line_start":364,"line_end":364,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554726,"byte_end":8554729,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554734,"byte_end":8554748,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554753,"byte_end":8554756,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554761,"byte_end":8554772,"line_start":368,"line_end":368,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554777,"byte_end":8554797,"line_start":369,"line_end":369,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554802,"byte_end":8554805,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554810,"byte_end":8554828,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554833,"byte_end":8554854,"line_start":372,"line_end":372,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554859,"byte_end":8554906,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554911,"byte_end":8554953,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554958,"byte_end":8554980,"line_start":375,"line_end":375,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8554985,"byte_end":8555015,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8555020,"byte_end":8555038,"line_start":377,"line_end":377,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8555043,"byte_end":8555060,"line_start":378,"line_end":378,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8555065,"byte_end":8555070,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8555075,"byte_end":8555082,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8555087,"byte_end":8555090,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8555095,"byte_end":8555130,"line_start":382,"line_end":382,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8555135,"byte_end":8555185,"line_start":383,"line_end":383,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6020},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564129,"byte_end":8564137,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":6022}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563296,"byte_end":8563326,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563327,"byte_end":8563330,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563331,"byte_end":8563385,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563386,"byte_end":8563389,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563390,"byte_end":8563456,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563457,"byte_end":8563524,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563525,"byte_end":8563582,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563583,"byte_end":8563652,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563653,"byte_end":8563656,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563657,"byte_end":8563671,"line_start":71,"line_end":71,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563672,"byte_end":8563675,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563676,"byte_end":8563683,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563684,"byte_end":8563706,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563707,"byte_end":8563731,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563732,"byte_end":8563759,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563760,"byte_end":8563765,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563766,"byte_end":8563769,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563770,"byte_end":8563802,"line_start":79,"line_end":79,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563803,"byte_end":8563839,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563840,"byte_end":8563853,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563854,"byte_end":8563857,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563858,"byte_end":8563890,"line_start":83,"line_end":83,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563891,"byte_end":8563927,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563928,"byte_end":8563931,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563932,"byte_end":8563968,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8563969,"byte_end":8564009,"line_start":87,"line_end":87,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564010,"byte_end":8564027,"line_start":88,"line_end":88,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564028,"byte_end":8564041,"line_start":89,"line_end":89,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564042,"byte_end":8564049,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564050,"byte_end":8564057,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564058,"byte_end":8564117,"line_start":92,"line_end":92,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6022},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564179,"byte_end":8564184,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":6020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6025},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564712,"byte_end":8564717,"line_start":116,"line_end":116,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564262,"byte_end":8564326,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564331,"byte_end":8564334,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564339,"byte_end":8564400,"line_start":101,"line_end":101,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564405,"byte_end":8564408,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564413,"byte_end":8564429,"line_start":103,"line_end":103,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564434,"byte_end":8564437,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564442,"byte_end":8564449,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564454,"byte_end":8564476,"line_start":106,"line_end":106,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564481,"byte_end":8564505,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564510,"byte_end":8564537,"line_start":108,"line_end":108,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564542,"byte_end":8564547,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564552,"byte_end":8564555,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564560,"byte_end":8564592,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564597,"byte_end":8564652,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564657,"byte_end":8564670,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564675,"byte_end":8564682,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564687,"byte_end":8564694,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6029},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8565191,"byte_end":8565195,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564942,"byte_end":8565008,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8565013,"byte_end":8565016,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8565021,"byte_end":8565033,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8565038,"byte_end":8565041,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8565046,"byte_end":8565107,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8565112,"byte_end":8565179,"line_start":133,"line_end":133,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6032},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8565683,"byte_end":8565691,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8565436,"byte_end":8565502,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8565507,"byte_end":8565510,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8565515,"byte_end":8565581,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8565586,"byte_end":8565651,"line_start":147,"line_end":147,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8565656,"byte_end":8565671,"line_start":148,"line_end":148,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6038},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8566151,"byte_end":8566154,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8566046,"byte_end":8566088,"line_start":164,"line_end":164,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8566093,"byte_end":8566139,"line_start":165,"line_end":165,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6080},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8567643,"byte_end":8567654,"line_start":224,"line_end":224,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":6081}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8567518,"byte_end":8567593,"line_start":222,"line_end":222,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":6092},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":6093},{"krate":0,"index":6094},{"krate":0,"index":6095},{"krate":0,"index":6171},{"krate":0,"index":6172},{"krate":0,"index":6192},{"krate":0,"index":6193},{"krate":0,"index":6194},{"krate":0,"index":6195},{"krate":0,"index":6196},{"krate":0,"index":6373},{"krate":0,"index":6386},{"krate":0,"index":6387},{"krate":0,"index":6423},{"krate":0,"index":6424},{"krate":0,"index":6447},{"krate":0,"index":6448},{"krate":0,"index":6449},{"krate":0,"index":6450},{"krate":0,"index":6451},{"krate":0,"index":6485},{"krate":0,"index":6486},{"krate":0,"index":6487},{"krate":0,"index":6488},{"krate":0,"index":6489},{"krate":0,"index":6725},{"krate":0,"index":6749},{"krate":0,"index":6750},{"krate":0,"index":6751},{"krate":0,"index":6490},{"krate":0,"index":6554},{"krate":0,"index":6555},{"krate":0,"index":6560}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23098,"byte_end":23122,"line_start":324,"line_end":324,"column_start":13,"column_end":37}},{"value":"! Utilities for tracking time.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568027,"byte_end":8568059,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568060,"byte_end":8568063,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides a number of types for executing code after a set period","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568064,"byte_end":8568144,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"! of time.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568145,"byte_end":8568157,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568158,"byte_end":8568161,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! * `Delay` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568162,"byte_end":8568243,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"!   in time.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568244,"byte_end":8568258,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568259,"byte_end":8568262,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568263,"byte_end":8568333,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"!   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568334,"byte_end":8568414,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"!   elapses.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568415,"byte_end":8568429,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568430,"byte_end":8568433,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568434,"byte_end":8568513,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"!   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568514,"byte_end":8568586,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"!   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568587,"byte_end":8568656,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568657,"byte_end":8568660,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568661,"byte_end":8568738,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"!   has expired.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568739,"byte_end":8568757,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568758,"byte_end":8568761,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! These types are sufficient for handling a large number of scenarios","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568762,"byte_end":8568833,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"! involving time.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568834,"byte_end":8568853,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568854,"byte_end":8568857,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! These types must be used from within the context of the `Runtime`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568858,"byte_end":8568928,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568929,"byte_end":8568932,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568933,"byte_end":8568947,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568948,"byte_end":8568951,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568952,"byte_end":8568998,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8568999,"byte_end":8569002,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569003,"byte_end":8569010,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"! use tokio::time::delay_for;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569011,"byte_end":8569042,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569043,"byte_end":8569046,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! use std::time::Duration;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569047,"byte_end":8569075,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569076,"byte_end":8569079,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569080,"byte_end":8569083,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569084,"byte_end":8569102,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569103,"byte_end":8569124,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"!     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569125,"byte_end":8569177,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"!     println!(\"100 ms have elapsed\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569178,"byte_end":8569218,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569219,"byte_end":8569224,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569225,"byte_end":8569232,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569233,"byte_end":8569236,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569237,"byte_end":8569316,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"! `timeout` function on the `FutureExt` trait. This trait is included in the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569317,"byte_end":8569395,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"! prelude.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569396,"byte_end":8569408,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569409,"byte_end":8569412,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569413,"byte_end":8569420,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"! use tokio::time::{timeout, Duration};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569421,"byte_end":8569462,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569463,"byte_end":8569466,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! async fn long_future() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569467,"byte_end":8569495,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"!     // do work here","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569496,"byte_end":8569519,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"! }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569520,"byte_end":8569525,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569526,"byte_end":8569529,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! # async fn dox() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569530,"byte_end":8569552,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"! let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569553,"byte_end":8569620,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569621,"byte_end":8569624,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! if res.is_err() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569625,"byte_end":8569646,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"!     println!(\"operation timed out\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569647,"byte_end":8569687,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569688,"byte_end":8569693,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569694,"byte_end":8569701,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569702,"byte_end":8569709,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569710,"byte_end":8569713,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569714,"byte_end":8569790,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569791,"byte_end":8569794,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! The difference between [`interval`] and [`delay_for`] is that an","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569795,"byte_end":8569863,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"! [`interval`] measures the time since the last tick, which means that","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569864,"byte_end":8569936,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"! `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8569937,"byte_end":8570012,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"! for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570013,"byte_end":8570091,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570092,"byte_end":8570095,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570096,"byte_end":8570174,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"! would only be executed once every three seconds, and not every two","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570175,"byte_end":8570245,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"! seconds.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570246,"byte_end":8570258,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570259,"byte_end":8570262,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570263,"byte_end":8570270,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"! use tokio::time;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570271,"byte_end":8570291,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570292,"byte_end":8570295,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! async fn task_that_takes_a_second() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570296,"byte_end":8570337,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"!     println!(\"hello\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570338,"byte_end":8570364,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"!     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570365,"byte_end":8570424,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"! }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570425,"byte_end":8570430,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570431,"byte_end":8570434,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570435,"byte_end":8570453,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570454,"byte_end":8570475,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"!     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570476,"byte_end":8570548,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"!     for _i in 0..5 {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570549,"byte_end":8570573,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"!         interval.tick().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570574,"byte_end":8570608,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"!         task_that_takes_a_second().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570609,"byte_end":8570654,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"!     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570655,"byte_end":8570664,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570665,"byte_end":8570670,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570671,"byte_end":8570678,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570679,"byte_end":8570682,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570683,"byte_end":8570726,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"! [`interval`]: crate::time::interval()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570727,"byte_end":8570768,"line_start":92,"line_end":92,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":6095},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","parent":null,"children":[{"krate":0,"index":6096},{"krate":0,"index":6097},{"krate":0,"index":6098},{"krate":0,"index":6099},{"krate":0,"index":6100},{"krate":0,"index":6101},{"krate":0,"index":6102},{"krate":0,"index":6103},{"krate":0,"index":6104},{"krate":0,"index":6105},{"krate":0,"index":6106},{"krate":0,"index":6107},{"krate":0,"index":6108},{"krate":0,"index":12383},{"krate":0,"index":6109},{"krate":0,"index":6110},{"krate":0,"index":6111},{"krate":0,"index":6112},{"krate":0,"index":6577},{"krate":0,"index":6585},{"krate":0,"index":6588},{"krate":0,"index":6593},{"krate":0,"index":6596},{"krate":0,"index":6600},{"krate":0,"index":6598},{"krate":0,"index":6602},{"krate":0,"index":6606},{"krate":0,"index":6609},{"krate":0,"index":6616},{"krate":0,"index":6113},{"krate":0,"index":6114},{"krate":0,"index":6141},{"krate":0,"index":6143},{"krate":0,"index":6146},{"krate":0,"index":6150},{"krate":0,"index":6160},{"krate":0,"index":6163},{"krate":0,"index":6165}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"! A queue of delayed elements.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8576919,"byte_end":8576951,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8576952,"byte_end":8576955,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! See [`DelayQueue`] for more details.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8576956,"byte_end":8576996,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8576997,"byte_end":8577000,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8577001,"byte_end":8577038,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6577},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8581297,"byte_end":8581307,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":6579},{"krate":0,"index":6580},{"krate":0,"index":6581},{"krate":0,"index":6582},{"krate":0,"index":6583},{"krate":0,"index":6584}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8577279,"byte_end":8577311,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8577312,"byte_end":8577315,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8577316,"byte_end":8577393,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8577394,"byte_end":8577434,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8577435,"byte_end":8577438,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8577439,"byte_end":8577450,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8577451,"byte_end":8577454,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8577455,"byte_end":8577522,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8577523,"byte_end":8577603,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8577604,"byte_end":8577682,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8577683,"byte_end":8577719,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8577720,"byte_end":8577723,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8577724,"byte_end":8577794,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll`] is called. If an entry has reached its","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8577795,"byte_end":8577873,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` indicating that the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8577874,"byte_end":8577947,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8577948,"byte_end":8578017,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578018,"byte_end":8578021,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578022,"byte_end":8578051,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578052,"byte_end":8578055,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`Stream::poll`]. If no delays have","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578056,"byte_end":8578134,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578135,"byte_end":8578215,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578216,"byte_end":8578292,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578293,"byte_end":8578305,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578306,"byte_end":8578309,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578310,"byte_end":8578389,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578390,"byte_end":8578467,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578468,"byte_end":8578544,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578545,"byte_end":8578578,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578579,"byte_end":8578582,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578583,"byte_end":8578661,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578662,"byte_end":8578738,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578739,"byte_end":8578817,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578818,"byte_end":8578857,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578858,"byte_end":8578861,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578862,"byte_end":8578882,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578883,"byte_end":8578886,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of the same timer wheel used internally by","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578887,"byte_end":8578985,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ Tokio's standalone timer utilities such as [`delay_for`]. Because of this, it offers the same","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8578986,"byte_end":8579083,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ performance and scalability benefits.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579084,"byte_end":8579125,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579126,"byte_end":8579129,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579130,"byte_end":8579230,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579231,"byte_end":8579296,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579297,"byte_end":8579300,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579301,"byte_end":8579383,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579384,"byte_end":8579411,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579412,"byte_end":8579415,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579416,"byte_end":8579427,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579428,"byte_end":8579431,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579432,"byte_end":8579479,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579480,"byte_end":8579483,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579484,"byte_end":8579502,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579503,"byte_end":8579557,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579558,"byte_end":8579561,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579562,"byte_end":8579585,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579586,"byte_end":8579620,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579621,"byte_end":8579656,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579657,"byte_end":8579685,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579686,"byte_end":8579715,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579716,"byte_end":8579742,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579743,"byte_end":8579746,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579747,"byte_end":8579765,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579766,"byte_end":8579828,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579829,"byte_end":8579871,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579872,"byte_end":8579877,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579878,"byte_end":8579881,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579882,"byte_end":8579911,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579912,"byte_end":8579915,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579916,"byte_end":8579932,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579933,"byte_end":8579992,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8579993,"byte_end":8580033,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580034,"byte_end":8580102,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580103,"byte_end":8580106,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580107,"byte_end":8580160,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580161,"byte_end":8580170,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580171,"byte_end":8580174,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580175,"byte_end":8580232,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580233,"byte_end":8580266,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580267,"byte_end":8580304,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580305,"byte_end":8580314,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580315,"byte_end":8580318,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580319,"byte_end":8580365,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580366,"byte_end":8580434,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580435,"byte_end":8580487,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580488,"byte_end":8580501,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580502,"byte_end":8580511,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580512,"byte_end":8580515,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580516,"byte_end":8580599,"line_start":103,"line_end":103,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580600,"byte_end":8580677,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580678,"byte_end":8580711,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580712,"byte_end":8580765,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580766,"byte_end":8580779,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580780,"byte_end":8580783,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580784,"byte_end":8580815,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580816,"byte_end":8580825,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580826,"byte_end":8580831,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580832,"byte_end":8580839,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580840,"byte_end":8580843,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580844,"byte_end":8580879,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580880,"byte_end":8580921,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580922,"byte_end":8580945,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8580946,"byte_end":8581022,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8581023,"byte_end":8581054,"line_start":118,"line_end":118,"column_start":1,"column_end":32}},{"value":"/ [`Stream::poll`]: method@Self::poll","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8581055,"byte_end":8581094,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8581095,"byte_end":8581132,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/ [`delay_for`]: fn@super::delay_for","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8581133,"byte_end":8581171,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/ [`slab`]: slab","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8581172,"byte_end":8581190,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8581191,"byte_end":8581230,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8581231,"byte_end":8581268,"line_start":124,"line_end":124,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6588},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8581998,"byte_end":8582005,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":6590},{"krate":0,"index":6591},{"krate":0,"index":6592}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8581804,"byte_end":8581862,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8581863,"byte_end":8581866,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8581867,"byte_end":8581915,"line_start":149,"line_end":149,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8581916,"byte_end":8581919,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll`]: method@DelayQueue::poll","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8581920,"byte_end":8581969,"line_start":151,"line_end":151,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6596},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8582473,"byte_end":8582476,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":6597}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8582173,"byte_end":8582219,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8582220,"byte_end":8582223,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8582224,"byte_end":8582305,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8582306,"byte_end":8582341,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8582342,"byte_end":8582345,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8582346,"byte_end":8582383,"line_start":169,"line_end":169,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8582384,"byte_end":8582437,"line_start":170,"line_end":170,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6116},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583454,"byte_end":8583457,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"pub fn new() -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583154,"byte_end":8583192,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583197,"byte_end":8583200,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583205,"byte_end":8583278,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583283,"byte_end":8583286,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583291,"byte_end":8583305,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583310,"byte_end":8583313,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583318,"byte_end":8583329,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583334,"byte_end":8583368,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583373,"byte_end":8583430,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583435,"byte_end":8583442,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6117},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584375,"byte_end":8584388,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"pub fn with_capacity(usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583527,"byte_end":8583594,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583599,"byte_end":8583602,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583607,"byte_end":8583678,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583683,"byte_end":8583752,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583757,"byte_end":8583769,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583774,"byte_end":8583777,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583782,"byte_end":8583796,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583801,"byte_end":8583804,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583809,"byte_end":8583820,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583825,"byte_end":8583859,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583864,"byte_end":8583894,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583899,"byte_end":8583902,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583907,"byte_end":8583927,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583932,"byte_end":8583955,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583960,"byte_end":8584020,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584025,"byte_end":8584028,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584033,"byte_end":8584096,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584101,"byte_end":8584125,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584130,"byte_end":8584188,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584193,"byte_end":8584202,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584207,"byte_end":8584210,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584215,"byte_end":8584278,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584283,"byte_end":8584339,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584344,"byte_end":8584351,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584356,"byte_end":8584363,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6118},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8586424,"byte_end":8586433,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"pub fn insert_at(&mut Self, T, Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584687,"byte_end":8584760,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584765,"byte_end":8584774,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584779,"byte_end":8584782,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584787,"byte_end":8584861,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584866,"byte_end":8584886,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584891,"byte_end":8584894,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584899,"byte_end":8584974,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8584979,"byte_end":8585049,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585054,"byte_end":8585118,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585123,"byte_end":8585126,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585131,"byte_end":8585206,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585211,"byte_end":8585286,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585291,"byte_end":8585361,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585366,"byte_end":8585439,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585444,"byte_end":8585520,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585525,"byte_end":8585559,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585564,"byte_end":8585567,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585572,"byte_end":8585624,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585629,"byte_end":8585632,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585637,"byte_end":8585649,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585654,"byte_end":8585657,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585662,"byte_end":8585722,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585727,"byte_end":8585730,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585735,"byte_end":8585749,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585754,"byte_end":8585757,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585762,"byte_end":8585777,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585782,"byte_end":8585785,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585790,"byte_end":8585801,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585806,"byte_end":8585859,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585864,"byte_end":8585867,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585872,"byte_end":8585892,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585897,"byte_end":8585920,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585925,"byte_end":8585973,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8585978,"byte_end":8586018,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8586023,"byte_end":8586083,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8586088,"byte_end":8586091,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8586096,"byte_end":8586123,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8586128,"byte_end":8586172,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8586177,"byte_end":8586220,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8586225,"byte_end":8586232,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8586237,"byte_end":8586244,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8586249,"byte_end":8586252,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8586257,"byte_end":8586288,"line_start":298,"line_end":298,"column_start":5,"column_end":36}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8586293,"byte_end":8586328,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8586333,"byte_end":8586366,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8586371,"byte_end":8586394,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8586399,"byte_end":8586412,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6119},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8587793,"byte_end":8587805,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"pub fn poll_expired(&mut Self, &mut task::Context)\n-> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8587585,"byte_end":8587660,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8587665,"byte_end":8587741,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8587746,"byte_end":8587781,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6122},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8590177,"byte_end":8590183,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"pub fn insert(&mut Self, T, Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8588422,"byte_end":8588499,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8588504,"byte_end":8588516,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8588521,"byte_end":8588524,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8588529,"byte_end":8588598,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8588603,"byte_end":8588631,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8588636,"byte_end":8588639,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8588644,"byte_end":8588719,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8588724,"byte_end":8588794,"line_start":370,"line_end":370,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8588799,"byte_end":8588863,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8588868,"byte_end":8588871,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8588876,"byte_end":8588951,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8588956,"byte_end":8589031,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589036,"byte_end":8589106,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589111,"byte_end":8589184,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589189,"byte_end":8589265,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589270,"byte_end":8589304,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589309,"byte_end":8589312,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589317,"byte_end":8589369,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589374,"byte_end":8589377,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589382,"byte_end":8589394,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589399,"byte_end":8589402,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589407,"byte_end":8589482,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589487,"byte_end":8589500,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589505,"byte_end":8589508,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589513,"byte_end":8589527,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589532,"byte_end":8589535,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589540,"byte_end":8589555,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589560,"byte_end":8589563,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589568,"byte_end":8589579,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589584,"byte_end":8589616,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589621,"byte_end":8589649,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589654,"byte_end":8589657,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589662,"byte_end":8589682,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589687,"byte_end":8589710,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589715,"byte_end":8589763,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589768,"byte_end":8589836,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589841,"byte_end":8589844,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589849,"byte_end":8589876,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589881,"byte_end":8589925,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589930,"byte_end":8589973,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589978,"byte_end":8589985,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8589990,"byte_end":8589997,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8590002,"byte_end":8590005,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8590010,"byte_end":8590041,"line_start":406,"line_end":406,"column_start":5,"column_end":36}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8590046,"byte_end":8590081,"line_start":407,"line_end":407,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8590086,"byte_end":8590119,"line_start":408,"line_end":408,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8590124,"byte_end":8590147,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8590152,"byte_end":8590165,"line_start":410,"line_end":410,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6127},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591728,"byte_end":8591734,"line_start":458,"line_end":458,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"pub fn remove(&mut Self, &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8590874,"byte_end":8590932,"line_start":430,"line_end":430,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8590937,"byte_end":8590940,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8590945,"byte_end":8591018,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591023,"byte_end":8591096,"line_start":433,"line_end":433,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591101,"byte_end":8591118,"line_start":434,"line_end":434,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591123,"byte_end":8591126,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591131,"byte_end":8591143,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591148,"byte_end":8591151,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591156,"byte_end":8591219,"line_start":438,"line_end":438,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591224,"byte_end":8591227,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591232,"byte_end":8591246,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591251,"byte_end":8591254,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591259,"byte_end":8591274,"line_start":442,"line_end":442,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591279,"byte_end":8591282,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591287,"byte_end":8591298,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591303,"byte_end":8591335,"line_start":445,"line_end":445,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591340,"byte_end":8591368,"line_start":446,"line_end":446,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591373,"byte_end":8591376,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591381,"byte_end":8591401,"line_start":448,"line_end":448,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591406,"byte_end":8591429,"line_start":449,"line_end":449,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591434,"byte_end":8591482,"line_start":450,"line_end":450,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591487,"byte_end":8591555,"line_start":451,"line_end":451,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591560,"byte_end":8591563,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591568,"byte_end":8591595,"line_start":453,"line_end":453,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591600,"byte_end":8591644,"line_start":454,"line_end":454,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591649,"byte_end":8591692,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591697,"byte_end":8591704,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8591709,"byte_end":8591716,"line_start":457,"line_end":457,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6129},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8593386,"byte_end":8593394,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"pub fn reset_at(&mut Self, &Key, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592272,"byte_end":8592345,"line_start":477,"line_end":477,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592350,"byte_end":8592353,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592358,"byte_end":8592433,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592438,"byte_end":8592455,"line_start":480,"line_end":480,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592460,"byte_end":8592463,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592468,"byte_end":8592543,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592548,"byte_end":8592624,"line_start":483,"line_end":483,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592629,"byte_end":8592644,"line_start":484,"line_end":484,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592649,"byte_end":8592652,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592657,"byte_end":8592669,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592674,"byte_end":8592677,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592682,"byte_end":8592756,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592761,"byte_end":8592792,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592797,"byte_end":8592800,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592805,"byte_end":8592819,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592824,"byte_end":8592827,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592832,"byte_end":8592847,"line_start":493,"line_end":493,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592852,"byte_end":8592855,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592860,"byte_end":8592871,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592876,"byte_end":8592929,"line_start":496,"line_end":496,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592934,"byte_end":8592937,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592942,"byte_end":8592962,"line_start":498,"line_end":498,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592967,"byte_end":8592990,"line_start":499,"line_end":499,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8592995,"byte_end":8593043,"line_start":500,"line_end":500,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8593048,"byte_end":8593116,"line_start":501,"line_end":501,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8593121,"byte_end":8593124,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8593129,"byte_end":8593186,"line_start":503,"line_end":503,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8593191,"byte_end":8593194,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8593199,"byte_end":8593276,"line_start":505,"line_end":505,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8593281,"byte_end":8593284,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8593289,"byte_end":8593350,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8593355,"byte_end":8593362,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8593367,"byte_end":8593374,"line_start":509,"line_end":509,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6132},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595287,"byte_end":8595292,"line_start":567,"line_end":567,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"pub fn reset(&mut Self, &Key, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594137,"byte_end":8594205,"line_start":532,"line_end":532,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594210,"byte_end":8594224,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594229,"byte_end":8594232,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594237,"byte_end":8594312,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594317,"byte_end":8594337,"line_start":536,"line_end":536,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594342,"byte_end":8594345,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594350,"byte_end":8594420,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594425,"byte_end":8594495,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594500,"byte_end":8594528,"line_start":540,"line_end":540,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594533,"byte_end":8594536,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594541,"byte_end":8594553,"line_start":542,"line_end":542,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594558,"byte_end":8594561,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594566,"byte_end":8594641,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594646,"byte_end":8594701,"line_start":545,"line_end":545,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594706,"byte_end":8594709,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594714,"byte_end":8594728,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594733,"byte_end":8594736,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594741,"byte_end":8594756,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594761,"byte_end":8594764,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594769,"byte_end":8594780,"line_start":551,"line_end":551,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594785,"byte_end":8594817,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594822,"byte_end":8594850,"line_start":553,"line_end":553,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594855,"byte_end":8594858,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594863,"byte_end":8594883,"line_start":555,"line_end":555,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594888,"byte_end":8594911,"line_start":556,"line_end":556,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594916,"byte_end":8594964,"line_start":557,"line_end":557,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8594969,"byte_end":8595037,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595042,"byte_end":8595045,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595050,"byte_end":8595107,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595112,"byte_end":8595115,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595120,"byte_end":8595177,"line_start":562,"line_end":562,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595182,"byte_end":8595185,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595190,"byte_end":8595251,"line_start":564,"line_end":564,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595256,"byte_end":8595263,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595268,"byte_end":8595275,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6133},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596134,"byte_end":8596139,"line_start":598,"line_end":598,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595401,"byte_end":8595442,"line_start":571,"line_end":571,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595447,"byte_end":8595450,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll`] will return `Ok(Ready(None))`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595455,"byte_end":8595521,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595526,"byte_end":8595529,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595534,"byte_end":8595600,"line_start":575,"line_end":575,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595605,"byte_end":8595608,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595613,"byte_end":8595644,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595649,"byte_end":8595652,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595657,"byte_end":8595671,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595676,"byte_end":8595679,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595684,"byte_end":8595695,"line_start":581,"line_end":581,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595700,"byte_end":8595732,"line_start":582,"line_end":582,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595737,"byte_end":8595765,"line_start":583,"line_end":583,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595770,"byte_end":8595773,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595778,"byte_end":8595798,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595803,"byte_end":8595826,"line_start":586,"line_end":586,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595831,"byte_end":8595879,"line_start":587,"line_end":587,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595884,"byte_end":8595887,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595892,"byte_end":8595950,"line_start":589,"line_end":589,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595955,"byte_end":8595958,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8595963,"byte_end":8596004,"line_start":591,"line_end":591,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596009,"byte_end":8596012,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596017,"byte_end":8596045,"line_start":593,"line_end":593,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596050,"byte_end":8596053,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596058,"byte_end":8596098,"line_start":595,"line_end":595,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596103,"byte_end":8596110,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596115,"byte_end":8596122,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6134},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596611,"byte_end":8596619,"line_start":615,"line_end":615,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596294,"byte_end":8596369,"line_start":605,"line_end":605,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596374,"byte_end":8596377,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596382,"byte_end":8596396,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596401,"byte_end":8596404,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596409,"byte_end":8596420,"line_start":609,"line_end":609,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596425,"byte_end":8596457,"line_start":610,"line_end":610,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596462,"byte_end":8596465,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596470,"byte_end":8596539,"line_start":612,"line_end":612,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596544,"byte_end":8596587,"line_start":613,"line_end":613,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596592,"byte_end":8596599,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6135},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597187,"byte_end":8597190,"line_start":635,"line_end":635,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596678,"byte_end":8596736,"line_start":619,"line_end":619,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596741,"byte_end":8596744,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596749,"byte_end":8596763,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596768,"byte_end":8596771,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596776,"byte_end":8596787,"line_start":623,"line_end":623,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596792,"byte_end":8596824,"line_start":624,"line_end":624,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596829,"byte_end":8596857,"line_start":625,"line_end":625,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596862,"byte_end":8596865,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596870,"byte_end":8596890,"line_start":627,"line_end":627,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596895,"byte_end":8596918,"line_start":628,"line_end":628,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8596923,"byte_end":8597000,"line_start":629,"line_end":629,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(delay_queue.len(), 0);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597005,"byte_end":8597046,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/     delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597051,"byte_end":8597105,"line_start":631,"line_end":631,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(delay_queue.len(), 1);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597110,"byte_end":8597151,"line_start":632,"line_end":632,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597156,"byte_end":8597163,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597168,"byte_end":8597175,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6136},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598399,"byte_end":8598406,"line_start":672,"line_end":672,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597244,"byte_end":8597315,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597320,"byte_end":8597343,"line_start":640,"line_end":640,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597348,"byte_end":8597351,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597356,"byte_end":8597431,"line_start":642,"line_end":642,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597436,"byte_end":8597512,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597517,"byte_end":8597593,"line_start":644,"line_end":644,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597598,"byte_end":8597674,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597679,"byte_end":8597702,"line_start":646,"line_end":646,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597707,"byte_end":8597710,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597715,"byte_end":8597787,"line_start":648,"line_end":648,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597792,"byte_end":8597825,"line_start":649,"line_end":649,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597830,"byte_end":8597833,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597838,"byte_end":8597850,"line_start":651,"line_end":651,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597855,"byte_end":8597858,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597863,"byte_end":8597935,"line_start":653,"line_end":653,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597940,"byte_end":8597962,"line_start":654,"line_end":654,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597967,"byte_end":8597970,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597975,"byte_end":8597989,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8597994,"byte_end":8597997,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598002,"byte_end":8598009,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598014,"byte_end":8598046,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598051,"byte_end":8598079,"line_start":660,"line_end":660,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598084,"byte_end":8598087,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598092,"byte_end":8598112,"line_start":662,"line_end":662,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598117,"byte_end":8598140,"line_start":663,"line_end":663,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598145,"byte_end":8598193,"line_start":664,"line_end":664,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598198,"byte_end":8598201,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598206,"byte_end":8598267,"line_start":666,"line_end":666,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598272,"byte_end":8598304,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598309,"byte_end":8598312,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598317,"byte_end":8598363,"line_start":669,"line_end":669,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598368,"byte_end":8598375,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598380,"byte_end":8598387,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6137},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8599122,"byte_end":8599130,"line_start":696,"line_end":696,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598489,"byte_end":8598543,"line_start":676,"line_end":676,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598548,"byte_end":8598551,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598556,"byte_end":8598630,"line_start":678,"line_end":678,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598635,"byte_end":8598691,"line_start":679,"line_end":679,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598696,"byte_end":8598699,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598704,"byte_end":8598718,"line_start":681,"line_end":681,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598723,"byte_end":8598726,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598731,"byte_end":8598738,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598743,"byte_end":8598775,"line_start":684,"line_end":684,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598780,"byte_end":8598808,"line_start":685,"line_end":685,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598813,"byte_end":8598816,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598821,"byte_end":8598841,"line_start":687,"line_end":687,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598846,"byte_end":8598869,"line_start":688,"line_end":688,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598874,"byte_end":8598922,"line_start":689,"line_end":689,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598927,"byte_end":8598967,"line_start":690,"line_end":690,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598972,"byte_end":8598975,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8598980,"byte_end":8599040,"line_start":692,"line_end":692,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8599045,"byte_end":8599086,"line_start":693,"line_end":693,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8599091,"byte_end":8599098,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8599103,"byte_end":8599110,"line_start":695,"line_end":695,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6167},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8603793,"byte_end":8603800,"line_start":869,"line_end":869,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8603738,"byte_end":8603781,"line_start":868,"line_end":868,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6168},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8603909,"byte_end":8603916,"line_start":874,"line_end":874,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8603846,"byte_end":8603897,"line_start":873,"line_end":873,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6169},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8604034,"byte_end":8604044,"line_start":879,"line_end":879,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8603974,"byte_end":8604022,"line_start":878,"line_end":878,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6170},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8604155,"byte_end":8604163,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8604087,"byte_end":8604143,"line_start":883,"line_end":883,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":6182},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8604741,"byte_end":8604752,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"pub fn delay_until(Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8604367,"byte_end":8604405,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8604406,"byte_end":8604409,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8604410,"byte_end":8604485,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8604486,"byte_end":8604563,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8604564,"byte_end":8604599,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8604600,"byte_end":8604603,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8604604,"byte_end":8604622,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8604623,"byte_end":8604626,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8604627,"byte_end":8604703,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8604704,"byte_end":8604733,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":6183},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605818,"byte_end":8605827,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"pub fn delay_for(Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8604891,"byte_end":8604930,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8604931,"byte_end":8604934,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8604935,"byte_end":8605010,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605011,"byte_end":8605046,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605047,"byte_end":8605050,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605051,"byte_end":8605126,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605127,"byte_end":8605204,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605205,"byte_end":8605240,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605241,"byte_end":8605244,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605245,"byte_end":8605308,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605309,"byte_end":8605312,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605313,"byte_end":8605331,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605332,"byte_end":8605335,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605336,"byte_end":8605412,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605413,"byte_end":8605442,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605443,"byte_end":8605446,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605447,"byte_end":8605461,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605462,"byte_end":8605465,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605466,"byte_end":8605513,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605514,"byte_end":8605517,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605518,"byte_end":8605525,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605526,"byte_end":8605569,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605570,"byte_end":8605573,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605574,"byte_end":8605592,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605593,"byte_end":8605614,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605615,"byte_end":8605667,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605668,"byte_end":8605708,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605709,"byte_end":8605714,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605715,"byte_end":8605722,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605723,"byte_end":8605726,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605727,"byte_end":8605768,"line_start":53,"line_end":53,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6619},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8606087,"byte_end":8606092,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":6620}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605905,"byte_end":8605960,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8605961,"byte_end":8605990,"line_start":60,"line_end":60,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8606008,"byte_end":8606075,"line_start":62,"line_end":62,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6186},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8606532,"byte_end":8606540,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8606462,"byte_end":8606520,"line_start":76,"line_end":76,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6187},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8606744,"byte_end":8606754,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns `true` if the `Delay` has elapsed","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8606609,"byte_end":8606654,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8606659,"byte_end":8606662,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8606667,"byte_end":8606732,"line_start":83,"line_end":83,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6188},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8607143,"byte_end":8607148,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"pub fn reset(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Delay` instance to a new deadline.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8606822,"byte_end":8606872,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8606877,"byte_end":8606880,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8606885,"byte_end":8606959,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8606964,"byte_end":8607031,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8607036,"byte_end":8607039,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8607044,"byte_end":8607112,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8607117,"byte_end":8607131,"line_start":94,"line_end":94,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":6676},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8640618,"byte_end":8640623,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8639505,"byte_end":8639556,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8639557,"byte_end":8639560,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8639561,"byte_end":8639622,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8639623,"byte_end":8639626,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8639627,"byte_end":8639701,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8639702,"byte_end":8639781,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8639782,"byte_end":8639857,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8639858,"byte_end":8639933,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8639934,"byte_end":8639962,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8639963,"byte_end":8639966,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8639967,"byte_end":8640044,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8640045,"byte_end":8640123,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8640124,"byte_end":8640200,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8640201,"byte_end":8640281,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8640282,"byte_end":8640359,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8640360,"byte_end":8640441,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8640442,"byte_end":8640524,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8640525,"byte_end":8640528,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8640529,"byte_end":8640589,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6378},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8640774,"byte_end":8640782,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8640711,"byte_end":8640762,"line_start":34,"line_end":34,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6379},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8640914,"byte_end":8640925,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8640831,"byte_end":8640902,"line_start":39,"line_end":39,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6380},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8641113,"byte_end":8641124,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8641047,"byte_end":8641101,"line_start":47,"line_end":47,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6381},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8641261,"byte_end":8641275,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8641175,"byte_end":8641249,"line_start":52,"line_end":52,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":6688},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642115,"byte_end":8642122,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":6689}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8641919,"byte_end":8641979,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8641980,"byte_end":8642042,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6392},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642369,"byte_end":8642372,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642176,"byte_end":8642222,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642227,"byte_end":8642230,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642235,"byte_end":8642249,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642254,"byte_end":8642257,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642262,"byte_end":8642269,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642274,"byte_end":8642303,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642308,"byte_end":8642311,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642316,"byte_end":8642345,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642350,"byte_end":8642357,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6393},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642498,"byte_end":8642506,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642422,"byte_end":8642486,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6394},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642642,"byte_end":8642650,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642580,"byte_end":8642630,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6395},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642894,"byte_end":8642908,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642709,"byte_end":8642781,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642786,"byte_end":8642789,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642794,"byte_end":8642806,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642811,"byte_end":8642814,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642819,"byte_end":8642882,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6396},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643599,"byte_end":8643621,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643004,"byte_end":8643079,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643084,"byte_end":8643132,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643137,"byte_end":8643140,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643145,"byte_end":8643159,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643164,"byte_end":8643167,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643172,"byte_end":8643179,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643184,"byte_end":8643236,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643241,"byte_end":8643244,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643249,"byte_end":8643267,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643272,"byte_end":8643293,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643298,"byte_end":8643331,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643336,"byte_end":8643381,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643386,"byte_end":8643423,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643428,"byte_end":8643490,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643495,"byte_end":8643565,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643570,"byte_end":8643575,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643580,"byte_end":8643587,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6397},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644344,"byte_end":8644369,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643733,"byte_end":8643808,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643813,"byte_end":8643872,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643877,"byte_end":8643880,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643885,"byte_end":8643899,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643904,"byte_end":8643907,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643912,"byte_end":8643919,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643924,"byte_end":8643976,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643981,"byte_end":8643984,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8643989,"byte_end":8644007,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644012,"byte_end":8644033,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644038,"byte_end":8644071,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644076,"byte_end":8644121,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644126,"byte_end":8644163,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644168,"byte_end":8644233,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644238,"byte_end":8644310,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644315,"byte_end":8644320,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644325,"byte_end":8644332,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6398},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8645140,"byte_end":8645147,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644476,"byte_end":8644546,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644551,"byte_end":8644554,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644559,"byte_end":8644571,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644576,"byte_end":8644579,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644584,"byte_end":8644652,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644657,"byte_end":8644723,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644728,"byte_end":8644755,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644760,"byte_end":8644763,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644768,"byte_end":8644782,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644787,"byte_end":8644790,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644795,"byte_end":8644802,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644807,"byte_end":8644859,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644864,"byte_end":8644867,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644872,"byte_end":8644890,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644895,"byte_end":8644916,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644921,"byte_end":8644958,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8644963,"byte_end":8645011,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8645016,"byte_end":8645052,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8645057,"byte_end":8645106,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8645111,"byte_end":8645116,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8645121,"byte_end":8645128,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6399},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8645428,"byte_end":8645439,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8645211,"byte_end":8645286,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8645291,"byte_end":8645362,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8645367,"byte_end":8645416,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6400},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8645778,"byte_end":8645789,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8645561,"byte_end":8645636,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8645641,"byte_end":8645712,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8645717,"byte_end":8645766,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":6436},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649253,"byte_end":8649261,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647511,"byte_end":8647588,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647589,"byte_end":8647620,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647621,"byte_end":8647624,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647625,"byte_end":8647705,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647706,"byte_end":8647745,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647746,"byte_end":8647749,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647750,"byte_end":8647823,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647824,"byte_end":8647827,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647828,"byte_end":8647840,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647841,"byte_end":8647844,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647845,"byte_end":8647890,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647891,"byte_end":8647894,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647895,"byte_end":8647909,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647910,"byte_end":8647913,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647914,"byte_end":8647921,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647922,"byte_end":8647960,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647961,"byte_end":8647964,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647965,"byte_end":8647983,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8647984,"byte_end":8648005,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648006,"byte_end":8648075,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648076,"byte_end":8648079,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648080,"byte_end":8648110,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648111,"byte_end":8648141,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648142,"byte_end":8648172,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648173,"byte_end":8648176,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648177,"byte_end":8648220,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648221,"byte_end":8648226,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648227,"byte_end":8648234,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648235,"byte_end":8648238,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648239,"byte_end":8648313,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648314,"byte_end":8648317,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`delay_for`] is that an `interval`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648318,"byte_end":8648395,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648396,"byte_end":8648471,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648472,"byte_end":8648548,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648549,"byte_end":8648610,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648611,"byte_end":8648614,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648615,"byte_end":8648693,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648694,"byte_end":8648764,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648765,"byte_end":8648777,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648778,"byte_end":8648781,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648782,"byte_end":8648789,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648790,"byte_end":8648810,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648811,"byte_end":8648814,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648815,"byte_end":8648856,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648857,"byte_end":8648883,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648884,"byte_end":8648943,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648944,"byte_end":8648949,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648950,"byte_end":8648953,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648954,"byte_end":8648972,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648973,"byte_end":8648994,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8648995,"byte_end":8649067,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649068,"byte_end":8649092,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649093,"byte_end":8649127,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649128,"byte_end":8649173,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649174,"byte_end":8649183,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649184,"byte_end":8649189,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649190,"byte_end":8649197,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649198,"byte_end":8649201,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649202,"byte_end":8649245,"line_start":66,"line_end":66,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":6437},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8650147,"byte_end":8650158,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `at`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649411,"byte_end":8649484,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `at`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649485,"byte_end":8649519,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649520,"byte_end":8649523,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649524,"byte_end":8649604,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649605,"byte_end":8649644,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649645,"byte_end":8649648,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649649,"byte_end":8649661,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649662,"byte_end":8649665,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649666,"byte_end":8649711,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649712,"byte_end":8649715,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649716,"byte_end":8649730,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649731,"byte_end":8649734,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649735,"byte_end":8649742,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649743,"byte_end":8649797,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649798,"byte_end":8649801,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649802,"byte_end":8649820,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649821,"byte_end":8649842,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649843,"byte_end":8649906,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649907,"byte_end":8649980,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649981,"byte_end":8649984,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8649985,"byte_end":8650015,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8650016,"byte_end":8650046,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8650047,"byte_end":8650077,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8650078,"byte_end":8650081,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8650082,"byte_end":8650125,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8650126,"byte_end":8650131,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8650132,"byte_end":8650139,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6711},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8650464,"byte_end":8650472,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":6712},{"krate":0,"index":6713}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).\n","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8650356,"byte_end":8650435,"line_start":109,"line_end":109,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":6439},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8650717,"byte_end":8650726,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6440},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651818,"byte_end":8651822,"line_start":158,"line_end":158,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651213,"byte_end":8651282,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651287,"byte_end":8651290,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651295,"byte_end":8651309,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651314,"byte_end":8651317,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651322,"byte_end":8651329,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651334,"byte_end":8651354,"line_start":142,"line_end":142,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651359,"byte_end":8651362,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651367,"byte_end":8651395,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651400,"byte_end":8651403,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651408,"byte_end":8651426,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651431,"byte_end":8651452,"line_start":147,"line_end":147,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651457,"byte_end":8651526,"line_start":148,"line_end":148,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651531,"byte_end":8651534,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651539,"byte_end":8651569,"line_start":150,"line_end":150,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651574,"byte_end":8651604,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651609,"byte_end":8651639,"line_start":152,"line_end":152,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651644,"byte_end":8651647,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651652,"byte_end":8651695,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651700,"byte_end":8651705,"line_start":155,"line_end":155,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651710,"byte_end":8651717,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651722,"byte_end":8651762,"line_start":157,"line_end":157,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":6464},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653504,"byte_end":8653511,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8652489,"byte_end":8652566,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8652567,"byte_end":8652570,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8652571,"byte_end":8652650,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8652651,"byte_end":8652723,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8652724,"byte_end":8652737,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8652738,"byte_end":8652741,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8652742,"byte_end":8652759,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8652760,"byte_end":8652763,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8652764,"byte_end":8652842,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8652843,"byte_end":8652873,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8652874,"byte_end":8652877,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8652878,"byte_end":8652958,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8652959,"byte_end":8652986,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8652987,"byte_end":8652990,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8652991,"byte_end":8653005,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653006,"byte_end":8653009,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653010,"byte_end":8653070,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653071,"byte_end":8653074,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653075,"byte_end":8653086,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653087,"byte_end":8653116,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653117,"byte_end":8653146,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653147,"byte_end":8653150,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653151,"byte_end":8653179,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653180,"byte_end":8653183,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653184,"byte_end":8653206,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653207,"byte_end":8653245,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653246,"byte_end":8653273,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653274,"byte_end":8653277,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653278,"byte_end":8653351,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653352,"byte_end":8653418,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653419,"byte_end":8653474,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653475,"byte_end":8653480,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653481,"byte_end":8653488,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653489,"byte_end":8653496,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6466},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654733,"byte_end":8654743,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653702,"byte_end":8653774,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653775,"byte_end":8653778,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653779,"byte_end":8653856,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653857,"byte_end":8653912,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653913,"byte_end":8653916,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653917,"byte_end":8653934,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653935,"byte_end":8653938,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8653939,"byte_end":8654017,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654018,"byte_end":8654048,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654049,"byte_end":8654052,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654053,"byte_end":8654133,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654134,"byte_end":8654161,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654162,"byte_end":8654165,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654166,"byte_end":8654180,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654181,"byte_end":8654184,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654185,"byte_end":8654245,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654246,"byte_end":8654249,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654250,"byte_end":8654261,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654262,"byte_end":8654305,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654306,"byte_end":8654335,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654336,"byte_end":8654339,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654340,"byte_end":8654368,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654369,"byte_end":8654372,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654373,"byte_end":8654395,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654396,"byte_end":8654434,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654435,"byte_end":8654462,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654463,"byte_end":8654466,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654467,"byte_end":8654545,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654546,"byte_end":8654560,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654561,"byte_end":8654647,"line_start":86,"line_end":86,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654648,"byte_end":8654703,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654704,"byte_end":8654709,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654710,"byte_end":8654717,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8654718,"byte_end":8654725,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7117},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8655118,"byte_end":8655125,"line_start":107,"line_end":107,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":7119},{"krate":0,"index":7120}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":7657717,"byte_end":7657726,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6716},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8655282,"byte_end":8655289,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8655210,"byte_end":8655242,"line_start":115,"line_end":115,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":6473},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8655640,"byte_end":8655647,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8655567,"byte_end":8655628,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6474},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8655775,"byte_end":8655782,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8655694,"byte_end":8655763,"line_start":137,"line_end":137,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6475},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8655911,"byte_end":8655921,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8655841,"byte_end":8655899,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":6738},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8674054,"byte_end":8674062,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"throttle","qualname":"::time::throttle::throttle","value":"pub fn throttle<T>(Duration, T) -> Throttle<T> where T: Stream","parent":null,"children":[],"decl_id":null,"docs":" Slows down a stream by enforcing a delay between items.\n They will be produced not more often than the specified interval.","sig":null,"attributes":[{"value":"/ Slows down a stream by enforcing a delay between items.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8673480,"byte_end":8673539,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ They will be produced not more often than the specified interval.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8673540,"byte_end":8673609,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8673610,"byte_end":8673613,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8673614,"byte_end":8673627,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8673628,"byte_end":8673631,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Create a throttled stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8673632,"byte_end":8673662,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8673663,"byte_end":8673681,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8673682,"byte_end":8673710,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8673711,"byte_end":8673744,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use tokio::time::throttle;","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8673745,"byte_end":8673775,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8673776,"byte_end":8673779,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8673780,"byte_end":8673802,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut item_stream = throttle(Duration::from_secs(2), futures::stream::repeat(\"one\"));","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8673803,"byte_end":8673894,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8673895,"byte_end":8673898,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8673899,"byte_end":8673909,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/     // The string will be produced at most every 2 seconds","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8673910,"byte_end":8673972,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/     println!(\"{:?}\", item_stream.next().await);","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8673973,"byte_end":8674024,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8674025,"byte_end":8674030,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8674031,"byte_end":8674038,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8674039,"byte_end":8674046,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7071},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8674557,"byte_end":8674565,"line_start":55,"line_end":55,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::time::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":7073},{"krate":0,"index":7074},{"krate":0,"index":7075},{"krate":0,"index":7076}],"decl_id":null,"docs":" Stream for the [`throttle`](throttle) function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":7657717,"byte_end":7657726,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6742},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8675032,"byte_end":8675039,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttle<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8674925,"byte_end":8674998,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8675003,"byte_end":8675020,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6743},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8675348,"byte_end":8675355,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Throttle<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this combinator\n is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this combinator","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8675087,"byte_end":8675165,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ is pulling from.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8675170,"byte_end":8675190,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8675195,"byte_end":8675198,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the stream","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8675203,"byte_end":8675283,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ which may otherwise confuse this combinator.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8675288,"byte_end":8675336,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6744},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8675650,"byte_end":8675660,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Throttle<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8675415,"byte_end":8675477,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8675482,"byte_end":8675485,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so care","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8675490,"byte_end":8675567,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8675572,"byte_end":8675638,"line_start":89,"line_end":89,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":6522},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":8672613,"byte_end":8672618,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":6521},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":8672563,"byte_end":8672603,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":6523},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":8672676,"byte_end":8672684,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":6521},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":8672649,"byte_end":8672666,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":6524},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":8672773,"byte_end":8672778,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":6521},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":8672691,"byte_end":8672763,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":769},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181032,"byte_end":181038,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":768},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180941,"byte_end":180970,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180975,"byte_end":180978,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180983,"byte_end":181022,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":770},"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181068,"byte_end":181074,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":768},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181045,"byte_end":181058,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29721,"byte_end":29730,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29746,"byte_end":29755,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":30105,"byte_end":30110,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31866,"byte_end":31875,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32038,"byte_end":32047,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":33234,"byte_end":33243,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33997,"byte_end":34003,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34217,"byte_end":34223,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34365,"byte_end":34371,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34902,"byte_end":34907,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34934,"byte_end":34939,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/try_join.rs","byte_start":36136,"byte_end":36144,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49833,"byte_end":49836,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49996,"byte_end":49999,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":50628,"byte_end":50634,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56598,"byte_end":56601,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56744,"byte_end":56747,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":57543,"byte_end":57549,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59975,"byte_end":59978,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60121,"byte_end":60124,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60578,"byte_end":60584,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68489,"byte_end":68492,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68640,"byte_end":68643,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69212,"byte_end":69215,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69723,"byte_end":69729,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70242,"byte_end":70248,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70764,"byte_end":70770,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":71281,"byte_end":71287,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":7847524,"byte_end":7847535,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":7848294,"byte_end":7848305,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":7848512,"byte_end":7848523,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":7851145,"byte_end":7851156,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":7836893,"byte_end":7836899,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":7839760,"byte_end":7839766,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":7840134,"byte_end":7840140,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":7840276,"byte_end":7840282,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":7841425,"byte_end":7841431,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":7841509,"byte_end":7841515,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":7841650,"byte_end":7841655,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":7843199,"byte_end":7843208,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7857714,"byte_end":7857725,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7865516,"byte_end":7865527,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7866020,"byte_end":7866031,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7867112,"byte_end":7867123,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7867296,"byte_end":7867307,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869455,"byte_end":7869467,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1133},{"krate":0,"index":1135},{"krate":0,"index":1137},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7880337,"byte_end":7880349,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7880374,"byte_end":7880386,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7880405,"byte_end":7880417,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7882199,"byte_end":7882207,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1217},{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7883124,"byte_end":7883133,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7883383,"byte_end":7883391,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7883946,"byte_end":7883955,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7884904,"byte_end":7884909,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7885302,"byte_end":7885307,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7885560,"byte_end":7885565,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7885688,"byte_end":7885696,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7885733,"byte_end":7885742,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7885779,"byte_end":7885787,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7885824,"byte_end":7885833,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7885876,"byte_end":7885884,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7886052,"byte_end":7886061,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":7886751,"byte_end":7886755,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1275},{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":7898705,"byte_end":7898706,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7937991,"byte_end":7937992,"line_start":1112,"line_end":1112,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939750,"byte_end":7939751,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7975028,"byte_end":7975029,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7976445,"byte_end":7976454,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7978633,"byte_end":7978642,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1466},{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7979618,"byte_end":7979627,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7980458,"byte_end":7980467,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1477},{"krate":0,"index":1478}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7981183,"byte_end":7981192,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7982699,"byte_end":7982708,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7984545,"byte_end":7984554,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7984696,"byte_end":7984705,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1511}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7985417,"byte_end":7985426,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7985956,"byte_end":7985965,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1519},{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7986444,"byte_end":7986453,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7988407,"byte_end":7988416,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7990694,"byte_end":7990703,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7991593,"byte_end":7991602,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7992084,"byte_end":7992093,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7992380,"byte_end":7992389,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7993558,"byte_end":7993563,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7994703,"byte_end":7994708,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7994987,"byte_end":7994992,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1597},{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7995815,"byte_end":7995820,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1602},{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":7998863,"byte_end":7998867,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1617},{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8001977,"byte_end":8001982,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1633},{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8002311,"byte_end":8002316,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1636},{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8002549,"byte_end":8002554,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1639}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/flush.rs","byte_start":8003375,"byte_end":8003380,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8004560,"byte_end":8004565,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1671},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8005817,"byte_end":8005822,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8006569,"byte_end":8006574,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1684},{"krate":0,"index":1685}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8007972,"byte_end":8007976,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1701},{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8009037,"byte_end":8009044,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1719},{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8010409,"byte_end":8010418,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8017953,"byte_end":8017961,"line_start":85,"line_end":85,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1770},{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8019187,"byte_end":8019192,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8020868,"byte_end":8020877,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1794},{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8022941,"byte_end":8022953,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1815}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8025605,"byte_end":8025614,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1832},{"krate":0,"index":1833}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8027448,"byte_end":8027454,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/shutdown.rs","byte_start":8028576,"byte_end":8028584,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1859},{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8030417,"byte_end":8030421,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8030931,"byte_end":8030935,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8031900,"byte_end":8031905,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1892}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032644,"byte_end":8032649,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8033428,"byte_end":8033433,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046972,"byte_end":8046984,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2391},{"krate":0,"index":2392}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8047489,"byte_end":8047501,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2399}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8049040,"byte_end":8049052,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2403},{"krate":0,"index":2404}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8034601,"byte_end":8034605,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1927}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8036233,"byte_end":8036237,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1930},{"krate":0,"index":1931}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8036894,"byte_end":8036898,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8038455,"byte_end":8038460,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1951}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8039253,"byte_end":8039261,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1966},{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8040769,"byte_end":8040777,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1984},{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74388,"byte_end":74398,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74438,"byte_end":74448,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74729,"byte_end":74741,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74781,"byte_end":74793,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75053,"byte_end":75065,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75105,"byte_end":75117,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8052973,"byte_end":8052984,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2600},{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2616},{"krate":0,"index":2617}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063688,"byte_end":8063699,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2619},{"krate":0,"index":2620}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8064014,"byte_end":8064025,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2622},{"krate":0,"index":2623}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8064465,"byte_end":8064476,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2625},{"krate":0,"index":2626}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8064802,"byte_end":8064813,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2628}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8065029,"byte_end":8065040,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2633}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8065872,"byte_end":8065880,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2645},{"krate":0,"index":2646}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8066518,"byte_end":8066526,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2648},{"krate":0,"index":2649}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068676,"byte_end":8068684,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2667},{"krate":0,"index":2668}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8071139,"byte_end":8071147,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2673},{"krate":0,"index":2674}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8071467,"byte_end":8071476,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2679},{"krate":0,"index":2680}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8072289,"byte_end":8072297,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2682}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8072391,"byte_end":8072400,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2684}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8075463,"byte_end":8075475,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2709}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8075678,"byte_end":8075690,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8075700,"byte_end":8075713,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078547,"byte_end":8078560,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2719},{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078865,"byte_end":8078879,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8079431,"byte_end":8079445,"line_start":220,"line_end":220,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2725}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8079605,"byte_end":8079619,"line_start":228,"line_end":228,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2730},{"krate":0,"index":2731}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8080440,"byte_end":8080453,"line_start":257,"line_end":257,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2733}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8080549,"byte_end":8080563,"line_start":263,"line_end":263,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2735}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8082698,"byte_end":8082707,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2774},{"krate":0,"index":2779},{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2803},{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8107513,"byte_end":8107522,"line_start":834,"line_end":834,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2822},{"krate":0,"index":2823}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8107958,"byte_end":8107967,"line_start":848,"line_end":848,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2825},{"krate":0,"index":2826}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8108320,"byte_end":8108329,"line_start":862,"line_end":862,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2828},{"krate":0,"index":2829}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8108643,"byte_end":8108652,"line_start":876,"line_end":876,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2834},{"krate":0,"index":2835}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8109396,"byte_end":8109405,"line_start":905,"line_end":905,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2837}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8109619,"byte_end":8109628,"line_start":916,"line_end":916,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2842}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8110634,"byte_end":8110643,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2906},{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2921},{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2955}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8124199,"byte_end":8124208,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2957},{"krate":0,"index":2958}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8124644,"byte_end":8124653,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2960},{"krate":0,"index":2961}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8124973,"byte_end":8124982,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2963}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8125201,"byte_end":8125210,"line_start":406,"line_end":406,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2968}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8127291,"byte_end":8127303,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2980}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8127506,"byte_end":8127518,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8128045,"byte_end":8128053,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129685,"byte_end":8129693,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2999}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8131013,"byte_end":8131021,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3004}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8131112,"byte_end":8131120,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3006}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8131936,"byte_end":8131948,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3049},{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3057},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8138571,"byte_end":8138583,"line_start":206,"line_end":206,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3083},{"krate":0,"index":3084}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8139025,"byte_end":8139037,"line_start":220,"line_end":220,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3086},{"krate":0,"index":3087}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8139366,"byte_end":8139378,"line_start":232,"line_end":232,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3089}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8139503,"byte_end":8139515,"line_start":238,"line_end":238,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3091}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8139873,"byte_end":8139881,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3102},{"krate":0,"index":3103}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8140613,"byte_end":8140621,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3105},{"krate":0,"index":3106}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8142748,"byte_end":8142760,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3129},{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3140}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8147264,"byte_end":8147276,"line_start":180,"line_end":180,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3142},{"krate":0,"index":3143}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8147592,"byte_end":8147604,"line_start":192,"line_end":192,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3145},{"krate":0,"index":3146}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8148046,"byte_end":8148058,"line_start":206,"line_end":206,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3148},{"krate":0,"index":3149}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8148378,"byte_end":8148390,"line_start":218,"line_end":218,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3151}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8148515,"byte_end":8148527,"line_start":224,"line_end":224,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3153}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8149519,"byte_end":8149527,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3169},{"krate":0,"index":3170}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8149847,"byte_end":8149856,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3174}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8150340,"byte_end":8150348,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8150444,"byte_end":8150453,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3178}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8151391,"byte_end":8151401,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3215},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222},{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3228}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8154734,"byte_end":8154744,"line_start":119,"line_end":119,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3230},{"krate":0,"index":3231}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8155182,"byte_end":8155192,"line_start":133,"line_end":133,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3233},{"krate":0,"index":3234}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8155505,"byte_end":8155515,"line_start":145,"line_end":145,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3236},{"krate":0,"index":3237}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8155829,"byte_end":8155839,"line_start":159,"line_end":159,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3241}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8156326,"byte_end":8156336,"line_start":178,"line_end":178,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3243},{"krate":0,"index":3244}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8157853,"byte_end":8157863,"line_start":223,"line_end":223,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3246}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8157988,"byte_end":8157998,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3248}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84289,"byte_end":84298,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84472,"byte_end":84481,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84630,"byte_end":84639,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":84983,"byte_end":84992,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85017,"byte_end":85026,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85036,"byte_end":85045,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85531,"byte_end":85540,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85825,"byte_end":85834,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86175,"byte_end":86184,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86209,"byte_end":86218,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86228,"byte_end":86237,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86416,"byte_end":86425,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86710,"byte_end":86719,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88834,"byte_end":88842,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88867,"byte_end":88875,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88885,"byte_end":88893,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89068,"byte_end":89076,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89360,"byte_end":89368,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89708,"byte_end":89719,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89744,"byte_end":89755,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89765,"byte_end":89776,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90459,"byte_end":90470,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90760,"byte_end":90771,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90935,"byte_end":90946,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/unsafe_cell.rs","byte_start":91134,"byte_end":91144,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8162355,"byte_end":8162361,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8163167,"byte_end":8163173,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3343}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8163387,"byte_end":8163393,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3347}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96248,"byte_end":96258,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96523,"byte_end":96533,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96992,"byte_end":96997,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101722,"byte_end":101732,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101841,"byte_end":101853,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":102240,"byte_end":102256,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3380}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103103,"byte_end":103119,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3391}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103660,"byte_end":103672,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3394}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103884,"byte_end":103889,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3396},{"krate":0,"index":3397}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95350,"byte_end":95353,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95442,"byte_end":95445,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/context.rs","byte_start":126539,"byte_end":126548,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8165519,"byte_end":8165533,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3472}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8169072,"byte_end":8169077,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3490}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8169764,"byte_end":8169778,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3494}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8170665,"byte_end":8170679,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3498}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8170845,"byte_end":8170852,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3500},{"krate":0,"index":3502}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8171310,"byte_end":8171317,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3504}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8171485,"byte_end":8171488,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3506},{"krate":0,"index":3508},{"krate":0,"index":3511}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8172586,"byte_end":8172592,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3514},{"krate":0,"index":3515}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8180275,"byte_end":8180281,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8180306,"byte_end":8180312,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8180671,"byte_end":8180675,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3571}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8181453,"byte_end":8181457,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3575},{"krate":0,"index":3577},{"krate":0,"index":3579},{"krate":0,"index":3581},{"krate":0,"index":3583},{"krate":0,"index":3585},{"krate":0,"index":3588},{"krate":0,"index":3590},{"krate":0,"index":3592}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8187839,"byte_end":8187848,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612},{"krate":0,"index":3613},{"krate":0,"index":3614},{"krate":0,"index":3615},{"krate":0,"index":3616}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190927,"byte_end":8190936,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3618}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8191179,"byte_end":8191188,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3620}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8191465,"byte_end":8191474,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8191508,"byte_end":8191513,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3623}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8192191,"byte_end":8192198,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3653},{"krate":0,"index":3654}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8192675,"byte_end":8192682,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3658},{"krate":0,"index":3669},{"krate":0,"index":3673},{"krate":0,"index":3676},{"krate":0,"index":3679},{"krate":0,"index":3680},{"krate":0,"index":3681},{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3686},{"krate":0,"index":3687},{"krate":0,"index":3688},{"krate":0,"index":3690}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8194853,"byte_end":8194858,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3668}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8207162,"byte_end":8207172,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8207209,"byte_end":8207219,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8207235,"byte_end":8207245,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3707}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8207421,"byte_end":8207431,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8207458,"byte_end":8207468,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3712},{"krate":0,"index":3713}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8208694,"byte_end":8208704,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3716}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8208970,"byte_end":8208980,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3719}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8210227,"byte_end":8210234,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3745},{"krate":0,"index":3748},{"krate":0,"index":3749},{"krate":0,"index":3750},{"krate":0,"index":3751},{"krate":0,"index":3752},{"krate":0,"index":3753},{"krate":0,"index":3754}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8211765,"byte_end":8211772,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3756}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8211862,"byte_end":8211869,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8214551,"byte_end":8214556,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3802},{"krate":0,"index":3804},{"krate":0,"index":3806},{"krate":0,"index":3808},{"krate":0,"index":3809},{"krate":0,"index":3811},{"krate":0,"index":3815},{"krate":0,"index":3817},{"krate":0,"index":3819},{"krate":0,"index":3821},{"krate":0,"index":3824},{"krate":0,"index":3825}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8223412,"byte_end":8223420,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3830},{"krate":0,"index":3831},{"krate":0,"index":3832},{"krate":0,"index":3833},{"krate":0,"index":3834},{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3837},{"krate":0,"index":3838},{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3841},{"krate":0,"index":3842},{"krate":0,"index":3843},{"krate":0,"index":3844},{"krate":0,"index":3845},{"krate":0,"index":3846}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8225297,"byte_end":8225302,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3848}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8225461,"byte_end":8225469,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3850}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/waker.rs","byte_start":8227287,"byte_end":8227295,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3876},{"krate":0,"index":3877}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8173605,"byte_end":8173609,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8173640,"byte_end":8173644,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8173781,"byte_end":8173789,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8173830,"byte_end":8173838,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8175762,"byte_end":8175766,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3928},{"krate":0,"index":3929}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8176658,"byte_end":8176662,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3932}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8176831,"byte_end":8176839,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3935},{"krate":0,"index":3936}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8177125,"byte_end":8177129,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3939}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8177369,"byte_end":8177373,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3942}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8177525,"byte_end":8177533,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3945}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8177749,"byte_end":8177753,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3950},{"krate":0,"index":3951},{"krate":0,"index":3952}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/mod.rs","byte_start":127778,"byte_end":127790,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3983},{"krate":0,"index":3984}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":129965,"byte_end":129972,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":137892,"byte_end":137899,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4001}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138448,"byte_end":138455,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4003}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138975,"byte_end":138982,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4005},{"krate":0,"index":4006}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142878,"byte_end":142885,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142964,"byte_end":142971,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":143766,"byte_end":143778,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":146656,"byte_end":146677,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4030}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":147507,"byte_end":147512,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4033}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149620,"byte_end":149625,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149755,"byte_end":149760,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150818,"byte_end":150824,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153920,"byte_end":153926,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4054},{"krate":0,"index":4056}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163286,"byte_end":163301,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163449,"byte_end":163464,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163622,"byte_end":163637,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":165926,"byte_end":165931,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":166537,"byte_end":166543,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/spawner.rs","byte_start":167159,"byte_end":167166,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4083}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115508,"byte_end":115515,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":171769,"byte_end":171775,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":173316,"byte_end":173326,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174173,"byte_end":174189,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4120}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174321,"byte_end":174337,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4122}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":176077,"byte_end":176083,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4127},{"krate":0,"index":4128}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8232893,"byte_end":8232896,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4157},{"krate":0,"index":4158}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8233618,"byte_end":8233626,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4165}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8233716,"byte_end":8233724,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4168},{"krate":0,"index":4170},{"krate":0,"index":4171}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8235877,"byte_end":8235884,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4178},{"krate":0,"index":4179}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8235992,"byte_end":8235999,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":4184}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8242071,"byte_end":8242080,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4222}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8242194,"byte_end":8242203,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4225},{"krate":0,"index":4227}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8242591,"byte_end":8242602,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4232}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8242888,"byte_end":8242898,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4234},{"krate":0,"index":4235},{"krate":0,"index":4236},{"krate":0,"index":4237},{"krate":0,"index":4238},{"krate":0,"index":4239},{"krate":0,"index":4240},{"krate":0,"index":4241},{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":4246}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8246694,"byte_end":8246704,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4252}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8249053,"byte_end":8249059,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4259}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8249344,"byte_end":8249350,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4261},{"krate":0,"index":4262}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255539,"byte_end":8255545,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4266},{"krate":0,"index":4271}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8257403,"byte_end":8257409,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4309},{"krate":0,"index":4310}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8292401,"byte_end":8292410,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4323}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8292556,"byte_end":8292565,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8292604,"byte_end":8292613,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4330},{"krate":0,"index":4331}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8293564,"byte_end":8293573,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4344}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8293719,"byte_end":8293728,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8293767,"byte_end":8293776,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4351},{"krate":0,"index":4352}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":8294699,"byte_end":8294704,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4366}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":8294884,"byte_end":8294889,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4370},{"krate":0,"index":4371},{"krate":0,"index":4373}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8296467,"byte_end":8296474,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4394}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8296758,"byte_end":8296765,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4398},{"krate":0,"index":4399}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8297741,"byte_end":8297747,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8297802,"byte_end":8297808,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4411},{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":4414}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8298197,"byte_end":8298200,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8298246,"byte_end":8298249,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4419},{"krate":0,"index":4420},{"krate":0,"index":4421},{"krate":0,"index":4422}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8298632,"byte_end":8298635,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8298683,"byte_end":8298686,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4429},{"krate":0,"index":4430}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8299201,"byte_end":8299207,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8299296,"byte_end":8299302,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4439},{"krate":0,"index":4440},{"krate":0,"index":4441},{"krate":0,"index":4442}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8300380,"byte_end":8300385,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8300433,"byte_end":8300438,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4447},{"krate":0,"index":4448},{"krate":0,"index":4449},{"krate":0,"index":4450}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8300838,"byte_end":8300846,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8300894,"byte_end":8300902,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4455},{"krate":0,"index":4456},{"krate":0,"index":4457},{"krate":0,"index":4458}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302173,"byte_end":8302178,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302209,"byte_end":8302214,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302245,"byte_end":8302250,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302793,"byte_end":8302798,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4487}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8303412,"byte_end":8303418,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4502}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8303636,"byte_end":8303642,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4506}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8303761,"byte_end":8303767,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4512}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8304853,"byte_end":8304862,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4525}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8305083,"byte_end":8305092,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4529}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8305214,"byte_end":8305223,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4534},{"krate":0,"index":4535},{"krate":0,"index":4536}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":8306295,"byte_end":8306305,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4550}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":8306501,"byte_end":8306511,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4555},{"krate":0,"index":4556}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":8307410,"byte_end":8307414,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4567}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":8307574,"byte_end":8307578,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4570},{"krate":0,"index":4571},{"krate":0,"index":4572}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308521,"byte_end":8308525,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8309187,"byte_end":8309191,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4586},{"krate":0,"index":4587},{"krate":0,"index":4588}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8309937,"byte_end":8309940,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4603}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8310129,"byte_end":8310132,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4607}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8310253,"byte_end":8310256,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4612},{"krate":0,"index":4613},{"krate":0,"index":4616}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":8311101,"byte_end":8311106,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4630}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":8311360,"byte_end":8311365,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4636}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8312877,"byte_end":8312881,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8312915,"byte_end":8312919,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4654}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8313060,"byte_end":8313064,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4657},{"krate":0,"index":4658}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313560,"byte_end":8313564,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8314191,"byte_end":8314195,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4676},{"krate":0,"index":4677},{"krate":0,"index":4678}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8314742,"byte_end":8314749,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8314780,"byte_end":8314787,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8314818,"byte_end":8314825,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315518,"byte_end":8315525,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4699},{"krate":0,"index":4700},{"krate":0,"index":4701}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321190,"byte_end":8321199,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4716},{"krate":0,"index":4717},{"krate":0,"index":4718},{"krate":0,"index":4721},{"krate":0,"index":4724},{"krate":0,"index":4727},{"krate":0,"index":4728},{"krate":0,"index":4729},{"krate":0,"index":4730},{"krate":0,"index":4731},{"krate":0,"index":4732},{"krate":0,"index":4734}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8328200,"byte_end":8328209,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4739}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8329748,"byte_end":8329757,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4744},{"krate":0,"index":4745},{"krate":0,"index":4746}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8330973,"byte_end":8330977,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4758}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8331187,"byte_end":8331191,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4761}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8331324,"byte_end":8331328,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4764},{"krate":0,"index":4765},{"krate":0,"index":4766}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8332554,"byte_end":8332563,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4780}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8332784,"byte_end":8332793,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4784}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8332978,"byte_end":8332987,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4788},{"krate":0,"index":4789},{"krate":0,"index":4790}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8334336,"byte_end":8334343,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8334377,"byte_end":8334384,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4806}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8334591,"byte_end":8334598,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":4811},{"krate":0,"index":4812}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8335208,"byte_end":8335212,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4825}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8335422,"byte_end":8335426,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4828}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8335559,"byte_end":8335563,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4831},{"krate":0,"index":4832},{"krate":0,"index":4834}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8337082,"byte_end":8337091,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4847}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8337351,"byte_end":8337360,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4851}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8337553,"byte_end":8337562,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4855},{"krate":0,"index":4856},{"krate":0,"index":4859}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":8368787,"byte_end":8368794,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4992}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":8369149,"byte_end":8369156,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4995},{"krate":0,"index":4996},{"krate":0,"index":4997}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8291631,"byte_end":8291633,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8415209,"byte_end":8415220,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5139},{"krate":0,"index":5140},{"krate":0,"index":5141},{"krate":0,"index":5142},{"krate":0,"index":5146},{"krate":0,"index":5147}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8421147,"byte_end":8421158,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5150}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8421244,"byte_end":8421255,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5152}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8421388,"byte_end":8421399,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8421424,"byte_end":8421435,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8421531,"byte_end":8421536,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5159},{"krate":0,"index":5160}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8387863,"byte_end":8387872,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5023}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8388034,"byte_end":8388043,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8388112,"byte_end":8388124,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5026}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8388423,"byte_end":8388435,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8390246,"byte_end":8390252,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5039},{"krate":0,"index":5042},{"krate":0,"index":5044},{"krate":0,"index":5049}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8396553,"byte_end":8396559,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5052}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8396698,"byte_end":8396706,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5055},{"krate":0,"index":5056}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8401097,"byte_end":8401105,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5059}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8401252,"byte_end":8401260,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5062},{"krate":0,"index":5063}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8401723,"byte_end":8401728,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5066},{"krate":0,"index":5067},{"krate":0,"index":5069},{"krate":0,"index":5070},{"krate":0,"index":5072},{"krate":0,"index":5076},{"krate":0,"index":5080},{"krate":0,"index":5082},{"krate":0,"index":5084},{"krate":0,"index":5086}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8406100,"byte_end":8406105,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8406142,"byte_end":8406147,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8406172,"byte_end":8406177,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5094}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8406546,"byte_end":8406551,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5098}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8406946,"byte_end":8406951,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5105},{"krate":0,"index":5106},{"krate":0,"index":5107},{"krate":0,"index":5108},{"krate":0,"index":5109},{"krate":0,"index":5110},{"krate":0,"index":5111},{"krate":0,"index":5112},{"krate":0,"index":5113},{"krate":0,"index":5114},{"krate":0,"index":5115},{"krate":0,"index":5116},{"krate":0,"index":5117}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8408664,"byte_end":8408669,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5119}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":8428065,"byte_end":8428070,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5256},{"krate":0,"index":5257},{"krate":0,"index":5258},{"krate":0,"index":5259},{"krate":0,"index":5261},{"krate":0,"index":5263},{"krate":0,"index":5264},{"krate":0,"index":5265},{"krate":0,"index":5267},{"krate":0,"index":5268},{"krate":0,"index":5269},{"krate":0,"index":5271},{"krate":0,"index":5272},{"krate":0,"index":5273}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":8438052,"byte_end":8438058,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5278}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":8438540,"byte_end":8438546,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5281},{"krate":0,"index":5282}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8439184,"byte_end":8439190,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5300}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8439322,"byte_end":8439328,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5303}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8439735,"byte_end":8439743,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5309}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8441515,"byte_end":8441523,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5315},{"krate":0,"index":5316},{"krate":0,"index":5321},{"krate":0,"index":5322},{"krate":0,"index":5323}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8443951,"byte_end":8443959,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8444019,"byte_end":8444027,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5780},{"krate":0,"index":5781}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8444215,"byte_end":8444221,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5328},{"krate":0,"index":5329},{"krate":0,"index":5334},{"krate":0,"index":5335},{"krate":0,"index":5340},{"krate":0,"index":5342}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8455611,"byte_end":8455613,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5377}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8456014,"byte_end":8456016,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5385}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8456323,"byte_end":8456332,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5388}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8456594,"byte_end":8456606,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5391}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8458301,"byte_end":8458305,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5413}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8458938,"byte_end":8458946,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5420}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8459212,"byte_end":8459216,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8459265,"byte_end":8459269,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8459748,"byte_end":8459750,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5433},{"krate":0,"index":5434},{"krate":0,"index":5435},{"krate":0,"index":5436}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8460448,"byte_end":8460450,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5439}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8460598,"byte_end":8460600,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5442}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8460778,"byte_end":8460780,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5446}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8461180,"byte_end":8461182,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5450}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8461591,"byte_end":8461593,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5454},{"krate":0,"index":5455},{"krate":0,"index":5457},{"krate":0,"index":5461}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8464713,"byte_end":8464715,"line_start":344,"line_end":344,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5467}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8465151,"byte_end":8465155,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5473}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8465619,"byte_end":8465623,"line_start":387,"line_end":387,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5477}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8466172,"byte_end":8466184,"line_start":404,"line_end":404,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5482}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8467784,"byte_end":8467795,"line_start":475,"line_end":475,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5501},{"krate":0,"index":5502},{"krate":0,"index":5503},{"krate":0,"index":5504},{"krate":0,"index":5505},{"krate":0,"index":5506},{"krate":0,"index":5508},{"krate":0,"index":5509},{"krate":0,"index":5510}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":8470512,"byte_end":8470514,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5540},{"krate":0,"index":5541},{"krate":0,"index":5542},{"krate":0,"index":5544}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":8476218,"byte_end":8476220,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5547}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":8476497,"byte_end":8476499,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5550},{"krate":0,"index":5551},{"krate":0,"index":5552},{"krate":0,"index":5553}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":8479898,"byte_end":8479900,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5556}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8480574,"byte_end":8480589,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5572}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8480730,"byte_end":8480745,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5575}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8481203,"byte_end":8481220,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5581}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8482198,"byte_end":8482215,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5587},{"krate":0,"index":5588},{"krate":0,"index":5589},{"krate":0,"index":5594},{"krate":0,"index":5595}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8484687,"byte_end":8484704,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5598},{"krate":0,"index":5599}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8484870,"byte_end":8484885,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5602},{"krate":0,"index":5603}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8485995,"byte_end":8486004,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5613}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8486164,"byte_end":8486173,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8486659,"byte_end":8486671,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8486704,"byte_end":8486716,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5620}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8487056,"byte_end":8487068,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5623}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8487297,"byte_end":8487306,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5625}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8487436,"byte_end":8487445,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8487931,"byte_end":8487943,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5628}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8488249,"byte_end":8488261,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8488418,"byte_end":8488429,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5631}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8488528,"byte_end":8488539,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5633}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8488669,"byte_end":8488680,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8489184,"byte_end":8489200,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8489237,"byte_end":8489253,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5837}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8494070,"byte_end":8494079,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5677},{"krate":0,"index":5678},{"krate":0,"index":5679},{"krate":0,"index":5682},{"krate":0,"index":5684},{"krate":0,"index":5688},{"krate":0,"index":5689},{"krate":0,"index":5690},{"krate":0,"index":5691},{"krate":0,"index":5696},{"krate":0,"index":5697},{"krate":0,"index":5698},{"krate":0,"index":5699}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8510273,"byte_end":8510282,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5701}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8510361,"byte_end":8510370,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5703}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8510748,"byte_end":8510757,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8510782,"byte_end":8510791,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8510829,"byte_end":8510835,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5708},{"krate":0,"index":5710},{"krate":0,"index":5711},{"krate":0,"index":5715},{"krate":0,"index":5717},{"krate":0,"index":5718}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8517241,"byte_end":8517247,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5721}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8517320,"byte_end":8517326,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5723}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8517748,"byte_end":8517760,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5725}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8517940,"byte_end":8517952,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5728}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8518096,"byte_end":8518108,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8518155,"byte_end":8518170,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5731},{"krate":0,"index":5732}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8518700,"byte_end":8518715,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5734}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8519001,"byte_end":8519016,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8519054,"byte_end":8519060,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5737},{"krate":0,"index":5738},{"krate":0,"index":5739},{"krate":0,"index":5740},{"krate":0,"index":5741},{"krate":0,"index":5742},{"krate":0,"index":5743},{"krate":0,"index":5744},{"krate":0,"index":5745}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8524473,"byte_end":8524481,"line_start":1034,"line_end":1034,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5747},{"krate":0,"index":5748},{"krate":0,"index":5749},{"krate":0,"index":5750},{"krate":0,"index":5751},{"krate":0,"index":5752},{"krate":0,"index":5753},{"krate":0,"index":5754},{"krate":0,"index":5755},{"krate":0,"index":5756},{"krate":0,"index":5757},{"krate":0,"index":5758},{"krate":0,"index":5759},{"krate":0,"index":5760},{"krate":0,"index":5761},{"krate":0,"index":5762}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8528144,"byte_end":8528152,"line_start":1172,"line_end":1172,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5764}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8528505,"byte_end":8528516,"line_start":1188,"line_end":1188,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5766},{"krate":0,"index":5767},{"krate":0,"index":5768},{"krate":0,"index":5769},{"krate":0,"index":5770},{"krate":0,"index":5771},{"krate":0,"index":5772},{"krate":0,"index":5773}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":8542290,"byte_end":8542298,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5923},{"krate":0,"index":5924}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8549430,"byte_end":8549438,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5958},{"krate":0,"index":5959},{"krate":0,"index":5961},{"krate":0,"index":5963},{"krate":0,"index":5967},{"krate":0,"index":5969},{"krate":0,"index":5972}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8557280,"byte_end":8557288,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5976}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8557427,"byte_end":8557435,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5978},{"krate":0,"index":5979}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8558400,"byte_end":8558408,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5982}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8558489,"byte_end":8558497,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5984}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8559364,"byte_end":8559372,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5988},{"krate":0,"index":5989}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8560257,"byte_end":8560263,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5993},{"krate":0,"index":5995}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8560826,"byte_end":8560829,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5997},{"krate":0,"index":5999},{"krate":0,"index":6002}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564244,"byte_end":8564252,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6025},{"krate":0,"index":6029},{"krate":0,"index":6032}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8566028,"byte_end":8566036,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6038}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8566244,"byte_end":8566252,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6042}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8566573,"byte_end":8566588,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6046},{"krate":0,"index":6047}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8566889,"byte_end":8566894,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6056}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8567512,"byte_end":8567513,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8567698,"byte_end":8567709,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6063}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8567853,"byte_end":8567864,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6065}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8568011,"byte_end":8568022,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/clock.rs","byte_start":8572607,"byte_end":8572612,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6568},{"krate":0,"index":6569},{"krate":0,"index":6570},{"krate":0,"index":6571}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583134,"byte_end":8583144,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6116},{"krate":0,"index":6117},{"krate":0,"index":6118},{"krate":0,"index":6119},{"krate":0,"index":6122},{"krate":0,"index":6123},{"krate":0,"index":6127},{"krate":0,"index":6129},{"krate":0,"index":6130},{"krate":0,"index":6132},{"krate":0,"index":6133},{"krate":0,"index":6134},{"krate":0,"index":6135},{"krate":0,"index":6136},{"krate":0,"index":6137},{"krate":0,"index":6138},{"krate":0,"index":6140}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8600787,"byte_end":8600797,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8600825,"byte_end":8600835,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6145}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8600972,"byte_end":8600982,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6148},{"krate":0,"index":6149}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8601364,"byte_end":8601369,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6152},{"krate":0,"index":6153},{"krate":0,"index":6154},{"krate":0,"index":6155},{"krate":0,"index":6156},{"krate":0,"index":6157},{"krate":0,"index":6158},{"krate":0,"index":6159}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8603496,"byte_end":8603501,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6162}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8603631,"byte_end":8603634,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":6164}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8603721,"byte_end":8603728,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6167},{"krate":0,"index":6168},{"krate":0,"index":6169},{"krate":0,"index":6170}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8606266,"byte_end":8606271,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6185},{"krate":0,"index":6186},{"krate":0,"index":6187},{"krate":0,"index":6188}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8607249,"byte_end":8607254,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6190},{"krate":0,"index":6191}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":8620578,"byte_end":8620589,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6206},{"krate":0,"index":6207},{"krate":0,"index":6208},{"krate":0,"index":6209}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":8622567,"byte_end":8622585,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6211},{"krate":0,"index":6212}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":8623157,"byte_end":8623175,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6214}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":8627148,"byte_end":8627153,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6240},{"krate":0,"index":6241},{"krate":0,"index":6242},{"krate":0,"index":6243},{"krate":0,"index":6244},{"krate":0,"index":6245},{"krate":0,"index":6246},{"krate":0,"index":6247},{"krate":0,"index":6248},{"krate":0,"index":6249},{"krate":0,"index":6250},{"krate":0,"index":6251},{"krate":0,"index":6252},{"krate":0,"index":6253}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":8633381,"byte_end":8633386,"line_start":329,"line_end":329,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6256}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":8633594,"byte_end":8633599,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":8633624,"byte_end":8633629,"line_start":341,"line_end":341,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":8634006,"byte_end":8634012,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6268},{"krate":0,"index":6269},{"krate":0,"index":6270}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":8634657,"byte_end":8634663,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6272}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":8635108,"byte_end":8635120,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6287},{"krate":0,"index":6288},{"krate":0,"index":6289},{"krate":0,"index":6290},{"krate":0,"index":6291}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":8636030,"byte_end":8636042,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6294}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":8636326,"byte_end":8636331,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6302}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":8636422,"byte_end":8636427,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6304},{"krate":0,"index":6305},{"krate":0,"index":6306},{"krate":0,"index":6307},{"krate":0,"index":6308},{"krate":0,"index":6309},{"krate":0,"index":6310},{"krate":0,"index":6311}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":8612144,"byte_end":8612150,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6345},{"krate":0,"index":6346},{"krate":0,"index":6347},{"krate":0,"index":6348},{"krate":0,"index":6349},{"krate":0,"index":6350},{"krate":0,"index":6351}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":8615799,"byte_end":8615805,"line_start":234,"line_end":234,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6355},{"krate":0,"index":6356},{"krate":0,"index":6357},{"krate":0,"index":6358},{"krate":0,"index":6359}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":8617794,"byte_end":8617800,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6362}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":8618277,"byte_end":8618282,"line_start":327,"line_end":327,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6365},{"krate":0,"index":6366},{"krate":0,"index":6367},{"krate":0,"index":6368},{"krate":0,"index":6369},{"krate":0,"index":6370}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":8619899,"byte_end":8619904,"line_start":389,"line_end":389,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6372}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8640699,"byte_end":8640704,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6378},{"krate":0,"index":6379},{"krate":0,"index":6380},{"krate":0,"index":6381}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8641419,"byte_end":8641424,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8641451,"byte_end":8641456,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6384}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642162,"byte_end":8642169,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6392},{"krate":0,"index":6393},{"krate":0,"index":6394},{"krate":0,"index":6395},{"krate":0,"index":6396},{"krate":0,"index":6397},{"krate":0,"index":6398},{"krate":0,"index":6399},{"krate":0,"index":6400}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8645943,"byte_end":8645950,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6402}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8646079,"byte_end":8646086,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6404}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8646201,"byte_end":8646208,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6406},{"krate":0,"index":6407}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8646373,"byte_end":8646380,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6409}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8646485,"byte_end":8646492,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6411},{"krate":0,"index":6412}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8646633,"byte_end":8646640,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6414},{"krate":0,"index":6415}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8646801,"byte_end":8646808,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6417}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8646915,"byte_end":8646922,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6419}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8650658,"byte_end":8650666,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6439},{"krate":0,"index":6440}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651961,"byte_end":8651969,"line_start":164,"line_end":164,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6445},{"krate":0,"index":6446}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8655301,"byte_end":8655308,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6469}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8655437,"byte_end":8655444,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6472},{"krate":0,"index":6473},{"krate":0,"index":6474},{"krate":0,"index":6475}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8655982,"byte_end":8655989,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6478},{"krate":0,"index":6479}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8656567,"byte_end":8656574,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6481}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8656718,"byte_end":8656725,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8656762,"byte_end":8656767,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6484}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8674907,"byte_end":8674915,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6742},{"krate":0,"index":6743},{"krate":0,"index":6744}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8675730,"byte_end":8675738,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6747},{"krate":0,"index":6748}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":8666671,"byte_end":8666676,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6503},{"krate":0,"index":6505},{"krate":0,"index":6506},{"krate":0,"index":6507},{"krate":0,"index":6508},{"krate":0,"index":6509}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":8671428,"byte_end":8671433,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6512}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":8658492,"byte_end":8658497,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6537},{"krate":0,"index":6538},{"krate":0,"index":6539},{"krate":0,"index":6540},{"krate":0,"index":6541},{"krate":0,"index":6543},{"krate":0,"index":6545},{"krate":0,"index":6546},{"krate":0,"index":6547},{"krate":0,"index":6548},{"krate":0,"index":6549},{"krate":0,"index":6550}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":8664205,"byte_end":8664209,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6553}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":8676571,"byte_end":8676575,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6783},{"krate":0,"index":6784},{"krate":0,"index":6785},{"krate":0,"index":6786},{"krate":0,"index":6787},{"krate":0,"index":6788},{"krate":0,"index":6789}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":8678049,"byte_end":8678053,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6791}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/addr.rs","byte_start":8685272,"byte_end":8685279,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6810},{"krate":0,"index":6811},{"krate":0,"index":6812},{"krate":0,"index":6813},{"krate":0,"index":6814},{"krate":0,"index":6815},{"krate":0,"index":6816},{"krate":0,"index":6817}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/generation.rs","byte_start":8688308,"byte_end":8688318,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6829},{"krate":0,"index":6830},{"krate":0,"index":6831},{"krate":0,"index":6832},{"krate":0,"index":6833}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":8689457,"byte_end":8689462,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6854},{"krate":0,"index":6855},{"krate":0,"index":6857}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":8689804,"byte_end":8689810,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6861},{"krate":0,"index":6862},{"krate":0,"index":6864},{"krate":0,"index":6867},{"krate":0,"index":6870},{"krate":0,"index":6873}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":8693762,"byte_end":8693767,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6878}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":8694073,"byte_end":8694079,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6882}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":8696222,"byte_end":8696227,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6896},{"krate":0,"index":6899},{"krate":0,"index":6900},{"krate":0,"index":6901},{"krate":0,"index":6902},{"krate":0,"index":6903}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":8697906,"byte_end":8697911,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6906}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/slot.rs","byte_start":8698288,"byte_end":8698292,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6919},{"krate":0,"index":6920},{"krate":0,"index":6921},{"krate":0,"index":6922},{"krate":0,"index":6923},{"krate":0,"index":6925}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":8699263,"byte_end":8699276,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6937},{"krate":0,"index":6938},{"krate":0,"index":6939}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":8700104,"byte_end":8700117,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6942}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":8679651,"byte_end":8679655,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":8679692,"byte_end":8679696,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":8679719,"byte_end":8679723,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6959},{"krate":0,"index":6960},{"krate":0,"index":6961},{"krate":0,"index":6962}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":8681238,"byte_end":8681242,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6965}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180390,"byte_end":180400,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180459,"byte_end":180469,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181758,"byte_end":181766,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181803,"byte_end":181811,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181865,"byte_end":181875,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":184879,"byte_end":184889,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186227,"byte_end":186235,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186434,"byte_end":186442,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/rand.rs","byte_start":196514,"byte_end":196522,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198384,"byte_end":198392,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202358,"byte_end":202366,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202616,"byte_end":202624,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202729,"byte_end":202737,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Inherent","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":203046,"byte_end":203056,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14158,"byte_end":14164,"line_start":347,"line_end":347,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/mod.rs","byte_start":16275,"byte_end":16282,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":79}},{"kind":"Mod","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14219,"byte_end":14225,"line_start":354,"line_end":354,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":83}},{"kind":"Mod","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14236,"byte_end":14238,"line_start":356,"line_end":356,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":177}},{"kind":"Mod","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14248,"byte_end":14251,"line_start":357,"line_end":357,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":308}},{"kind":"Mod","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72787,"byte_end":72790,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2582}},{"kind":"Mod","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72894,"byte_end":72897,"line_start":40,"line_end":40,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2885}},{"kind":"Mod","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72961,"byte_end":72965,"line_start":45,"line_end":45,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":3030}},{"kind":"Mod","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14283,"byte_end":14290,"line_start":362,"line_end":362,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":556}},{"kind":"Mod","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14340,"byte_end":14347,"line_start":368,"line_end":368,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":562}},{"kind":"Mod","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14398,"byte_end":14404,"line_start":373,"line_end":373,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":4129}},{"kind":"Mod","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8230063,"byte_end":8230067,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4190}},{"kind":"Mod","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14435,"byte_end":14441,"line_start":377,"line_end":377,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":4311}},{"kind":"Mod","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14538,"byte_end":14542,"line_start":388,"line_end":388,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5898}},{"kind":"Mod","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14596,"byte_end":14600,"line_start":393,"line_end":393,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6092}},{"kind":"Mod","span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":8570896,"byte_end":8570907,"line_start":99,"line_end":99,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":6095}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29721,"byte_end":29730,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":57},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29746,"byte_end":29755,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":30105,"byte_end":30110,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":68},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31866,"byte_end":31875,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":874},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32038,"byte_end":32047,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":33234,"byte_end":33243,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":874},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33997,"byte_end":34003,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34217,"byte_end":34223,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34365,"byte_end":34371,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34902,"byte_end":34907,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34934,"byte_end":34939,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/try_join.rs","byte_start":36136,"byte_end":36144,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":894},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47374,"byte_end":47383,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49833,"byte_end":49836,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49996,"byte_end":49999,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":30110},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":50628,"byte_end":50634,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":6696},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56598,"byte_end":56601,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56744,"byte_end":56747,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":30110},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":57543,"byte_end":57549,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":6696},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59975,"byte_end":59978,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":246}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60121,"byte_end":60124,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":30110},"to":{"krate":0,"index":246}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60578,"byte_end":60584,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":6696},"to":{"krate":0,"index":246}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68489,"byte_end":68492,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68640,"byte_end":68643,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":30110},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69212,"byte_end":69215,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":4232},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69723,"byte_end":69729,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":6696},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70242,"byte_end":70248,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":6696},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70764,"byte_end":70770,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":6696},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":71281,"byte_end":71287,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":6696},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":7847524,"byte_end":7847535,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1153},"to":{"krate":0,"index":6821}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":7848294,"byte_end":7848305,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1153},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":7848512,"byte_end":7848523,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":7851145,"byte_end":7851156,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1153},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":7836893,"byte_end":7836899,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":7839760,"byte_end":7839766,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1021},"to":{"krate":0,"index":544}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":7840134,"byte_end":7840140,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":7840276,"byte_end":7840282,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":7841425,"byte_end":7841431,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1159},"to":{"krate":0,"index":550}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":7841509,"byte_end":7841515,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1159},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":7841650,"byte_end":7841655,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":7843199,"byte_end":7843208,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7857714,"byte_end":7857725,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7865516,"byte_end":7865527,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1179},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7866020,"byte_end":7866031,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1179},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7867112,"byte_end":7867123,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1179},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":7867296,"byte_end":7867307,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1179},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7869455,"byte_end":7869467,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7880337,"byte_end":7880349,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7880374,"byte_end":7880386,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":7880405,"byte_end":7880417,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7882199,"byte_end":7882207,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7883124,"byte_end":7883133,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7883383,"byte_end":7883391,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1302},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7883946,"byte_end":7883955,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7884904,"byte_end":7884909,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7885302,"byte_end":7885307,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7885560,"byte_end":7885565,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1211},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7885688,"byte_end":7885696,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1302},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7885733,"byte_end":7885742,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7885779,"byte_end":7885787,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1302},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7885824,"byte_end":7885833,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7885876,"byte_end":7885884,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1302},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":7886052,"byte_end":7886061,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":7886751,"byte_end":7886755,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1310},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":7889672,"byte_end":7889684,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":186},"to":{"krate":0,"index":2000}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":7898705,"byte_end":7898706,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1334},"to":{"krate":0,"index":2000}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7900733,"byte_end":7900742,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":2008}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":7937991,"byte_end":7937992,"line_start":1112,"line_end":1112,"column_start":46,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1381},"to":{"krate":0,"index":2008}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7938871,"byte_end":7938880,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":246},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":7939750,"byte_end":7939751,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1392},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7941808,"byte_end":7941818,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":271},"to":{"krate":0,"index":2060}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":7975028,"byte_end":7975029,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1433},"to":{"krate":0,"index":2060}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7976445,"byte_end":7976454,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":9726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7978633,"byte_end":7978642,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":9726},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7979618,"byte_end":7979627,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":9726},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7980458,"byte_end":7980467,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":9726},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":7981183,"byte_end":7981192,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":9726},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7982699,"byte_end":7982708,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":9712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7984545,"byte_end":7984554,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":9712},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7984696,"byte_end":7984705,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":9712},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7985417,"byte_end":7985426,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":9712},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7985956,"byte_end":7985965,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":9712},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":7986444,"byte_end":7986453,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":9712},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7988407,"byte_end":7988416,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":9649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7990694,"byte_end":7990703,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":9649},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7991593,"byte_end":7991602,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":9649},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7992084,"byte_end":7992093,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":9649},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":7992380,"byte_end":7992389,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":9649},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7993558,"byte_end":7993563,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":9600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7994703,"byte_end":7994708,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":9600},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7994987,"byte_end":7994992,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":9600},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":7995815,"byte_end":7995820,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":9600},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":7998863,"byte_end":7998867,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2110},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8001977,"byte_end":8001982,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2126},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8002311,"byte_end":8002316,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2126},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8002549,"byte_end":8002554,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2126},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/flush.rs","byte_start":8003375,"byte_end":8003380,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2129},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8004560,"byte_end":8004565,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":9577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8005817,"byte_end":8005822,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":9577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8006569,"byte_end":8006574,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":9577},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8007972,"byte_end":8007976,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2137},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8009037,"byte_end":8009044,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2146},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8010409,"byte_end":8010418,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2157},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8017953,"byte_end":8017961,"line_start":85,"line_end":85,"column_start":51,"column_end":59},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2311},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8019187,"byte_end":8019192,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1784},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8020868,"byte_end":8020877,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2322},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8022941,"byte_end":8022953,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2332},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8025605,"byte_end":8025614,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2343},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8027448,"byte_end":8027454,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2355},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/shutdown.rs","byte_start":8028576,"byte_end":8028584,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2359},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8030417,"byte_end":8030421,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2367},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8030931,"byte_end":8030935,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2367},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8031900,"byte_end":8031905,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":8743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8032644,"byte_end":8032649,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":8743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8033428,"byte_end":8033433,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":8743},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8046972,"byte_end":8046984,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":8697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8047489,"byte_end":8047501,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":8697},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8049040,"byte_end":8049052,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":8697},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8034601,"byte_end":8034605,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":8652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8036233,"byte_end":8036237,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":8652},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8036894,"byte_end":8036898,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":8652},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8038455,"byte_end":8038460,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2408},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8039253,"byte_end":8039261,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2417},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8040769,"byte_end":8040777,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2426},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73921,"byte_end":73938,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":368},"to":{"krate":0,"index":319}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74388,"byte_end":74398,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":1,"index":6850},"to":{"krate":0,"index":319}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74438,"byte_end":74448,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"kind":{"Impl":{"id":120}},"from":{"krate":1,"index":6850},"to":{"krate":0,"index":368}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74729,"byte_end":74741,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"kind":{"Impl":{"id":121}},"from":{"krate":1,"index":6880},"to":{"krate":0,"index":319}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74781,"byte_end":74793,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"kind":{"Impl":{"id":122}},"from":{"krate":1,"index":6880},"to":{"krate":0,"index":368}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75053,"byte_end":75065,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"kind":{"Impl":{"id":123}},"from":{"krate":1,"index":6883},"to":{"krate":0,"index":319}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75105,"byte_end":75117,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"kind":{"Impl":{"id":124}},"from":{"krate":1,"index":6883},"to":{"krate":0,"index":368}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8052973,"byte_end":8052984,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8063688,"byte_end":8063699,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2846},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8064014,"byte_end":8064025,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"kind":{"Impl":{"id":127}},"from":{"krate":18,"index":1044},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8064465,"byte_end":8064476,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2846},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8064802,"byte_end":8064813,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2846},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8065029,"byte_end":8065040,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2846},"to":{"krate":1,"index":8325}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8065872,"byte_end":8065880,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8066518,"byte_end":8066526,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2848},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8068676,"byte_end":8068684,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8071139,"byte_end":8071147,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2854},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8071467,"byte_end":8071476,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2861},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8072289,"byte_end":8072297,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2854},"to":{"krate":2,"index":1836}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8072391,"byte_end":8072400,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2861},"to":{"krate":2,"index":1836}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8075463,"byte_end":8075475,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2877},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8075678,"byte_end":8075690,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2877},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8075700,"byte_end":8075713,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078547,"byte_end":8078560,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2868},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8078865,"byte_end":8078879,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8079431,"byte_end":8079445,"line_start":220,"line_end":220,"column_start":15,"column_end":29},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2872},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8079605,"byte_end":8079619,"line_start":228,"line_end":228,"column_start":21,"column_end":35},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2872},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8080440,"byte_end":8080453,"line_start":257,"line_end":257,"column_start":27,"column_end":40},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2868},"to":{"krate":2,"index":1836}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8080549,"byte_end":8080563,"line_start":263,"line_end":263,"column_start":27,"column_end":41},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2872},"to":{"krate":2,"index":1836}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8082698,"byte_end":8082707,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8107513,"byte_end":8107522,"line_start":834,"line_end":834,"column_start":39,"column_end":48},"kind":{"Impl":{"id":148}},"from":{"krate":18,"index":988},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8107958,"byte_end":8107967,"line_start":848,"line_end":848,"column_start":34,"column_end":43},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2883},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8108320,"byte_end":8108329,"line_start":862,"line_end":862,"column_start":20,"column_end":29},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2883},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8108643,"byte_end":8108652,"line_start":876,"line_end":876,"column_start":21,"column_end":30},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2883},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8109396,"byte_end":8109405,"line_start":905,"line_end":905,"column_start":21,"column_end":30},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2883},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8109619,"byte_end":8109628,"line_start":916,"line_end":916,"column_start":22,"column_end":31},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2883},"to":{"krate":1,"index":8325}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8110634,"byte_end":8110643,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8124199,"byte_end":8124208,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"kind":{"Impl":{"id":155}},"from":{"krate":18,"index":1102},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8124644,"byte_end":8124653,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3012},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8124973,"byte_end":8124982,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3012},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8125201,"byte_end":8125210,"line_start":406,"line_end":406,"column_start":22,"column_end":31},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3012},"to":{"krate":1,"index":8325}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8127291,"byte_end":8127303,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8127506,"byte_end":8127518,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3024},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8128045,"byte_end":8128053,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8129685,"byte_end":8129693,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8131013,"byte_end":8131021,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3014},"to":{"krate":2,"index":1836}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8131112,"byte_end":8131120,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3019},"to":{"krate":2,"index":1836}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8131936,"byte_end":8131948,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8138571,"byte_end":8138583,"line_start":206,"line_end":206,"column_start":41,"column_end":53},"kind":{"Impl":{"id":166}},"from":{"krate":26,"index":181},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8139025,"byte_end":8139037,"line_start":220,"line_end":220,"column_start":37,"column_end":49},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3266},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8139366,"byte_end":8139378,"line_start":232,"line_end":232,"column_start":21,"column_end":33},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3266},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8139503,"byte_end":8139515,"line_start":238,"line_end":238,"column_start":18,"column_end":30},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3266},"to":{"krate":1,"index":8325}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8139873,"byte_end":8139881,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8140613,"byte_end":8140621,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3268},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8142748,"byte_end":8142760,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8147264,"byte_end":8147276,"line_start":180,"line_end":180,"column_start":32,"column_end":44},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3274},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8147592,"byte_end":8147604,"line_start":192,"line_end":192,"column_start":41,"column_end":53},"kind":{"Impl":{"id":174}},"from":{"krate":26,"index":185},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8148046,"byte_end":8148058,"line_start":206,"line_end":206,"column_start":37,"column_end":49},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3274},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8148378,"byte_end":8148390,"line_start":218,"line_end":218,"column_start":21,"column_end":33},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3274},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8148515,"byte_end":8148527,"line_start":224,"line_end":224,"column_start":18,"column_end":30},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3274},"to":{"krate":1,"index":8325}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8149519,"byte_end":8149527,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3276},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8149847,"byte_end":8149856,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3283},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8150340,"byte_end":8150348,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3276},"to":{"krate":2,"index":1836}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8150444,"byte_end":8150453,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3283},"to":{"krate":2,"index":1836}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8151391,"byte_end":8151401,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8154734,"byte_end":8154744,"line_start":119,"line_end":119,"column_start":39,"column_end":49},"kind":{"Impl":{"id":183}},"from":{"krate":26,"index":189},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8155182,"byte_end":8155192,"line_start":133,"line_end":133,"column_start":35,"column_end":45},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3290},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8155505,"byte_end":8155515,"line_start":145,"line_end":145,"column_start":20,"column_end":30},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3290},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8155829,"byte_end":8155839,"line_start":159,"line_end":159,"column_start":21,"column_end":31},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3290},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8156326,"byte_end":8156336,"line_start":178,"line_end":178,"column_start":6,"column_end":16},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8157853,"byte_end":8157863,"line_start":223,"line_end":223,"column_start":21,"column_end":31},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3290},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8157988,"byte_end":8157998,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3290},"to":{"krate":1,"index":8325}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84289,"byte_end":84298,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84472,"byte_end":84481,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84630,"byte_end":84639,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":84983,"byte_end":84992,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85017,"byte_end":85026,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85036,"byte_end":85045,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85531,"byte_end":85540,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85825,"byte_end":85834,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86175,"byte_end":86184,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86209,"byte_end":86218,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86228,"byte_end":86237,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86416,"byte_end":86425,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86710,"byte_end":86719,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88834,"byte_end":88842,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88867,"byte_end":88875,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88885,"byte_end":88893,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89068,"byte_end":89076,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89360,"byte_end":89368,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89708,"byte_end":89719,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89744,"byte_end":89755,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89765,"byte_end":89776,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90459,"byte_end":90470,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90760,"byte_end":90771,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2111}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90935,"byte_end":90946,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/unsafe_cell.rs","byte_start":91134,"byte_end":91144,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8162355,"byte_end":8162361,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3323},"to":{"krate":0,"index":544}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8163167,"byte_end":8163173,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3323},"to":{"krate":0,"index":550}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8163387,"byte_end":8163393,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3323},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96248,"byte_end":96258,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96523,"byte_end":96533,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3349},"to":{"krate":0,"index":544}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96992,"byte_end":96997,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101722,"byte_end":101732,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3349},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101841,"byte_end":101853,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3353},"to":{"krate":0,"index":550}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":102240,"byte_end":102256,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103103,"byte_end":103119,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3403},"to":{"krate":0,"index":544}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103660,"byte_end":103672,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103884,"byte_end":103889,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":94870,"byte_end":94874,"line_start":94,"line_end":94,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1939},"to":{"krate":0,"index":550}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":94877,"byte_end":94881,"line_start":94,"line_end":94,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1927},"to":{"krate":0,"index":550}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95350,"byte_end":95353,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"kind":{"Impl":{"id":227}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":550}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95442,"byte_end":95445,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"kind":{"Impl":{"id":228}},"from":{"krate":5,"index":3905},"to":{"krate":0,"index":550}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/context.rs","byte_start":126539,"byte_end":126548,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":571},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8165519,"byte_end":8165533,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8169072,"byte_end":8169077,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3483},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8169764,"byte_end":8169778,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3448},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8170665,"byte_end":8170679,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3448},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8170845,"byte_end":8170852,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8171310,"byte_end":8171317,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3954},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8171485,"byte_end":8171488,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"kind":{"Impl":{"id":236}},"from":{"krate":5,"index":3905},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8172586,"byte_end":8172592,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3457},"to":{"krate":0,"index":815}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8180275,"byte_end":8180281,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3548},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8180306,"byte_end":8180312,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3548},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8180671,"byte_end":8180675,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8181453,"byte_end":8181457,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8187839,"byte_end":8187848,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8190927,"byte_end":8190936,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3963},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8191179,"byte_end":8191188,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3963},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8191465,"byte_end":8191474,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3963},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8191508,"byte_end":8191513,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"kind":{"Impl":{"id":246}},"from":{"krate":1,"index":2541},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8192191,"byte_end":8192198,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8192675,"byte_end":8192682,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8194853,"byte_end":8194858,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3660},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8207162,"byte_end":8207172,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3965},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8207209,"byte_end":8207219,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3965},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8207235,"byte_end":8207245,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8207421,"byte_end":8207431,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3965},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8207458,"byte_end":8207468,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3965},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8208694,"byte_end":8208704,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3965},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8208970,"byte_end":8208980,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3965},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8210227,"byte_end":8210234,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8211765,"byte_end":8211772,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3733},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8211862,"byte_end":8211869,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3733},"to":{"krate":2,"index":1937}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8214551,"byte_end":8214556,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8223412,"byte_end":8223420,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8225297,"byte_end":8225302,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3782},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8225461,"byte_end":8225469,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3969},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/waker.rs","byte_start":8227287,"byte_end":8227295,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3866},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8173605,"byte_end":8173609,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8173640,"byte_end":8173644,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8173781,"byte_end":8173789,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3908},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8173830,"byte_end":8173838,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3908},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8173963,"byte_end":8173967,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1939},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8173970,"byte_end":8173975,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1932},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8175762,"byte_end":8175766,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8176658,"byte_end":8176662,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8176831,"byte_end":8176839,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8177125,"byte_end":8177129,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8177369,"byte_end":8177373,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8177525,"byte_end":8177533,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3908},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8177749,"byte_end":8177753,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3900},"to":{"krate":0,"index":768}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/mod.rs","byte_start":127778,"byte_end":127790,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":129965,"byte_end":129972,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":137892,"byte_end":137899,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138448,"byte_end":138455,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138975,"byte_end":138982,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142878,"byte_end":142885,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142964,"byte_end":142971,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":143766,"byte_end":143778,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":146656,"byte_end":146677,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4026},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":147507,"byte_end":147512,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149620,"byte_end":149625,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149755,"byte_end":149760,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150818,"byte_end":150824,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":4043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153920,"byte_end":153926,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163286,"byte_end":163301,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163449,"byte_end":163464,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163622,"byte_end":163637,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":660},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":165926,"byte_end":165931,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":166537,"byte_end":166543,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4064},"to":{"krate":0,"index":815}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/spawner.rs","byte_start":167159,"byte_end":167166,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115508,"byte_end":115515,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":171769,"byte_end":171775,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":173316,"byte_end":173326,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":747},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174173,"byte_end":174189,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174321,"byte_end":174337,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4116},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":176077,"byte_end":176083,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8232893,"byte_end":8232896,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"kind":{"Impl":{"id":302}},"from":{"krate":5,"index":4232},"to":{"krate":0,"index":4151}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8233618,"byte_end":8233626,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8233716,"byte_end":8233724,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8235877,"byte_end":8235884,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4174},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8235992,"byte_end":8235999,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8242071,"byte_end":8242080,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4219},"to":{"krate":0,"index":4161}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8242194,"byte_end":8242203,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4219},"to":{"krate":0,"index":4151}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8242591,"byte_end":8242602,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4286},"to":{"krate":0,"index":4161}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8242888,"byte_end":8242898,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8246694,"byte_end":8246704,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4247},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8249053,"byte_end":8249059,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8249344,"byte_end":8249350,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8255539,"byte_end":8255545,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8257403,"byte_end":8257409,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4303},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8292401,"byte_end":8292410,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4899},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8292556,"byte_end":8292565,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4899},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":8292604,"byte_end":8292613,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4899},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8293564,"byte_end":8293573,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8293719,"byte_end":8293728,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4910},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":8293767,"byte_end":8293776,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4910},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":8294699,"byte_end":8294704,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":7779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":8294884,"byte_end":8294889,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":7779},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8296434,"byte_end":8296448,"line_start":36,"line_end":36,"column_start":34,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":4460},"to":{"krate":0,"index":4389}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8296467,"byte_end":8296474,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":7758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8296758,"byte_end":8296765,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":7758},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8297741,"byte_end":8297747,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"kind":{"Impl":{"id":326}},"from":{"krate":5,"index":4932},"to":{"krate":0,"index":4389}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8297802,"byte_end":8297808,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"kind":{"Impl":{"id":327}},"from":{"krate":5,"index":4932},"to":{"krate":0,"index":4460}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8298197,"byte_end":8298200,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"kind":{"Impl":{"id":328}},"from":{"krate":5,"index":4232},"to":{"krate":0,"index":4389}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8298246,"byte_end":8298249,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"kind":{"Impl":{"id":329}},"from":{"krate":5,"index":4232},"to":{"krate":0,"index":4460}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8298632,"byte_end":8298635,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"kind":{"Impl":{"id":330}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":4389}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8298683,"byte_end":8298686,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"kind":{"Impl":{"id":331}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":4460}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8299201,"byte_end":8299207,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"kind":{"Impl":{"id":332}},"from":{"krate":2,"index":30124},"to":{"krate":0,"index":4389}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8299296,"byte_end":8299302,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"kind":{"Impl":{"id":333}},"from":{"krate":2,"index":30124},"to":{"krate":0,"index":4460}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8300380,"byte_end":8300385,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"kind":{"Impl":{"id":334}},"from":{"krate":16,"index":341},"to":{"krate":0,"index":4389}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8300433,"byte_end":8300438,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"kind":{"Impl":{"id":335}},"from":{"krate":16,"index":341},"to":{"krate":0,"index":4460}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8300838,"byte_end":8300846,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"kind":{"Impl":{"id":336}},"from":{"krate":16,"index":535},"to":{"krate":0,"index":4389}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":8300894,"byte_end":8300902,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"kind":{"Impl":{"id":337}},"from":{"krate":16,"index":535},"to":{"krate":0,"index":4460}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302173,"byte_end":8302178,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302209,"byte_end":8302214,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302245,"byte_end":8302250,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":8302793,"byte_end":8302798,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4921},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8303412,"byte_end":8303418,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":7685},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8303636,"byte_end":8303642,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":7685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":8303761,"byte_end":8303767,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":7685},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8304853,"byte_end":8304862,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":7640},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8305083,"byte_end":8305092,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":7640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":8305214,"byte_end":8305223,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":7640},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":8306295,"byte_end":8306305,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":7612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":8306501,"byte_end":8306511,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":7612},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":8307410,"byte_end":8307414,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":7564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":8307574,"byte_end":8307578,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":7564},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8308521,"byte_end":8308525,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4928},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":8309187,"byte_end":8309191,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4928},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8309937,"byte_end":8309940,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":7497},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8310129,"byte_end":8310132,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":7497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":8310253,"byte_end":8310256,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":7497},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":8311101,"byte_end":8311106,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":7448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":8311360,"byte_end":8311365,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":7448},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8312877,"byte_end":8312881,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4934},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8312915,"byte_end":8312919,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":8313060,"byte_end":8313064,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":4934},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8313560,"byte_end":8313564,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4942},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":8314191,"byte_end":8314195,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4942},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8314742,"byte_end":8314749,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4948},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8314780,"byte_end":8314787,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4948},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8314818,"byte_end":8314825,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4948},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":8315518,"byte_end":8315525,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4948},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8321190,"byte_end":8321199,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8328200,"byte_end":8328209,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":4955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":8329748,"byte_end":8329757,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":4955},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8330973,"byte_end":8330977,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":7411},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8331187,"byte_end":8331191,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":7411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":8331324,"byte_end":8331328,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":7411},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8332554,"byte_end":8332563,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":7366},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8332784,"byte_end":8332793,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":7366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":8332978,"byte_end":8332987,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":7366},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8334336,"byte_end":8334343,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":4967},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8334377,"byte_end":8334384,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":4967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":8334591,"byte_end":8334598,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":4967},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8335208,"byte_end":8335212,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":7329},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8335422,"byte_end":8335426,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":7329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":8335559,"byte_end":8335563,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":7329},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8337082,"byte_end":8337091,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":7280},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8337351,"byte_end":8337360,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":7280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":8337553,"byte_end":8337562,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":7280},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":8368787,"byte_end":8368794,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":7257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":8369149,"byte_end":8369156,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":7257},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8267643,"byte_end":8267649,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":17,"index":68},"to":{"krate":0,"index":4862}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":8291631,"byte_end":8291633,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":4897},"to":{"krate":0,"index":4862}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8415209,"byte_end":8415220,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8421147,"byte_end":8421158,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5132},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8421244,"byte_end":8421255,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5132},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8421388,"byte_end":8421399,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5132},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8421424,"byte_end":8421435,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5132},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":8421531,"byte_end":8421536,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":394}},"from":{"krate":2,"index":8505},"to":{"krate":0,"index":5155}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8387863,"byte_end":8387872,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5178},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8388034,"byte_end":8388043,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5178},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8388112,"byte_end":8388124,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5190},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8388423,"byte_end":8388435,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":5190},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8390246,"byte_end":8390252,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":5166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8396553,"byte_end":8396559,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":5166},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8396698,"byte_end":8396706,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":5172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8401097,"byte_end":8401105,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":5172},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8401252,"byte_end":8401260,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5172},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8401723,"byte_end":8401728,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8406100,"byte_end":8406105,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5029},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8406142,"byte_end":8406147,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5029},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8406172,"byte_end":8406177,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5029},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8406546,"byte_end":8406551,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5029},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8406946,"byte_end":8406951,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":8408664,"byte_end":8408669,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5203},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":8428065,"byte_end":8428070,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":8438052,"byte_end":8438058,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":8438540,"byte_end":8438546,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5241},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8439184,"byte_end":8439190,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5295},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8439322,"byte_end":8439328,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5295},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8439735,"byte_end":8439743,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5304},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8441515,"byte_end":8441523,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8443951,"byte_end":8443959,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5304},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8444019,"byte_end":8444027,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5304},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":8444215,"byte_end":8444221,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8455611,"byte_end":8455613,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5369},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8456014,"byte_end":8456016,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5378},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8456323,"byte_end":8456332,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5795},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8456594,"byte_end":8456606,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5802},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8458301,"byte_end":8458305,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5402},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8458938,"byte_end":8458946,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5414},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8459212,"byte_end":8459216,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5402},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8459265,"byte_end":8459269,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5402},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8459748,"byte_end":8459750,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8460448,"byte_end":8460450,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8460598,"byte_end":8460600,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8460778,"byte_end":8460780,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5369},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8461180,"byte_end":8461182,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5369},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8461591,"byte_end":8461593,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8464713,"byte_end":8464715,"line_start":344,"line_end":344,"column_start":21,"column_end":23},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5378},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8465151,"byte_end":8465155,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8465619,"byte_end":8465623,"line_start":387,"line_end":387,"column_start":21,"column_end":25},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5402},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8466172,"byte_end":8466184,"line_start":404,"line_end":404,"column_start":32,"column_end":44},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5782},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":8467784,"byte_end":8467795,"line_start":475,"line_end":475,"column_start":20,"column_end":31},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":445},"to":{"krate":0,"index":5392}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":8470512,"byte_end":8470514,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":8476218,"byte_end":8476220,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5527},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":8476497,"byte_end":8476499,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":8479898,"byte_end":8479900,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5531},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8480574,"byte_end":8480589,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5567},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8480730,"byte_end":8480745,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5567},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8481203,"byte_end":8481220,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":5576},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8482198,"byte_end":8482215,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":5576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8484687,"byte_end":8484704,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5576},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":8484870,"byte_end":8484885,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":5567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8485995,"byte_end":8486004,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":5795},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8486164,"byte_end":8486173,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":5795},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8486659,"byte_end":8486671,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":5802},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8486704,"byte_end":8486716,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":5802},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8487056,"byte_end":8487068,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":5802},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8487297,"byte_end":8487306,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5813},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8487436,"byte_end":8487445,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5813},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8487931,"byte_end":8487943,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":5818},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8488249,"byte_end":8488261,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":5818},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8488418,"byte_end":8488429,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":5828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8488528,"byte_end":8488539,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":5828},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8488669,"byte_end":8488680,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":5828},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8489184,"byte_end":8489200,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":5838},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":8489237,"byte_end":8489253,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":5838},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8494070,"byte_end":8494079,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":5661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8510273,"byte_end":8510282,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":5661},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8510361,"byte_end":8510370,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":5661},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8510748,"byte_end":8510757,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":5661},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8510782,"byte_end":8510791,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":5661},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8510829,"byte_end":8510835,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":5849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8517241,"byte_end":8517247,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":5849},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8517320,"byte_end":8517326,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":5849},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8517748,"byte_end":8517760,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":5854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8517940,"byte_end":8517952,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":5854},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8518096,"byte_end":8518108,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":5854},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8518155,"byte_end":8518170,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":5859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8518700,"byte_end":8518715,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":5859},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8519001,"byte_end":8519016,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":5859},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8519054,"byte_end":8519060,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":5866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8524473,"byte_end":8524481,"line_start":1034,"line_end":1034,"column_start":6,"column_end":14},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":5872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8528144,"byte_end":8528152,"line_start":1172,"line_end":1172,"column_start":21,"column_end":29},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":5872},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":8528505,"byte_end":8528516,"line_start":1188,"line_end":1188,"column_start":6,"column_end":17},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":5890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":8542290,"byte_end":8542298,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":5920},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8549430,"byte_end":8549438,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":6068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8557280,"byte_end":8557288,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":6068},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8557427,"byte_end":8557435,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":6068},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8558400,"byte_end":8558408,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":6068},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8558489,"byte_end":8558497,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":6068},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8559364,"byte_end":8559372,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":7211},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8560257,"byte_end":8560263,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":5951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":8560826,"byte_end":8560829,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"kind":{"Impl":{"id":490}},"from":{"krate":5,"index":3905},"to":{"krate":0,"index":3918}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8564244,"byte_end":8564252,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":6020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8566028,"byte_end":8566036,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":6020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8566244,"byte_end":8566252,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":6020},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8566573,"byte_end":8566588,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":7134},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8566889,"byte_end":8566894,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":6048},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8567512,"byte_end":8567513,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6061},"to":{"krate":0,"index":6059}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8567698,"byte_end":8567709,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":6080},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8567853,"byte_end":8567864,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6080},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":8568011,"byte_end":8568022,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":6080},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/clock.rs","byte_start":8572607,"byte_end":8572612,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":6572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8583134,"byte_end":8583144,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":6577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8600787,"byte_end":8600797,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":6577},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8600825,"byte_end":8600835,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":6577},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8600972,"byte_end":8600982,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":6577},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8601364,"byte_end":8601369,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6602},"to":{"krate":0,"index":6521}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8603496,"byte_end":8603501,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":6602},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8603631,"byte_end":8603634,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":6596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":8603721,"byte_end":8603728,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8606266,"byte_end":8606271,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":8607249,"byte_end":8607254,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6619},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":8620578,"byte_end":8620589,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":8622567,"byte_end":8622585,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6627},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":8623157,"byte_end":8623175,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6627},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":8627148,"byte_end":8627153,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":8633381,"byte_end":8633386,"line_start":329,"line_end":329,"column_start":15,"column_end":20},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6631},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":8633594,"byte_end":8633599,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6631},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":8633624,"byte_end":8633629,"line_start":341,"line_end":341,"column_start":22,"column_end":27},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6631},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":8634006,"byte_end":8634012,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":8634657,"byte_end":8634663,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6655},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":8635108,"byte_end":8635120,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":8636030,"byte_end":8636042,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6659},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":8636326,"byte_end":8636331,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6663},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":8636422,"byte_end":8636427,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6663},"to":{"krate":0,"index":6521}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":8612144,"byte_end":8612150,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":8615799,"byte_end":8615805,"line_start":234,"line_end":234,"column_start":18,"column_end":24},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6667},"to":{"krate":0,"index":544}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":8617794,"byte_end":8617800,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6667},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":8618277,"byte_end":8618282,"line_start":327,"line_end":327,"column_start":6,"column_end":11},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":8619899,"byte_end":8619904,"line_start":389,"line_end":389,"column_start":21,"column_end":26},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6336},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8640699,"byte_end":8640704,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8641419,"byte_end":8641424,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6676},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":8641451,"byte_end":8641456,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6676},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8642162,"byte_end":8642169,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8645943,"byte_end":8645950,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6688},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8646079,"byte_end":8646086,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":534}},"from":{"krate":1,"index":7773},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8646201,"byte_end":8646208,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6688},"to":{"krate":2,"index":1992}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8646373,"byte_end":8646380,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6688},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8646485,"byte_end":8646492,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6688},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8646633,"byte_end":8646640,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6688},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8646801,"byte_end":8646808,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6688},"to":{"krate":2,"index":2027}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":8646915,"byte_end":8646922,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6688},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8650658,"byte_end":8650666,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":8651961,"byte_end":8651969,"line_start":164,"line_end":164,"column_start":32,"column_end":40},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6711},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8655301,"byte_end":8655308,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8655437,"byte_end":8655444,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":7117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8655982,"byte_end":8655989,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":7117},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8656567,"byte_end":8656574,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":6716},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8656718,"byte_end":8656725,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6716},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":8656762,"byte_end":8656767,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"kind":{"Impl":{"id":548}},"from":{"krate":1,"index":2541},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8674907,"byte_end":8674915,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":7071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":8675730,"byte_end":8675738,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":7071},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":8666671,"byte_end":8666676,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":8671428,"byte_end":8671433,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6494},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":8672549,"byte_end":8672556,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":6521}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":8658492,"byte_end":8658497,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":8664205,"byte_end":8664209,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":8676571,"byte_end":8676575,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":8678049,"byte_end":8678053,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6966},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/addr.rs","byte_start":8685272,"byte_end":8685279,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/entry.rs","byte_start":8687914,"byte_end":8687921,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":6821}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/generation.rs","byte_start":8688308,"byte_end":8688318,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":8689457,"byte_end":8689462,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":8689804,"byte_end":8689810,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":6846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":8693762,"byte_end":8693767,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":6844},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":8694073,"byte_end":8694079,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6846},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":8696222,"byte_end":8696227,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":8697906,"byte_end":8697911,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6890},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/slot.rs","byte_start":8698288,"byte_end":8698292,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":8699263,"byte_end":8699276,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":8700104,"byte_end":8700117,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6934},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":8679651,"byte_end":8679655,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6949},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":8679692,"byte_end":8679696,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6949},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":8679719,"byte_end":8679723,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":6949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":8681238,"byte_end":8681242,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":6949},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180390,"byte_end":180400,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":760},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180459,"byte_end":180469,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":760},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181758,"byte_end":181766,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181803,"byte_end":181811,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181865,"byte_end":181875,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":184879,"byte_end":184889,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":760},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186227,"byte_end":186235,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186434,"byte_end":186442,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/rand.rs","byte_start":196514,"byte_end":196522,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":7012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198062,"byte_end":198066,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1927},"to":{"krate":0,"index":815}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198069,"byte_end":198073,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1939},"to":{"krate":0,"index":815}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198384,"byte_end":198392,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7021},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202358,"byte_end":202366,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7030},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202616,"byte_end":202624,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7030},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202729,"byte_end":202737,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7030},"to":{"krate":2,"index":2111}},{"span":{"file_name":"/Users/elton/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":203046,"byte_end":203056,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7039},"to":{"krate":4294967295,"index":4294967295}}]}